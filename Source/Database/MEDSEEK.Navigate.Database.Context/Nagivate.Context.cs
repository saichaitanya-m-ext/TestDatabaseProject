//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MEDSEEK.Navigate.Database.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class NavigateEntities : DbContext
    {
        public NavigateEntities()
            : base("name=NavigateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [EdmFunction("NavigateEntities", "dbAdmin_DelimitedSplit8K")]
        public virtual IQueryable<dbAdmin_DelimitedSplit8K_Result> dbAdmin_DelimitedSplit8K(string pString, string pDelimiter1, string pDelimiter2)
        {
            var pStringParameter = pString != null ?
                new ObjectParameter("pString", pString) :
                new ObjectParameter("pString", typeof(string));
    
            var pDelimiter1Parameter = pDelimiter1 != null ?
                new ObjectParameter("pDelimiter1", pDelimiter1) :
                new ObjectParameter("pDelimiter1", typeof(string));
    
            var pDelimiter2Parameter = pDelimiter2 != null ?
                new ObjectParameter("pDelimiter2", pDelimiter2) :
                new ObjectParameter("pDelimiter2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<dbAdmin_DelimitedSplit8K_Result>("[NavigateEntities].[dbAdmin_DelimitedSplit8K](@pString, @pDelimiter1, @pDelimiter2)", pStringParameter, pDelimiter1Parameter, pDelimiter2Parameter);
        }
    
        [EdmFunction("NavigateEntities", "udf_GetDateKeys")]
        public virtual IQueryable<udf_GetDateKeys_Result> udf_GetDateKeys(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string period)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_GetDateKeys_Result>("[NavigateEntities].[udf_GetDateKeys](@StartDate, @EndDate, @Period)", startDateParameter, endDateParameter, periodParameter);
        }
    
        [EdmFunction("NavigateEntities", "udf_QualityMeasureSelect")]
        public virtual IQueryable<udf_QualityMeasureSelect_Result> udf_QualityMeasureSelect(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID, string vc_PerformanceType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            var vc_PerformanceTypeParameter = vc_PerformanceType != null ?
                new ObjectParameter("vc_PerformanceType", vc_PerformanceType) :
                new ObjectParameter("vc_PerformanceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_QualityMeasureSelect_Result>("[NavigateEntities].[udf_QualityMeasureSelect](@i_AppUserId, @i_PQRIQualityMeasureID, @vc_PerformanceType)", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter, vc_PerformanceTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "udf_SplitStringToTable")]
        public virtual IQueryable<udf_SplitStringToTable_Result> udf_SplitStringToTable(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_SplitStringToTable_Result>("[NavigateEntities].[udf_SplitStringToTable](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_ConvertListToTable_Int32")]
        public virtual IQueryable<ufn_ConvertListToTable_Int32_Result> ufn_ConvertListToTable_Int32(string stringList, Nullable<int> elementLen, string strDelimiter)
        {
            var stringListParameter = stringList != null ?
                new ObjectParameter("StringList", stringList) :
                new ObjectParameter("StringList", typeof(string));
    
            var elementLenParameter = elementLen.HasValue ?
                new ObjectParameter("ElementLen", elementLen) :
                new ObjectParameter("ElementLen", typeof(int));
    
            var strDelimiterParameter = strDelimiter != null ?
                new ObjectParameter("StrDelimiter", strDelimiter) :
                new ObjectParameter("StrDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_ConvertListToTable_Int32_Result>("[NavigateEntities].[ufn_ConvertListToTable_Int32](@StringList, @ElementLen, @StrDelimiter)", stringListParameter, elementLenParameter, strDelimiterParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_ConvertListToTable_Int64")]
        public virtual IQueryable<ufn_ConvertListToTable_Int64_Result> ufn_ConvertListToTable_Int64(string stringList, Nullable<int> elementLen, string strDelimiter)
        {
            var stringListParameter = stringList != null ?
                new ObjectParameter("StringList", stringList) :
                new ObjectParameter("StringList", typeof(string));
    
            var elementLenParameter = elementLen.HasValue ?
                new ObjectParameter("ElementLen", elementLen) :
                new ObjectParameter("ElementLen", typeof(int));
    
            var strDelimiterParameter = strDelimiter != null ?
                new ObjectParameter("StrDelimiter", strDelimiter) :
                new ObjectParameter("StrDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_ConvertListToTable_Int64_Result>("[NavigateEntities].[ufn_ConvertListToTable_Int64](@StringList, @ElementLen, @StrDelimiter)", stringListParameter, elementLenParameter, strDelimiterParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_ConvertListToTable_String")]
        public virtual IQueryable<ufn_ConvertListToTable_String_Result> ufn_ConvertListToTable_String(string stringList, Nullable<int> elementLen, string strDelimiter)
        {
            var stringListParameter = stringList != null ?
                new ObjectParameter("StringList", stringList) :
                new ObjectParameter("StringList", typeof(string));
    
            var elementLenParameter = elementLen.HasValue ?
                new ObjectParameter("ElementLen", elementLen) :
                new ObjectParameter("ElementLen", typeof(int));
    
            var strDelimiterParameter = strDelimiter != null ?
                new ObjectParameter("StrDelimiter", strDelimiter) :
                new ObjectParameter("StrDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_ConvertListToTable_String_Result>("[NavigateEntities].[ufn_ConvertListToTable_String](@StringList, @ElementLen, @StrDelimiter)", stringListParameter, elementLenParameter, strDelimiterParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetAdhocRemaindersByTaskID")]
        public virtual IQueryable<ufn_GetAdhocRemaindersByTaskID_Result> ufn_GetAdhocRemaindersByTaskID(Nullable<int> i_TaskId, Nullable<short> i_CommunicationSequence)
        {
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetAdhocRemaindersByTaskID_Result>("[NavigateEntities].[ufn_GetAdhocRemaindersByTaskID](@i_TaskId, @i_CommunicationSequence)", i_TaskIdParameter, i_CommunicationSequenceParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetAgeEligiblePopulation")]
        public virtual IQueryable<ufn_GetAgeEligiblePopulation_Result> ufn_GetAgeEligiblePopulation(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<bool> isDeceased, string patientStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetAgeEligiblePopulation_Result>("[NavigateEntities].[ufn_GetAgeEligiblePopulation](@AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @EligibleAge_MIN, @EligibleAge_MAX, @IsDeceased, @PatientStatus)", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, isDeceasedParameter, patientStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetAgeEligiblePopulation_SelectedPopulation")]
        public virtual IQueryable<ufn_GetAgeEligiblePopulation_SelectedPopulation_Result> ufn_GetAgeEligiblePopulation_SelectedPopulation(Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<bool> isDeceased, string patientStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetAgeEligiblePopulation_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetAgeEligiblePopulation_SelectedPopulation](@PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @EligibleAge_MIN, @EligibleAge_MAX, @IsDeceased, @PatientStatus)", populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, isDeceasedParameter, patientStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetAgeEligiblePopulation2")]
        public virtual IQueryable<ufn_GetAgeEligiblePopulation2_Result> ufn_GetAgeEligiblePopulation2(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<bool> isDeceased, string patientStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetAgeEligiblePopulation2_Result>("[NavigateEntities].[ufn_GetAgeEligiblePopulation2](@AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @EligibleAge_MIN, @EligibleAge_MAX, @IsDeceased, @PatientStatus)", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, isDeceasedParameter, patientStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetAgeEligiblePopulation2_SelectedPopulation")]
        public virtual IQueryable<ufn_GetAgeEligiblePopulation2_SelectedPopulation_Result> ufn_GetAgeEligiblePopulation2_SelectedPopulation(Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<bool> isDeceased, string patientStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetAgeEligiblePopulation2_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetAgeEligiblePopulation2_SelectedPopulation](@PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @EligibleAge_MIN, @EligibleAge_MAX, @IsDeceased, @PatientStatus)", populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, isDeceasedParameter, patientStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsuredBenefits")]
        public virtual IQueryable<ufn_GetInsuredBenefits_Result> ufn_GetInsuredBenefits(string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsuredBenefits_Result>("[NavigateEntities].[ufn_GetInsuredBenefits](@InsuranceProductTypes, @InsurancePlanTypes, @InsuranceBenefitTypes, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @IsPrimary, @Num_Months_Prior, @Num_Months_After, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_PriorParameter, num_Months_AfterParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsuredBenefits_SelectedPopulation")]
        public virtual IQueryable<ufn_GetInsuredBenefits_SelectedPopulation_Result> ufn_GetInsuredBenefits_SelectedPopulation(string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsuredBenefits_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetInsuredBenefits_SelectedPopulation](@InsuranceProductTypes, @InsurancePlanTypes, @InsuranceBenefitTypes, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @IsPrimary, @Num_Months_Prior, @Num_Months_After, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, isPrimaryParameter, num_Months_PriorParameter, num_Months_AfterParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsureds")]
        public virtual IQueryable<ufn_GetInsureds_Result> ufn_GetInsureds(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsureds_Result>("[NavigateEntities].[ufn_GetInsureds](@InsurancePlanType, @InsuranceProductType, @InsuranceBenefitType, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @IsPrimary, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsureds_SelectedPopulation")]
        public virtual IQueryable<ufn_GetInsureds_SelectedPopulation_Result> ufn_GetInsureds_SelectedPopulation(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<bool> isPrimary, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsureds_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetInsureds_SelectedPopulation](@InsurancePlanType, @InsuranceProductType, @InsuranceBenefitType, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @IsPrimary, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, isPrimaryParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsureds2")]
        public virtual IQueryable<ufn_GetInsureds2_Result> ufn_GetInsureds2(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsureds2_Result>("[NavigateEntities].[ufn_GetInsureds2](@InsurancePlanType, @InsuranceProductType, @InsuranceBenefitType, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @IsPrimary, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetInsureds2_SelectedPopulation")]
        public virtual IQueryable<ufn_GetInsureds2_SelectedPopulation_Result> ufn_GetInsureds2_SelectedPopulation(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<bool> isPrimary, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetInsureds2_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetInsureds2_SelectedPopulation](@InsurancePlanType, @InsuranceProductType, @InsuranceBenefitType, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @IsPrimary, @InsuranceGroupStatus, @InsurancePlanStatus, @InsurancePolicyStatus)", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, isPrimaryParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetNextCommunicationDetials")]
        public virtual IQueryable<ufn_GetNextCommunicationDetials_Result> ufn_GetNextCommunicationDetials(Nullable<int> i_TaskId)
        {
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetNextCommunicationDetials_Result>("[NavigateEntities].[ufn_GetNextCommunicationDetials](@i_TaskId)", i_TaskIdParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetPatientPCPHistory")]
        public virtual IQueryable<ufn_GetPatientPCPHistory_Result> ufn_GetPatientPCPHistory(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetPatientPCPHistory_Result>("[NavigateEntities].[ufn_GetPatientPCPHistory](@PatientID)", patientIDParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetPatientPCPInfo")]
        public virtual IQueryable<ufn_GetPatientPCPInfo_Result> ufn_GetPatientPCPInfo(Nullable<int> patientID, Nullable<System.DateTime> careBeginDate, Nullable<System.DateTime> careEndDate)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var careBeginDateParameter = careBeginDate.HasValue ?
                new ObjectParameter("CareBeginDate", careBeginDate) :
                new ObjectParameter("CareBeginDate", typeof(System.DateTime));
    
            var careEndDateParameter = careEndDate.HasValue ?
                new ObjectParameter("CareEndDate", careEndDate) :
                new ObjectParameter("CareEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetPatientPCPInfo_Result>("[NavigateEntities].[ufn_GetPatientPCPInfo](@PatientID, @CareBeginDate, @CareEndDate)", patientIDParameter, careBeginDateParameter, careEndDateParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation")]
        public virtual IQueryable<ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_Result> ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation(Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string c_ReportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_Result>("[NavigateEntities].[ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation](@PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @c_ReportType)", populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_MP")]
        public virtual IQueryable<ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_MP_Result> ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_MP(Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, string c_ReportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_MP_Result>("[NavigateEntities].[ufn_GetPatients_BodyVitalSigns_BloodPressure_SelectedPopulation_MP](@PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @c_ReportType)", populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetProgramRemaindersByTaskID")]
        public virtual IQueryable<ufn_GetProgramRemaindersByTaskID_Result> ufn_GetProgramRemaindersByTaskID(Nullable<int> i_TaskId, Nullable<int> i_ProgramID, Nullable<int> i_TasktypeId, Nullable<int> i_TypeID, Nullable<short> i_CommunicationSequence)
        {
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_TasktypeIdParameter = i_TasktypeId.HasValue ?
                new ObjectParameter("i_TasktypeId", i_TasktypeId) :
                new ObjectParameter("i_TasktypeId", typeof(int));
    
            var i_TypeIDParameter = i_TypeID.HasValue ?
                new ObjectParameter("i_TypeID", i_TypeID) :
                new ObjectParameter("i_TypeID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetProgramRemaindersByTaskID_Result>("[NavigateEntities].[ufn_GetProgramRemaindersByTaskID](@i_TaskId, @i_ProgramID, @i_TasktypeId, @i_TypeID, @i_CommunicationSequence)", i_TaskIdParameter, i_ProgramIDParameter, i_TasktypeIdParameter, i_TypeIDParameter, i_CommunicationSequenceParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetRemaindersByTaskID")]
        public virtual IQueryable<ufn_GetRemaindersByTaskID_Result> ufn_GetRemaindersByTaskID(Nullable<int> i_TaskId, Nullable<int> i_TasktypeId, Nullable<int> i_TypeID, Nullable<short> i_CommunicationSequence)
        {
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            var i_TasktypeIdParameter = i_TasktypeId.HasValue ?
                new ObjectParameter("i_TasktypeId", i_TasktypeId) :
                new ObjectParameter("i_TasktypeId", typeof(int));
    
            var i_TypeIDParameter = i_TypeID.HasValue ?
                new ObjectParameter("i_TypeID", i_TypeID) :
                new ObjectParameter("i_TypeID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetRemaindersByTaskID_Result>("[NavigateEntities].[ufn_GetRemaindersByTaskID](@i_TaskId, @i_TasktypeId, @i_TypeID, @i_CommunicationSequence)", i_TaskIdParameter, i_TasktypeIdParameter, i_TypeIDParameter, i_CommunicationSequenceParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_GetUserPCPInfo")]
        public virtual IQueryable<ufn_GetUserPCPInfo_Result> ufn_GetUserPCPInfo(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetUserPCPInfo_Result>("[NavigateEntities].[ufn_GetUserPCPInfo](@UserID)", userIDParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetDrugInfo_ByTableName")]
        public virtual IQueryable<ufn_HEDIS_GetDrugInfo_ByTableName_Result> ufn_HEDIS_GetDrugInfo_ByTableName(string tableName, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetDrugInfo_ByTableName_Result>("[NavigateEntities].[ufn_HEDIS_GetDrugInfo_ByTableName](@TableName, @ECTCodeVersion_Year, @ECTCodeStatus)", tableNameParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetDrugInfo_ByTableName2")]
        public virtual IQueryable<ufn_HEDIS_GetDrugInfo_ByTableName2_Result> ufn_HEDIS_GetDrugInfo_ByTableName2(string tableName, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetDrugInfo_ByTableName2_Result>("[NavigateEntities].[ufn_HEDIS_GetDrugInfo_ByTableName2](@TableName, @ECTCodeVersion_Year, @ECTCodeStatus)", tableNameParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetECTCodeInfo_ByTableName")]
        public virtual IQueryable<ufn_HEDIS_GetECTCodeInfo_ByTableName_Result> ufn_HEDIS_GetECTCodeInfo_ByTableName(string tableName, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetECTCodeInfo_ByTableName_Result>("[NavigateEntities].[ufn_HEDIS_GetECTCodeInfo_ByTableName](@TableName, @ECTCodeVersion_Year, @ECTCodeStatus)", tableNameParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetECTCodeInfo_ByTableName2")]
        public virtual IQueryable<ufn_HEDIS_GetECTCodeInfo_ByTableName2_Result> ufn_HEDIS_GetECTCodeInfo_ByTableName2(string tableName, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetECTCodeInfo_ByTableName2_Result>("[NavigateEntities].[ufn_HEDIS_GetECTCodeInfo_ByTableName2](@TableName, @ECTCodeVersion_Year, @ECTCodeStatus)", tableNameParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_Result> ufn_HEDIS_GetPatients_EncouterClaims(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ALL")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ALL_Result> ufn_HEDIS_GetPatients_EncouterClaims_ALL(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ALL_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ALL](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ALL_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ALL_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ALL_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ALL_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ALL_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ALL2")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ALL2_Result> ufn_HEDIS_GetPatients_EncouterClaims_ALL2(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ALL2_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ALL2](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ALL2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ALL2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ALL2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ALL2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ALL2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByDiagnosis2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_MP")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_MP_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_MP(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_MP_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_MP](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_MP")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_MP_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_MP(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, string i_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var i_ReportTypeParameter = i_ReportType != null ?
                new ObjectParameter("i_ReportType", i_ReportType) :
                new ObjectParameter("i_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_MP_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure_SelectedPopulation_SpecialtyContionEyeExam_MP](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @i_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, i_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByProcedure2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_MP")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_MP_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_MP(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_MP_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue_SelectedPopulation_MP](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_ByRevenue2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims2")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims2_Result> ufn_HEDIS_GetPatients_EncouterClaims2(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims2_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims2](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_EncouterClaims2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_EncouterClaims2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_EncouterClaims2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_EncouterClaims2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_EncouterClaims2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_LabData")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_LabData_Result> ufn_HEDIS_GetPatients_LabData(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_LabData_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_LabData](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_LabData_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_LabData_SelectedPopulation_Result> ufn_HEDIS_GetPatients_LabData_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_LabData_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_LabData_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_LabData_SelectedPopulation_MP")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_LabData_SelectedPopulation_MP_Result> ufn_HEDIS_GetPatients_LabData_SelectedPopulation_MP(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_LabData_SelectedPopulation_MP_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_LabData_SelectedPopulation_MP](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_LabData2")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_LabData2_Result> ufn_HEDIS_GetPatients_LabData2(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_LabData2_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_LabData2](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_LabData2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_LabData2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_LabData2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_LabData2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_LabData2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_RxClaims")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_RxClaims_Result> ufn_HEDIS_GetPatients_RxClaims(string eCTTableName, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_RxClaims_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_RxClaims](@ECTTableName, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus)", eCTTableNameParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_Result> ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportKey)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportKeyParameter = reportKey != null ?
                new ObjectParameter("ReportKey", reportKey) :
                new ObjectParameter("ReportKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @ReportKey)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportKeyParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_MP")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_MP_Result> ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_MP(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> i_ManagedPopulationID, Nullable<int> c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var c_ReportTypeParameter = c_ReportType.HasValue ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_MP_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_RxClaims_SelectedPopulation_MP](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @AnchorDate_Year, @AnchorDate_Month, @AnchorDate_Day, @i_ManagedPopulationID, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, i_ManagedPopulationIDParameter, c_ReportTypeParameter);
        }
    
        [EdmFunction("NavigateEntities", "ufn_HEDIS_GetPatients_RxClaims2_SelectedPopulation")]
        public virtual IQueryable<ufn_HEDIS_GetPatients_RxClaims2_SelectedPopulation_Result> ufn_HEDIS_GetPatients_RxClaims2_SelectedPopulation(string eCTTableName, Nullable<int> populationDefinitionID, Nullable<int> anchorYear_NumYearsOffset, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string c_ReportType)
        {
            var eCTTableNameParameter = eCTTableName != null ?
                new ObjectParameter("ECTTableName", eCTTableName) :
                new ObjectParameter("ECTTableName", typeof(string));
    
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorYear_NumYearsOffsetParameter = anchorYear_NumYearsOffset.HasValue ?
                new ObjectParameter("AnchorYear_NumYearsOffset", anchorYear_NumYearsOffset) :
                new ObjectParameter("AnchorYear_NumYearsOffset", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var c_ReportTypeParameter = c_ReportType != null ?
                new ObjectParameter("c_ReportType", c_ReportType) :
                new ObjectParameter("c_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_HEDIS_GetPatients_RxClaims2_SelectedPopulation_Result>("[NavigateEntities].[ufn_HEDIS_GetPatients_RxClaims2_SelectedPopulation](@ECTTableName, @PopulationDefinitionID, @AnchorYear_NumYearsOffset, @Num_Months_Prior, @Num_Months_After, @ECTCodeVersion_Year, @ECTCodeStatus, @c_ReportType)", eCTTableNameParameter, populationDefinitionIDParameter, anchorYear_NumYearsOffsetParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, c_ReportTypeParameter);
        }
    
        public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
        {
            var tablesToCheckParameter = tablesToCheck.HasValue ?
                new ObjectParameter("TablesToCheck", tablesToCheck) :
                new ObjectParameter("TablesToCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_GetUtcDate(Nullable<int> timeZoneAdjustment, ObjectParameter dateNow)
        {
            var timeZoneAdjustmentParameter = timeZoneAdjustment.HasValue ?
                new ObjectParameter("TimeZoneAdjustment", timeZoneAdjustment) :
                new ObjectParameter("TimeZoneAdjustment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_GetUtcDate", timeZoneAdjustmentParameter, dateNow);
        }
    
        public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordQuestionParameter = newPasswordQuestion != null ?
                new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
                new ObjectParameter("NewPasswordQuestion", typeof(string));
    
            var newPasswordAnswerParameter = newPasswordAnswer != null ?
                new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
                new ObjectParameter("NewPasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
                new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
                new ObjectParameter("MinutesSinceLastInActive", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual int aspnet_Membership_UpdateLastLoginAndActivityDates(string applicationName, string userName, Nullable<int> timeZoneAdjustment)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var timeZoneAdjustmentParameter = timeZoneAdjustment.HasValue ?
                new ObjectParameter("TimeZoneAdjustment", timeZoneAdjustment) :
                new ObjectParameter("TimeZoneAdjustment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateLastLoginAndActivityDates", applicationNameParameter, userNameParameter, timeZoneAdjustmentParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
                new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
                new ObjectParameter("IsPasswordCorrect", typeof(bool));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        public virtual int aspnet_Paths_CreatePath(Nullable<System.Guid> applicationId, string path, ObjectParameter pathId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
        }
    
        public virtual int aspnet_Personalization_GetApplicationId(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<bool> allUsersScope, string applicationName, ObjectParameter count)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_FindState(Nullable<bool> allUsersScope, string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_PersonalizationAdministration_FindUserStateSizeAndCount_Result> aspnet_PersonalizationAdministration_FindUserStateSizeAndCount(string path, string applicationName)
        {
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_PersonalizationAdministration_FindUserStateSizeAndCount_Result>("aspnet_PersonalizationAdministration_FindUserStateSizeAndCount", pathParameter, applicationNameParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_GetCountOfState(ObjectParameter count, Nullable<bool> allUsersScope, string applicationName, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", count, allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetSharedState(ObjectParameter count, string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", count, applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetUserState(ObjectParameter count, string applicationName, Nullable<System.DateTime> inactiveSinceDate, string userName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", count, applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_ResetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_SetPageSettings(string applicationName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationPerUser_GetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_ResetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_SetPageSettings(string applicationName, string userName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var propertyNamesParameter = propertyNames != null ?
                new ObjectParameter("PropertyNames", propertyNames) :
                new ObjectParameter("PropertyNames", typeof(string));
    
            var propertyValuesStringParameter = propertyValuesString != null ?
                new ObjectParameter("PropertyValuesString", propertyValuesString) :
                new ObjectParameter("PropertyValuesString", typeof(string));
    
            var propertyValuesBinaryParameter = propertyValuesBinary != null ?
                new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
                new ObjectParameter("PropertyValuesBinary", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            var isCurrentVersionParameter = isCurrentVersion.HasValue ?
                new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
                new ObjectParameter("IsCurrentVersion", typeof(bool));
    
            var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
                new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
                new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        public virtual int aspnet_Setup_RestorePermissions(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
        }
    
        public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
                new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
                new ObjectParameter("TablesToDeleteFrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        public virtual int aspnet_WebEvent_LogEvent(string eventId, Nullable<System.DateTime> eventTimeUtc, Nullable<System.DateTime> eventTime, string eventType, Nullable<decimal> eventSequence, Nullable<decimal> eventOccurrence, Nullable<int> eventCode, Nullable<int> eventDetailCode, string message, string applicationPath, string applicationVirtualPath, string machineName, string requestUrl, string exceptionType, string details)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var eventTimeUtcParameter = eventTimeUtc.HasValue ?
                new ObjectParameter("EventTimeUtc", eventTimeUtc) :
                new ObjectParameter("EventTimeUtc", typeof(System.DateTime));
    
            var eventTimeParameter = eventTime.HasValue ?
                new ObjectParameter("EventTime", eventTime) :
                new ObjectParameter("EventTime", typeof(System.DateTime));
    
            var eventTypeParameter = eventType != null ?
                new ObjectParameter("EventType", eventType) :
                new ObjectParameter("EventType", typeof(string));
    
            var eventSequenceParameter = eventSequence.HasValue ?
                new ObjectParameter("EventSequence", eventSequence) :
                new ObjectParameter("EventSequence", typeof(decimal));
    
            var eventOccurrenceParameter = eventOccurrence.HasValue ?
                new ObjectParameter("EventOccurrence", eventOccurrence) :
                new ObjectParameter("EventOccurrence", typeof(decimal));
    
            var eventCodeParameter = eventCode.HasValue ?
                new ObjectParameter("EventCode", eventCode) :
                new ObjectParameter("EventCode", typeof(int));
    
            var eventDetailCodeParameter = eventDetailCode.HasValue ?
                new ObjectParameter("EventDetailCode", eventDetailCode) :
                new ObjectParameter("EventDetailCode", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var applicationPathParameter = applicationPath != null ?
                new ObjectParameter("ApplicationPath", applicationPath) :
                new ObjectParameter("ApplicationPath", typeof(string));
    
            var applicationVirtualPathParameter = applicationVirtualPath != null ?
                new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath) :
                new ObjectParameter("ApplicationVirtualPath", typeof(string));
    
            var machineNameParameter = machineName != null ?
                new ObjectParameter("MachineName", machineName) :
                new ObjectParameter("MachineName", typeof(string));
    
            var requestUrlParameter = requestUrl != null ?
                new ObjectParameter("RequestUrl", requestUrl) :
                new ObjectParameter("RequestUrl", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EmptyAllTables(Nullable<bool> resetIdentity)
        {
            var resetIdentityParameter = resetIdentity.HasValue ?
                new ObjectParameter("ResetIdentity", resetIdentity) :
                new ObjectParameter("ResetIdentity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmptyAllTables", resetIdentityParameter);
        }
    
        public virtual ObjectResult<string> sp_generate_inserts(string table_name, string target_table, Nullable<bool> include_column_list, string from, Nullable<bool> include_timestamp, Nullable<bool> debug_mode, string owner, Nullable<bool> ommit_images, Nullable<bool> ommit_identity, Nullable<int> top, string cols_to_include, string cols_to_exclude, Nullable<bool> disable_constraints, Nullable<bool> ommit_computed_cols)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var target_tableParameter = target_table != null ?
                new ObjectParameter("target_table", target_table) :
                new ObjectParameter("target_table", typeof(string));
    
            var include_column_listParameter = include_column_list.HasValue ?
                new ObjectParameter("include_column_list", include_column_list) :
                new ObjectParameter("include_column_list", typeof(bool));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var include_timestampParameter = include_timestamp.HasValue ?
                new ObjectParameter("include_timestamp", include_timestamp) :
                new ObjectParameter("include_timestamp", typeof(bool));
    
            var debug_modeParameter = debug_mode.HasValue ?
                new ObjectParameter("debug_mode", debug_mode) :
                new ObjectParameter("debug_mode", typeof(bool));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var ommit_imagesParameter = ommit_images.HasValue ?
                new ObjectParameter("ommit_images", ommit_images) :
                new ObjectParameter("ommit_images", typeof(bool));
    
            var ommit_identityParameter = ommit_identity.HasValue ?
                new ObjectParameter("ommit_identity", ommit_identity) :
                new ObjectParameter("ommit_identity", typeof(bool));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            var cols_to_includeParameter = cols_to_include != null ?
                new ObjectParameter("cols_to_include", cols_to_include) :
                new ObjectParameter("cols_to_include", typeof(string));
    
            var cols_to_excludeParameter = cols_to_exclude != null ?
                new ObjectParameter("cols_to_exclude", cols_to_exclude) :
                new ObjectParameter("cols_to_exclude", typeof(string));
    
            var disable_constraintsParameter = disable_constraints.HasValue ?
                new ObjectParameter("disable_constraints", disable_constraints) :
                new ObjectParameter("disable_constraints", typeof(bool));
    
            var ommit_computed_colsParameter = ommit_computed_cols.HasValue ?
                new ObjectParameter("ommit_computed_cols", ommit_computed_cols) :
                new ObjectParameter("ommit_computed_cols", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_generate_inserts", table_nameParameter, target_tableParameter, include_column_listParameter, fromParameter, include_timestampParameter, debug_modeParameter, ownerParameter, ommit_imagesParameter, ommit_identityParameter, topParameter, cols_to_includeParameter, cols_to_excludeParameter, disable_constraintsParameter, ommit_computed_colsParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> spc_TrackDependencies(string objectName, string objectType)
        {
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            var objectTypeParameter = objectType != null ?
                new ObjectParameter("ObjectType", objectType) :
                new ObjectParameter("ObjectType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spc_TrackDependencies", objectNameParameter, objectTypeParameter);
        }
    
        public virtual int spGrantExectoAllStoredProcs(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGrantExectoAllStoredProcs", userParameter);
        }
    
        public virtual int spGrantViewExectoAllTableTypes(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGrantViewExectoAllTableTypes", userParameter);
        }
    
        public virtual int sproc_Insertusers(ObjectParameter id, string uname, string pwd)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_Insertusers", id, unameParameter, pwdParameter);
        }
    
        public virtual ObjectResult<usp_ACGADGCodes_Select_Result> usp_ACGADGCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGADGCodes_Select_Result>("usp_ACGADGCodes_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGConditions_Insert(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGConditions_Insert", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ACGEDCCodes_Select_Result> usp_ACGEDCCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGEDCCodes_Select_Result>("usp_ACGEDCCodes_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGExtractAssessments_Scheduling(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGExtractAssessments_Scheduling", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ACGMEDCCodes_Select_Result> usp_ACGMEDCCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGMEDCCodes_Select_Result>("usp_ACGMEDCCodes_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGMedicalServices_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGMedicalServices_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_ACGPatient_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGPatient_Select", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ACGpatientConditions_Select_Result> usp_ACGpatientConditions_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGpatientConditions_Select_Result>("usp_ACGpatientConditions_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual ObjectResult<usp_ACGPatientPharmacySpans_Select_Result> usp_ACGPatientPharmacySpans_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGPatientPharmacySpans_Select_Result>("usp_ACGPatientPharmacySpans_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGPatientResults_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientID, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIDParameter = i_PatientID.HasValue ?
                new ObjectParameter("i_PatientID", i_PatientID) :
                new ObjectParameter("i_PatientID", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGPatientResults_Select", i_AppUserIdParameter, i_PatientIDParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGPatientResults_SelectByPatient(Nullable<int> i_AppUserId, Nullable<int> i_PatientID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIDParameter = i_PatientID.HasValue ?
                new ObjectParameter("i_PatientID", i_PatientID) :
                new ObjectParameter("i_PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGPatientResults_SelectByPatient", i_AppUserIdParameter, i_PatientIDParameter);
        }
    
        public virtual int usp_ACGPharmacy_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGPharmacy_Select", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ACGRXMGCodes_Select_Result> usp_ACGRXMGCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_ACGResultsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ACGResultsIDParameter = i_ACGResultsID.HasValue ?
                new ObjectParameter("i_ACGResultsID", i_ACGResultsID) :
                new ObjectParameter("i_ACGResultsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGRXMGCodes_Select_Result>("usp_ACGRXMGCodes_Select", i_AppUserIdParameter, i_ACGResultsIDParameter);
        }
    
        public virtual int usp_ACGSchedule_Insert(Nullable<int> i_AppUserId, string vc_ACGType, Nullable<int> i_ACGSubTypeID, string vc_Frequency, Nullable<System.DateTime> d_StartDate, string vc_StatusCode, ObjectParameter o_ACGScheduleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ACGTypeParameter = vc_ACGType != null ?
                new ObjectParameter("vc_ACGType", vc_ACGType) :
                new ObjectParameter("vc_ACGType", typeof(string));
    
            var i_ACGSubTypeIDParameter = i_ACGSubTypeID.HasValue ?
                new ObjectParameter("i_ACGSubTypeID", i_ACGSubTypeID) :
                new ObjectParameter("i_ACGSubTypeID", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGSchedule_Insert", i_AppUserIdParameter, vc_ACGTypeParameter, i_ACGSubTypeIDParameter, vc_FrequencyParameter, d_StartDateParameter, vc_StatusCodeParameter, o_ACGScheduleID);
        }
    
        public virtual ObjectResult<usp_ACGSchedule_Select_Result> usp_ACGSchedule_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACGSchedule_Select_Result>("usp_ACGSchedule_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<string> usp_ACGSchedule_Select_DD(Nullable<int> i_AppUserId, string vc_Type)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_TypeParameter = vc_Type != null ?
                new ObjectParameter("vc_Type", vc_Type) :
                new ObjectParameter("vc_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ACGSchedule_Select_DD", i_AppUserIdParameter, vc_TypeParameter);
        }
    
        public virtual int usp_ACGSchedule_Update(Nullable<int> i_AppUserId, string vc_Frequency, string vc_StatusCode, Nullable<int> i_ACGScheduleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ACGScheduleIDParameter = i_ACGScheduleID.HasValue ?
                new ObjectParameter("i_ACGScheduleID", i_ACGScheduleID) :
                new ObjectParameter("i_ACGScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACGSchedule_Update", i_AppUserIdParameter, vc_FrequencyParameter, vc_StatusCodeParameter, i_ACGScheduleIDParameter);
        }
    
        public virtual int usp_Activity_Insert(Nullable<int> i_AppUserId, string vc_Name, string vc_Description, Nullable<int> i_ParentActivityId, string vc_StatusCode, ObjectParameter o_ActivityId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_ParentActivityIdParameter = i_ParentActivityId.HasValue ?
                new ObjectParameter("i_ParentActivityId", i_ParentActivityId) :
                new ObjectParameter("i_ParentActivityId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Activity_Insert", i_AppUserIdParameter, vc_NameParameter, vc_DescriptionParameter, i_ParentActivityIdParameter, vc_StatusCodeParameter, o_ActivityId);
        }
    
        public virtual ObjectResult<usp_Activity_Select_Result> usp_Activity_Select(Nullable<int> i_AppUserId, Nullable<int> i_ActivityId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ActivityIdParameter = i_ActivityId.HasValue ?
                new ObjectParameter("i_ActivityId", i_ActivityId) :
                new ObjectParameter("i_ActivityId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Activity_Select_Result>("usp_Activity_Select", i_AppUserIdParameter, i_ActivityIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Activity_Update(Nullable<int> i_AppUserId, Nullable<int> i_ActivityId, Nullable<int> i_ParentActivityId, string vc_Name, string vc_Description, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ActivityIdParameter = i_ActivityId.HasValue ?
                new ObjectParameter("i_ActivityId", i_ActivityId) :
                new ObjectParameter("i_ActivityId", typeof(int));
    
            var i_ParentActivityIdParameter = i_ParentActivityId.HasValue ?
                new ObjectParameter("i_ParentActivityId", i_ParentActivityId) :
                new ObjectParameter("i_ParentActivityId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Activity_Update", i_AppUserIdParameter, i_ActivityIdParameter, i_ParentActivityIdParameter, vc_NameParameter, vc_DescriptionParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_Activity_Update_StatusChain(Nullable<int> i_AppUserId, Nullable<int> i_ActivityId, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ActivityIdParameter = i_ActivityId.HasValue ?
                new ObjectParameter("i_ActivityId", i_ActivityId) :
                new ObjectParameter("i_ActivityId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Activity_Update_StatusChain", i_AppUserIdParameter, i_ActivityIdParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_AddressType_Select_DD_Result> usp_AddressType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressType_Select_DD_Result>("usp_AddressType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_AdhocTasksAttempts_Delete(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeID, Nullable<int> i_TaskGeneralizedID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            var i_TaskGeneralizedIDParameter = i_TaskGeneralizedID.HasValue ?
                new ObjectParameter("i_TaskGeneralizedID", i_TaskGeneralizedID) :
                new ObjectParameter("i_TaskGeneralizedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AdhocTasksAttempts_Delete", i_AppUserIdParameter, i_TaskTypeIDParameter, i_TaskGeneralizedIDParameter);
        }
    
        public virtual int usp_Answer_Insert(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, string v_AnswerDescription, Nullable<int> i_Score, string v_AnswerString, Nullable<int> i_SortOrder, string vc_StatusCode, string vc_AnswerLabel, ObjectParameter o_AnswerId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var v_AnswerDescriptionParameter = v_AnswerDescription != null ?
                new ObjectParameter("v_AnswerDescription", v_AnswerDescription) :
                new ObjectParameter("v_AnswerDescription", typeof(string));
    
            var i_ScoreParameter = i_Score.HasValue ?
                new ObjectParameter("i_Score", i_Score) :
                new ObjectParameter("i_Score", typeof(int));
    
            var v_AnswerStringParameter = v_AnswerString != null ?
                new ObjectParameter("v_AnswerString", v_AnswerString) :
                new ObjectParameter("v_AnswerString", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_AnswerLabelParameter = vc_AnswerLabel != null ?
                new ObjectParameter("vc_AnswerLabel", vc_AnswerLabel) :
                new ObjectParameter("vc_AnswerLabel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Answer_Insert", i_AppUserIdParameter, i_QuestionIdParameter, v_AnswerDescriptionParameter, i_ScoreParameter, v_AnswerStringParameter, i_SortOrderParameter, vc_StatusCodeParameter, vc_AnswerLabelParameter, o_AnswerId);
        }
    
        public virtual ObjectResult<usp_Answer_Select_Result> usp_Answer_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, Nullable<int> i_AnswerId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_AnswerIdParameter = i_AnswerId.HasValue ?
                new ObjectParameter("i_AnswerId", i_AnswerId) :
                new ObjectParameter("i_AnswerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Answer_Select_Result>("usp_Answer_Select", i_AppUserIdParameter, i_QuestionIdParameter, i_AnswerIdParameter);
        }
    
        public virtual int usp_Answer_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, Nullable<int> i_AnswerId, string v_AnswerDescription, Nullable<int> i_Score, string v_AnswerString, Nullable<int> i_SortOrder, string vc_StatusCode, string vc_AnswerLabel)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_AnswerIdParameter = i_AnswerId.HasValue ?
                new ObjectParameter("i_AnswerId", i_AnswerId) :
                new ObjectParameter("i_AnswerId", typeof(int));
    
            var v_AnswerDescriptionParameter = v_AnswerDescription != null ?
                new ObjectParameter("v_AnswerDescription", v_AnswerDescription) :
                new ObjectParameter("v_AnswerDescription", typeof(string));
    
            var i_ScoreParameter = i_Score.HasValue ?
                new ObjectParameter("i_Score", i_Score) :
                new ObjectParameter("i_Score", typeof(int));
    
            var v_AnswerStringParameter = v_AnswerString != null ?
                new ObjectParameter("v_AnswerString", v_AnswerString) :
                new ObjectParameter("v_AnswerString", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_AnswerLabelParameter = vc_AnswerLabel != null ?
                new ObjectParameter("vc_AnswerLabel", vc_AnswerLabel) :
                new ObjectParameter("vc_AnswerLabel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Answer_Update", i_AppUserIdParameter, i_QuestionIdParameter, i_AnswerIdParameter, v_AnswerDescriptionParameter, i_ScoreParameter, v_AnswerStringParameter, i_SortOrderParameter, vc_StatusCodeParameter, vc_AnswerLabelParameter);
        }
    
        public virtual ObjectResult<usp_AnswerType_Select_DD_Result> usp_AnswerType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnswerType_Select_DD_Result>("usp_AnswerType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationError_Select_Result> usp_ApplicationError_Select(Nullable<int> i_AppUserID, Nullable<bool> b_IsErrorType)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var b_IsErrorTypeParameter = b_IsErrorType.HasValue ?
                new ObjectParameter("b_IsErrorType", b_IsErrorType) :
                new ObjectParameter("b_IsErrorType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationError_Select_Result>("usp_ApplicationError_Select", i_AppUserIDParameter, b_IsErrorTypeParameter);
        }
    
        public virtual int usp_ApplicationErrorLog_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserID, string nv_IpAddress, string nv_ErrorDescription, string vc_PageName, string nv_TraceDescription, string vc_Status, ObjectParameter i_ErrorID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var nv_IpAddressParameter = nv_IpAddress != null ?
                new ObjectParameter("nv_IpAddress", nv_IpAddress) :
                new ObjectParameter("nv_IpAddress", typeof(string));
    
            var nv_ErrorDescriptionParameter = nv_ErrorDescription != null ?
                new ObjectParameter("nv_ErrorDescription", nv_ErrorDescription) :
                new ObjectParameter("nv_ErrorDescription", typeof(string));
    
            var vc_PageNameParameter = vc_PageName != null ?
                new ObjectParameter("vc_PageName", vc_PageName) :
                new ObjectParameter("vc_PageName", typeof(string));
    
            var nv_TraceDescriptionParameter = nv_TraceDescription != null ?
                new ObjectParameter("nv_TraceDescription", nv_TraceDescription) :
                new ObjectParameter("nv_TraceDescription", typeof(string));
    
            var vc_StatusParameter = vc_Status != null ?
                new ObjectParameter("vc_Status", vc_Status) :
                new ObjectParameter("vc_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ApplicationErrorLog_Insert", i_AppUserIdParameter, i_UserIDParameter, nv_IpAddressParameter, nv_ErrorDescriptionParameter, vc_PageNameParameter, nv_TraceDescriptionParameter, vc_StatusParameter, i_ErrorID);
        }
    
        public virtual ObjectResult<usp_ApplicationErrorLog_Select_Result> usp_ApplicationErrorLog_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, string nv_IpAddress, string vc_PageName, string vc_Status, Nullable<System.DateTime> d_CreatedDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var nv_IpAddressParameter = nv_IpAddress != null ?
                new ObjectParameter("nv_IpAddress", nv_IpAddress) :
                new ObjectParameter("nv_IpAddress", typeof(string));
    
            var vc_PageNameParameter = vc_PageName != null ?
                new ObjectParameter("vc_PageName", vc_PageName) :
                new ObjectParameter("vc_PageName", typeof(string));
    
            var vc_StatusParameter = vc_Status != null ?
                new ObjectParameter("vc_Status", vc_Status) :
                new ObjectParameter("vc_Status", typeof(string));
    
            var d_CreatedDateParameter = d_CreatedDate.HasValue ?
                new ObjectParameter("d_CreatedDate", d_CreatedDate) :
                new ObjectParameter("d_CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationErrorLog_Select_Result>("usp_ApplicationErrorLog_Select", i_AppUserIdParameter, i_UserIDParameter, nv_IpAddressParameter, vc_PageNameParameter, vc_StatusParameter, d_CreatedDateParameter);
        }
    
        public virtual ObjectResult<usp_Assignment_CareTeamTaskRights_Result> usp_Assignment_CareTeamTaskRights(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Assignment_CareTeamTaskRights_Result>("usp_Assignment_CareTeamTaskRights", i_AppUserIdParameter, i_ProgramIDParameter);
        }
    
        public virtual ObjectResult<usp_Assignment_CareTeamTreeView_Result> usp_Assignment_CareTeamTreeView(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, string v_CareTeamName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var v_CareTeamNameParameter = v_CareTeamName != null ?
                new ObjectParameter("v_CareTeamName", v_CareTeamName) :
                new ObjectParameter("v_CareTeamName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Assignment_CareTeamTreeView_Result>("usp_Assignment_CareTeamTreeView", i_AppUserIdParameter, i_ProgramIDParameter, v_CareTeamNameParameter);
        }
    
        public virtual int usp_Assignment_PatientConflict(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, Nullable<bool> isAutoConflict)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var isAutoConflictParameter = isAutoConflict.HasValue ?
                new ObjectParameter("IsAutoConflict", isAutoConflict) :
                new ObjectParameter("IsAutoConflict", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Assignment_PatientConflict", i_AppUserIdParameter, i_ProgramIDParameter, isAutoConflictParameter);
        }
    
        public virtual int usp_Assignment_PopulationDefinition(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Assignment_PopulationDefinition", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, i_ProgramIDParameter);
        }
    
        public virtual ObjectResult<usp_Assignment_Select_DD_Result> usp_Assignment_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Assignment_Select_DD_Result>("usp_Assignment_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Assignment_TaskbundleConflict(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, Nullable<bool> b_IsMapTaskBundleLevel, ObjectParameter o_ConflictReturn)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var b_IsMapTaskBundleLevelParameter = b_IsMapTaskBundleLevel.HasValue ?
                new ObjectParameter("b_IsMapTaskBundleLevel", b_IsMapTaskBundleLevel) :
                new ObjectParameter("b_IsMapTaskBundleLevel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Assignment_TaskbundleConflict", i_AppUserIdParameter, i_ProgramIDParameter, b_IsMapTaskBundleLevelParameter, o_ConflictReturn);
        }
    
        public virtual ObjectResult<usp_Assignment_TaskBundleTreeView_Result> usp_Assignment_TaskBundleTreeView(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, string v_TaskBundleName, string v_TaskBundleDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var v_TaskBundleNameParameter = v_TaskBundleName != null ?
                new ObjectParameter("v_TaskBundleName", v_TaskBundleName) :
                new ObjectParameter("v_TaskBundleName", typeof(string));
    
            var v_TaskBundleDescriptionParameter = v_TaskBundleDescription != null ?
                new ObjectParameter("v_TaskBundleDescription", v_TaskBundleDescription) :
                new ObjectParameter("v_TaskBundleDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Assignment_TaskBundleTreeView_Result>("usp_Assignment_TaskBundleTreeView", i_AppUserIdParameter, i_ProgramIDParameter, v_TaskBundleNameParameter, v_TaskBundleDescriptionParameter);
        }
    
        public virtual ObjectResult<usp_Assignment_Tasks_Result> usp_Assignment_Tasks(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Assignment_Tasks_Result>("usp_Assignment_Tasks", i_AppUserIdParameter, i_ProgramIDParameter);
        }
    
        public virtual int usp_AssignmentEnroll_Delete(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_CommunicationTypeId, Nullable<int> i_TemplateId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            var i_TemplateIdParameter = i_TemplateId.HasValue ?
                new ObjectParameter("i_TemplateId", i_TemplateId) :
                new ObjectParameter("i_TemplateId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssignmentEnroll_Delete", i_AppUserIdParameter, i_QuestionaireIdParameter, i_CommunicationTypeIdParameter, i_TemplateIdParameter, i_ProgramIdParameter);
        }
    
        public virtual int usp_AssignmentEnroll_Insert(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_CommunicationTypeId, Nullable<int> i_TemplateId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            var i_TemplateIdParameter = i_TemplateId.HasValue ?
                new ObjectParameter("i_TemplateId", i_TemplateId) :
                new ObjectParameter("i_TemplateId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssignmentEnroll_Insert", i_AppUserIdParameter, i_QuestionaireIdParameter, i_CommunicationTypeIdParameter, i_TemplateIdParameter, i_ProgramIdParameter);
        }
    
        public virtual ObjectResult<usp_AssignmentEnroll_Select_Result> usp_AssignmentEnroll_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AssignmentEnroll_Select_Result>("usp_AssignmentEnroll_Select", i_AppUserIdParameter, i_ProgramIdParameter);
        }
    
        public virtual int usp_AssignmentTaskTypeCommunications_InsertUpdate(Nullable<int> i_AppUserId, string vc_TaskType, Nullable<int> i_ProgramID, Nullable<int> i_GeneralizedID, Nullable<int> i_CommunicationTypeID, Nullable<int> i_ProgramTaskBundleID, Nullable<int> i_CommunicationSequence, Nullable<int> i_CommunicationAttemptDays, Nullable<int> i_NoOfDaysBeforeTaskClosedIncomplete, Nullable<int> i_CommunicationTemplateID, string v_StatusCode, Nullable<int> i_ProgramTaskTypeCommunicationID, string v_RemainderState)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_TaskTypeParameter = vc_TaskType != null ?
                new ObjectParameter("vc_TaskType", vc_TaskType) :
                new ObjectParameter("vc_TaskType", typeof(string));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_GeneralizedIDParameter = i_GeneralizedID.HasValue ?
                new ObjectParameter("i_GeneralizedID", i_GeneralizedID) :
                new ObjectParameter("i_GeneralizedID", typeof(int));
    
            var i_CommunicationTypeIDParameter = i_CommunicationTypeID.HasValue ?
                new ObjectParameter("i_CommunicationTypeID", i_CommunicationTypeID) :
                new ObjectParameter("i_CommunicationTypeID", typeof(int));
    
            var i_ProgramTaskBundleIDParameter = i_ProgramTaskBundleID.HasValue ?
                new ObjectParameter("i_ProgramTaskBundleID", i_ProgramTaskBundleID) :
                new ObjectParameter("i_ProgramTaskBundleID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(int));
    
            var i_CommunicationAttemptDaysParameter = i_CommunicationAttemptDays.HasValue ?
                new ObjectParameter("i_CommunicationAttemptDays", i_CommunicationAttemptDays) :
                new ObjectParameter("i_CommunicationAttemptDays", typeof(int));
    
            var i_NoOfDaysBeforeTaskClosedIncompleteParameter = i_NoOfDaysBeforeTaskClosedIncomplete.HasValue ?
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", i_NoOfDaysBeforeTaskClosedIncomplete) :
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", typeof(int));
    
            var i_CommunicationTemplateIDParameter = i_CommunicationTemplateID.HasValue ?
                new ObjectParameter("i_CommunicationTemplateID", i_CommunicationTemplateID) :
                new ObjectParameter("i_CommunicationTemplateID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ProgramTaskTypeCommunicationIDParameter = i_ProgramTaskTypeCommunicationID.HasValue ?
                new ObjectParameter("i_ProgramTaskTypeCommunicationID", i_ProgramTaskTypeCommunicationID) :
                new ObjectParameter("i_ProgramTaskTypeCommunicationID", typeof(int));
    
            var v_RemainderStateParameter = v_RemainderState != null ?
                new ObjectParameter("v_RemainderState", v_RemainderState) :
                new ObjectParameter("v_RemainderState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AssignmentTaskTypeCommunications_InsertUpdate", i_AppUserIdParameter, vc_TaskTypeParameter, i_ProgramIDParameter, i_GeneralizedIDParameter, i_CommunicationTypeIDParameter, i_ProgramTaskBundleIDParameter, i_CommunicationSequenceParameter, i_CommunicationAttemptDaysParameter, i_NoOfDaysBeforeTaskClosedIncompleteParameter, i_CommunicationTemplateIDParameter, v_StatusCodeParameter, i_ProgramTaskTypeCommunicationIDParameter, v_RemainderStateParameter);
        }
    
        public virtual ObjectResult<usp_AssignmentTaskTypeCommunications_Select_Result> usp_AssignmentTaskTypeCommunications_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTaskBundleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTaskBundleIDParameter = i_ProgramTaskBundleID.HasValue ?
                new ObjectParameter("i_ProgramTaskBundleID", i_ProgramTaskBundleID) :
                new ObjectParameter("i_ProgramTaskBundleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AssignmentTaskTypeCommunications_Select_Result>("usp_AssignmentTaskTypeCommunications_Select", i_AppUserIdParameter, i_ProgramTaskBundleIDParameter);
        }
    
        public virtual ObjectResult<usp_AuditPatientsName_Select_Result> usp_AuditPatientsName_Select(Nullable<int> i_AppUserID, string vc_PatientSearch)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var vc_PatientSearchParameter = vc_PatientSearch != null ?
                new ObjectParameter("vc_PatientSearch", vc_PatientSearch) :
                new ObjectParameter("vc_PatientSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuditPatientsName_Select_Result>("usp_AuditPatientsName_Select", i_AppUserIDParameter, vc_PatientSearchParameter);
        }
    
        public virtual int usp_Batch_AssignmentTasks(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID1)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramID1Parameter = i_ProgramID1.HasValue ?
                new ObjectParameter("i_ProgramID1", i_ProgramID1) :
                new ObjectParameter("i_ProgramID1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_AssignmentTasks", i_AppUserIdParameter, i_ProgramID1Parameter);
        }
    
        public virtual int usp_Batch_DrPatientsByInternal(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_DrPatientsByInternal", i_AppUserIdParameter, v_DateKeyParameter, i_DrIDParameter);
        }
    
        public virtual int usp_Batch_DrPatientsByInternalWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIdParameter = i_DrId.HasValue ?
                new ObjectParameter("i_DrId", i_DrId) :
                new ObjectParameter("i_DrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_DrPatientsByInternalWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_DrIdParameter);
        }
    
        public virtual int usp_Batch_DrPatientsByStandard(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIdParameter = i_DrId.HasValue ?
                new ObjectParameter("i_DrId", i_DrId) :
                new ObjectParameter("i_DrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_DrPatientsByStandard", i_AppUserIdParameter, v_DateKeyParameter, i_DrIdParameter);
        }
    
        public virtual int usp_Batch_DrWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_DrWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_DrIDParameter);
        }
    
        public virtual int usp_Batch_EnrollmentTasks(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID1)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramID1Parameter = i_ProgramID1.HasValue ?
                new ObjectParameter("i_ProgramID1", i_ProgramID1) :
                new ObjectParameter("i_ProgramID1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_EnrollmentTasks", i_AppUserIdParameter, i_ProgramID1Parameter);
        }
    
        public virtual int usp_Batch_MetricFrequencyUpdate(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricFrequencyUpdate", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_MetricFrequencyUpdateforPOPReport(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricFrequencyUpdateforPOPReport", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_MetricPatientsByInternal(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricPatientsByInternal", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_MetricPatientsByInternal_MP(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricPatientsByInternal_MP", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_MetricPatientsByInternalWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricPatientsByInternalWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_MetricPatientsByStandard(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID, string v__ReportType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            var v__ReportTypeParameter = v__ReportType != null ?
                new ObjectParameter("v__ReportType", v__ReportType) :
                new ObjectParameter("v__ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricPatientsByStandard", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter, v__ReportTypeParameter);
        }
    
        public virtual int usp_Batch_MetricWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_MetricWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_PopulateCode(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_PopulateCode", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_PopulateCodeGroup(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_PopulateCodeGroup", i_AppUserIdParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual int usp_Batch_PopulateCodeGroupForHedis(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_PopulateCodeGroupForHedis", i_AppUserIdParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual int usp_Batch_PopulateCodeGroupWrapper(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_PopulateCodeGroupWrapper", i_AppUserIdParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual int usp_Batch_PopulatePopulationDefinitionPatients(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_PopulatePopulationDefinitionPatients", i_AppUserIdParameter, v_DateKeyParameter, i_DrIDParameter);
        }
    
        public virtual int usp_Batch_SendIVRForTaskAttempts(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_SendIVRForTaskAttempts", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_SendLetterForTaskAttempts(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_SendLetterForTaskAttempts", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_SendMailsForTaskAttempts(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_SendMailsForTaskAttempts", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_SendSMSForTaskAttempts(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_SendSMSForTaskAttempts", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_StategyCompanionDrPatient(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_StategyCompanionDrPatient", i_AppUserIdParameter, v_DateKeyParameter, i_DrIDParameter);
        }
    
        public virtual int usp_Batch_StategyCompanionDrWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_DrID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_StategyCompanionDrWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_DrIDParameter);
        }
    
        public virtual int usp_Batch_StategyCompanionMetricPatientsByInternal(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_StategyCompanionMetricPatientsByInternal", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_StategyCompanionMetricWrapper(Nullable<int> i_AppUserId, string v_DateKey, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_DateKeyParameter = v_DateKey != null ?
                new ObjectParameter("v_DateKey", v_DateKey) :
                new ObjectParameter("v_DateKey", typeof(string));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_StategyCompanionMetricWrapper", i_AppUserIdParameter, v_DateKeyParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Batch_TaskAutoComplete(Nullable<int> i_AppUserId, Nullable<int> i_TaskID, string v_SpecialtyCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskIDParameter = i_TaskID.HasValue ?
                new ObjectParameter("i_TaskID", i_TaskID) :
                new ObjectParameter("i_TaskID", typeof(int));
    
            var v_SpecialtyCodeParameter = v_SpecialtyCode != null ?
                new ObjectParameter("v_SpecialtyCode", v_SpecialtyCode) :
                new ObjectParameter("v_SpecialtyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_TaskAutoComplete", i_AppUserIdParameter, i_TaskIDParameter, v_SpecialtyCodeParameter);
        }
    
        public virtual int usp_Batch_TaskRemainders(Nullable<int> i_AppUserId, Nullable<int> i_InputTaskID, Nullable<System.DateTime> d_TestingCurrentDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InputTaskIDParameter = i_InputTaskID.HasValue ?
                new ObjectParameter("i_InputTaskID", i_InputTaskID) :
                new ObjectParameter("i_InputTaskID", typeof(int));
    
            var d_TestingCurrentDateParameter = d_TestingCurrentDate.HasValue ?
                new ObjectParameter("d_TestingCurrentDate", d_TestingCurrentDate) :
                new ObjectParameter("d_TestingCurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_TaskRemainders", i_AppUserIdParameter, i_InputTaskIDParameter, d_TestingCurrentDateParameter);
        }
    
        public virtual int usp_Batch_UpdateTaskStatus(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_UpdateTaskStatus", i_AppUserIdParameter);
        }
    
        public virtual int usp_Batch_UserCommunicationUpdate(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Batch_UserCommunicationUpdate", i_AppUserIdParameter, i_ProgramIDParameter);
        }
    
        public virtual int usp_BatchTaskScheduling_Wrapper(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BatchTaskScheduling_Wrapper", i_AppUserIdParameter);
        }
    
        public virtual int usp_BloodTypes_Insert(Nullable<int> i_AppUserId, string v_BloodType, string v_StatusCode, ObjectParameter o_BloodTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_BloodTypeParameter = v_BloodType != null ?
                new ObjectParameter("v_BloodType", v_BloodType) :
                new ObjectParameter("v_BloodType", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BloodTypes_Insert", i_AppUserIdParameter, v_BloodTypeParameter, v_StatusCodeParameter, o_BloodTypeId);
        }
    
        public virtual ObjectResult<usp_BloodTypes_Select_Result> usp_BloodTypes_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BloodTypes_Select_Result>("usp_BloodTypes_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_BloodTypes_Select_DD_Result> usp_BloodTypes_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BloodTypes_Select_DD_Result>("usp_BloodTypes_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_BloodTypes_Update(Nullable<int> i_AppUserId, Nullable<int> i_BloodTypeId, string v_BloodType, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_BloodTypeIdParameter = i_BloodTypeId.HasValue ?
                new ObjectParameter("i_BloodTypeId", i_BloodTypeId) :
                new ObjectParameter("i_BloodTypeId", typeof(int));
    
            var v_BloodTypeParameter = v_BloodType != null ?
                new ObjectParameter("v_BloodType", v_BloodType) :
                new ObjectParameter("v_BloodType", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BloodTypes_Update", i_AppUserIdParameter, i_BloodTypeIdParameter, v_BloodTypeParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CallTimePreference_Select_DD_Result> usp_CallTimePreference_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CallTimePreference_Select_DD_Result>("usp_CallTimePreference_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CareManagementSummary_Select_Result> usp_CareManagementSummary_Select(Nullable<int> i_AppUserId, Nullable<int> i_managedPopulationID, Nullable<int> i_taskbundleID, Nullable<int> i_taskID, Nullable<int> i_ReminderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_managedPopulationIDParameter = i_managedPopulationID.HasValue ?
                new ObjectParameter("i_managedPopulationID", i_managedPopulationID) :
                new ObjectParameter("i_managedPopulationID", typeof(int));
    
            var i_taskbundleIDParameter = i_taskbundleID.HasValue ?
                new ObjectParameter("i_taskbundleID", i_taskbundleID) :
                new ObjectParameter("i_taskbundleID", typeof(int));
    
            var i_taskIDParameter = i_taskID.HasValue ?
                new ObjectParameter("i_taskID", i_taskID) :
                new ObjectParameter("i_taskID", typeof(int));
    
            var i_ReminderIDParameter = i_ReminderID.HasValue ?
                new ObjectParameter("i_ReminderID", i_ReminderID) :
                new ObjectParameter("i_ReminderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareManagementSummary_Select_Result>("usp_CareManagementSummary_Select", i_AppUserIdParameter, i_managedPopulationIDParameter, i_taskbundleIDParameter, i_taskIDParameter, i_ReminderIDParameter);
        }
    
        public virtual ObjectResult<usp_CareManagementSummary_Select_DD_Result> usp_CareManagementSummary_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_TaskBundleId, Nullable<int> i_TaskGeneralisedId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_TaskBundleIdParameter = i_TaskBundleId.HasValue ?
                new ObjectParameter("i_TaskBundleId", i_TaskBundleId) :
                new ObjectParameter("i_TaskBundleId", typeof(int));
    
            var i_TaskGeneralisedIdParameter = i_TaskGeneralisedId.HasValue ?
                new ObjectParameter("i_TaskGeneralisedId", i_TaskGeneralisedId) :
                new ObjectParameter("i_TaskGeneralisedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareManagementSummary_Select_DD_Result>("usp_CareManagementSummary_Select_DD", i_AppUserIdParameter, i_ProgramIdParameter, i_TaskBundleIdParameter, i_TaskGeneralisedIdParameter);
        }
    
        public virtual ObjectResult<usp_CareProvider_Select_Result> usp_CareProvider_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareProvider_Select_Result>("usp_CareProvider_Select", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual int usp_CareProvider_User_SelectMore(Nullable<int> i_AppUserId, Nullable<int> i_UserProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserProviderIdParameter = i_UserProviderId.HasValue ?
                new ObjectParameter("i_UserProviderId", i_UserProviderId) :
                new ObjectParameter("i_UserProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProvider_User_SelectMore", i_AppUserIdParameter, i_UserProviderIdParameter);
        }
    
        public virtual ObjectResult<usp_CareProviderDashBoard_DD_Result> usp_CareProviderDashBoard_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareProviderDashBoard_DD_Result>("usp_CareProviderDashBoard_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CareProviderDashBoard_MissedOpportunity_Filter_Result> usp_CareProviderDashBoard_MissedOpportunity_Filter(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareProviderDashBoard_MissedOpportunity_Filter_Result>("usp_CareProviderDashBoard_MissedOpportunity_Filter", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_MyPatients_CategoryView_ByMeasure(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string v_DatePeriod, Nullable<bool> b_IsDiseaseDistribution, Nullable<int> i_NextOrPrevious)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_DatePeriodParameter = v_DatePeriod != null ?
                new ObjectParameter("v_DatePeriod", v_DatePeriod) :
                new ObjectParameter("v_DatePeriod", typeof(string));
    
            var b_IsDiseaseDistributionParameter = b_IsDiseaseDistribution.HasValue ?
                new ObjectParameter("b_IsDiseaseDistribution", b_IsDiseaseDistribution) :
                new ObjectParameter("b_IsDiseaseDistribution", typeof(bool));
    
            var i_NextOrPreviousParameter = i_NextOrPrevious.HasValue ?
                new ObjectParameter("i_NextOrPrevious", i_NextOrPrevious) :
                new ObjectParameter("i_NextOrPrevious", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_MyPatients_CategoryView_ByMeasure", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, v_DatePeriodParameter, b_IsDiseaseDistributionParameter, i_NextOrPreviousParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_MyPatients_CategoryView_ByMeasureDrillDown(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_DiseaseMeasureId, string v_DatePeriod, string v_Range, Nullable<bool> b_IsDiseaseDistribution)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_DiseaseMeasureIdParameter = i_DiseaseMeasureId.HasValue ?
                new ObjectParameter("i_DiseaseMeasureId", i_DiseaseMeasureId) :
                new ObjectParameter("i_DiseaseMeasureId", typeof(int));
    
            var v_DatePeriodParameter = v_DatePeriod != null ?
                new ObjectParameter("v_DatePeriod", v_DatePeriod) :
                new ObjectParameter("v_DatePeriod", typeof(string));
    
            var v_RangeParameter = v_Range != null ?
                new ObjectParameter("v_Range", v_Range) :
                new ObjectParameter("v_Range", typeof(string));
    
            var b_IsDiseaseDistributionParameter = b_IsDiseaseDistribution.HasValue ?
                new ObjectParameter("b_IsDiseaseDistribution", b_IsDiseaseDistribution) :
                new ObjectParameter("b_IsDiseaseDistribution", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_MyPatients_CategoryView_ByMeasureDrillDown", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, i_DiseaseMeasureIdParameter, v_DatePeriodParameter, v_RangeParameter, b_IsDiseaseDistributionParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_MyPatients_DiseaseView_TrendGraph(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId, Nullable<int> i_MeasureId, string v_TimePeriod, Nullable<bool> b_IsCareProvider)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var v_TimePeriodParameter = v_TimePeriod != null ?
                new ObjectParameter("v_TimePeriod", v_TimePeriod) :
                new ObjectParameter("v_TimePeriod", typeof(string));
    
            var b_IsCareProviderParameter = b_IsCareProvider.HasValue ?
                new ObjectParameter("b_IsCareProvider", b_IsCareProvider) :
                new ObjectParameter("b_IsCareProvider", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_MyPatients_DiseaseView_TrendGraph", i_AppUserIdParameter, i_DiseaseIdParameter, i_MeasureIdParameter, v_TimePeriodParameter, b_IsCareProviderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CareProviderDashBoard_MyPatients_PatientViewPaging_PD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CareProviderDashBoard_MyPatients_PatientViewPaging_PD", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_MyPatients_ProcessOutComeDrillDown(Nullable<int> i_AppUserId, Nullable<int> i_Disease, string v_Range, Nullable<bool> b_IsCareProvider, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, string v_InputType, Nullable<int> i_InputTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseParameter = i_Disease.HasValue ?
                new ObjectParameter("i_Disease", i_Disease) :
                new ObjectParameter("i_Disease", typeof(int));
    
            var v_RangeParameter = v_Range != null ?
                new ObjectParameter("v_Range", v_Range) :
                new ObjectParameter("v_Range", typeof(string));
    
            var b_IsCareProviderParameter = b_IsCareProvider.HasValue ?
                new ObjectParameter("b_IsCareProvider", b_IsCareProvider) :
                new ObjectParameter("b_IsCareProvider", typeof(bool));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var v_InputTypeParameter = v_InputType != null ?
                new ObjectParameter("v_InputType", v_InputType) :
                new ObjectParameter("v_InputType", typeof(string));
    
            var i_InputTypeIdParameter = i_InputTypeId.HasValue ?
                new ObjectParameter("i_InputTypeId", i_InputTypeId) :
                new ObjectParameter("i_InputTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_MyPatients_ProcessOutComeDrillDown", i_AppUserIdParameter, i_DiseaseParameter, v_RangeParameter, b_IsCareProviderParameter, d_FromDateParameter, d_ToDateParameter, v_InputTypeParameter, i_InputTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_CareProviderDashBoard_MyTask_Filter_Result> usp_CareProviderDashBoard_MyTask_Filter(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareProviderDashBoard_MyTask_Filter_Result>("usp_CareProviderDashBoard_MyTask_Filter", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_MyTasksHomePage_Select(Nullable<int> i_AppUserId, string v_ReportType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ReportTypeParameter = v_ReportType != null ?
                new ObjectParameter("v_ReportType", v_ReportType) :
                new ObjectParameter("v_ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_MyTasksHomePage_Select", i_AppUserIdParameter, v_ReportTypeParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_PatientDetailByDisease(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_PatientDetailByDisease", i_AppUserIdParameter, i_DiseaseIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_PatientDetailByProgram(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_PatientDetailByProgram", i_AppUserIdParameter, i_ProgramIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_PatientLetters(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_PatientLetters", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_PatientsByDisease(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_PatientsByDisease", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_PatientsByProgram(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_PatientsByProgram", i_AppUserIdParameter);
        }
    
        public virtual int usp_CareProviderDashBoard_Speciality(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareProviderDashBoard_Speciality", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual int usp_CareTeam_Insert(Nullable<int> i_AppUserId, string vc_CareTeamName, string vc_Description, string vc_StatusCode, Nullable<int> i_DiseaseId, ObjectParameter o_CareTeamId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_CareTeamNameParameter = vc_CareTeamName != null ?
                new ObjectParameter("vc_CareTeamName", vc_CareTeamName) :
                new ObjectParameter("vc_CareTeamName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareTeam_Insert", i_AppUserIdParameter, vc_CareTeamNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_DiseaseIdParameter, o_CareTeamId);
        }
    
        public virtual ObjectResult<usp_CareTeam_Select_Result> usp_CareTeam_Select(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeam_Select_Result>("usp_CareTeam_Select", i_AppUserIdParameter, i_CareTeamIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CareTeam_Select_DD_Result> usp_CareTeam_Select_DD(Nullable<int> i_AppUserId, string v_CareTeamName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_CareTeamNameParameter = v_CareTeamName != null ?
                new ObjectParameter("v_CareTeamName", v_CareTeamName) :
                new ObjectParameter("v_CareTeamName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeam_Select_DD_Result>("usp_CareTeam_Select_DD", i_AppUserIdParameter, v_CareTeamNameParameter);
        }
    
        public virtual int usp_CareTeam_Update(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamId, string vc_CareTeamName, string vc_Description, Nullable<int> i_DiseaseId, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var vc_CareTeamNameParameter = vc_CareTeamName != null ?
                new ObjectParameter("vc_CareTeamName", vc_CareTeamName) :
                new ObjectParameter("vc_CareTeamName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareTeam_Update", i_AppUserIdParameter, i_CareTeamIdParameter, vc_CareTeamNameParameter, vc_DescriptionParameter, i_DiseaseIdParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<string> usp_CareTeamManager_Select(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamIDParameter = i_CareTeamID.HasValue ?
                new ObjectParameter("i_CareTeamID", i_CareTeamID) :
                new ObjectParameter("i_CareTeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_CareTeamManager_Select", i_AppUserIdParameter, i_CareTeamIDParameter);
        }
    
        public virtual ObjectResult<usp_CareTeamMembders_SelectedByCareProvider_Result> usp_CareTeamMembders_SelectedByCareProvider(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeamMembders_SelectedByCareProvider_Result>("usp_CareTeamMembders_SelectedByCareProvider", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CareTeamMember_Patient_ViewData(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CareTeamMember_Patient_ViewData", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CareTeamMembers_ByProgram_DD_Result> usp_CareTeamMembers_ByProgram_DD(Nullable<int> i_AppUserId, string v_TaskTypeName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TaskTypeNameParameter = v_TaskTypeName != null ?
                new ObjectParameter("v_TaskTypeName", v_TaskTypeName) :
                new ObjectParameter("v_TaskTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeamMembers_ByProgram_DD_Result>("usp_CareTeamMembers_ByProgram_DD", i_AppUserIdParameter, v_TaskTypeNameParameter);
        }
    
        public virtual int usp_CareTeamMembers_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_CareTeamId, Nullable<int> i_IsCareTeamManager, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_IsCareTeamManagerParameter = i_IsCareTeamManager.HasValue ?
                new ObjectParameter("i_IsCareTeamManager", i_IsCareTeamManager) :
                new ObjectParameter("i_IsCareTeamManager", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareTeamMembers_Insert", i_AppUserIdParameter, i_UserIdParameter, i_CareTeamIdParameter, i_IsCareTeamManagerParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CareTeamMembers_Select_Result> usp_CareTeamMembers_Select(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeamMembers_Select_Result>("usp_CareTeamMembers_Select", i_AppUserIdParameter, i_CareTeamIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CareTeamMembers_Select_ByCareTeamUser_Result> usp_CareTeamMembers_Select_ByCareTeamUser(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamUserIDParameter = i_CareTeamUserID.HasValue ?
                new ObjectParameter("i_CareTeamUserID", i_CareTeamUserID) :
                new ObjectParameter("i_CareTeamUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeamMembers_Select_ByCareTeamUser_Result>("usp_CareTeamMembers_Select_ByCareTeamUser", i_AppUserIdParameter, i_CareTeamUserIDParameter);
        }
    
        public virtual int usp_CareTeamMembers_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_CareTeamId, Nullable<int> i_IsCareTeamManager, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_IsCareTeamManagerParameter = i_IsCareTeamManager.HasValue ?
                new ObjectParameter("i_IsCareTeamManager", i_IsCareTeamManager) :
                new ObjectParameter("i_IsCareTeamManager", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareTeamMembers_Update", i_AppUserIdParameter, i_UserIdParameter, i_CareTeamIdParameter, i_IsCareTeamManagerParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_CareTeamTaskRights_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_TaskTypeId, Nullable<int> i_CareTeamId, string vc_StatusCode, ObjectParameter o_CareTeamTaskRightsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_TaskTypeIdParameter = i_TaskTypeId.HasValue ?
                new ObjectParameter("i_TaskTypeId", i_TaskTypeId) :
                new ObjectParameter("i_TaskTypeId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CareTeamTaskRights_Insert", i_AppUserIdParameter, i_UserIdParameter, i_TaskTypeIdParameter, i_CareTeamIdParameter, vc_StatusCodeParameter, o_CareTeamTaskRightsId);
        }
    
        public virtual ObjectResult<usp_CareTeamTaskRights_Select_Result> usp_CareTeamTaskRights_Select(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamTaskRightsId, Nullable<int> i_UserId, string v_StatusCode, Nullable<int> i_CareTeamID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamTaskRightsIdParameter = i_CareTeamTaskRightsId.HasValue ?
                new ObjectParameter("i_CareTeamTaskRightsId", i_CareTeamTaskRightsId) :
                new ObjectParameter("i_CareTeamTaskRightsId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_CareTeamIDParameter = i_CareTeamID.HasValue ?
                new ObjectParameter("i_CareTeamID", i_CareTeamID) :
                new ObjectParameter("i_CareTeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CareTeamTaskRights_Select_Result>("usp_CareTeamTaskRights_Select", i_AppUserIdParameter, i_CareTeamTaskRightsIdParameter, i_UserIdParameter, v_StatusCodeParameter, i_CareTeamIDParameter);
        }
    
        public virtual int Usp_CareTeamTaskRights_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_TaskTypeId, Nullable<int> i_CareTeamId, string vc_StatusCode, Nullable<int> i_CareTeamTaskRightsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_TaskTypeIdParameter = i_TaskTypeId.HasValue ?
                new ObjectParameter("i_TaskTypeId", i_TaskTypeId) :
                new ObjectParameter("i_TaskTypeId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_CareTeamTaskRightsIdParameter = i_CareTeamTaskRightsId.HasValue ?
                new ObjectParameter("i_CareTeamTaskRightsId", i_CareTeamTaskRightsId) :
                new ObjectParameter("i_CareTeamTaskRightsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CareTeamTaskRights_Update", i_AppUserIdParameter, i_UserIdParameter, i_TaskTypeIdParameter, i_CareTeamIdParameter, vc_StatusCodeParameter, i_CareTeamTaskRightsIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CareTeamUser_TaskRules(Nullable<int> i_AppUserId, string v_TaskTypeName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TaskTypeNameParameter = v_TaskTypeName != null ?
                new ObjectParameter("v_TaskTypeName", v_TaskTypeName) :
                new ObjectParameter("v_TaskTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CareTeamUser_TaskRules", i_AppUserIdParameter, v_TaskTypeNameParameter);
        }
    
        public virtual ObjectResult<usp_Claim_Select_Result> usp_Claim_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Claim_Select_Result>("usp_Claim_Select", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ClaimType_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ClaimType_Select", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Clinic_DD_Result> usp_Clinic_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Clinic_DD_Result>("usp_Clinic_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_ClinicPCPHealthPlanProduct_DD_PatientSearch(Nullable<int> i_AppUserId, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ClinicPCPHealthPlanProduct_DD_PatientSearch", i_AppUserIdParameter, v_SecurityRoleNameParameter);
        }
    
        public virtual int usp_ClinicPCPHealthPlanProduct_DD_PatientSearch_OLD(Nullable<int> i_AppUserId, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ClinicPCPHealthPlanProduct_DD_PatientSearch_OLD", i_AppUserIdParameter, v_SecurityRoleNameParameter);
        }
    
        public virtual ObjectResult<usp_CodeGropuingBuildDefinition_InternalOrHEDIS_Result> usp_CodeGropuingBuildDefinition_InternalOrHEDIS(Nullable<int> i_AppUserID, Nullable<int> i_CodeGroupingID, string vc_CodeGroupType)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var vc_CodeGroupTypeParameter = vc_CodeGroupType != null ?
                new ObjectParameter("vc_CodeGroupType", vc_CodeGroupType) :
                new ObjectParameter("vc_CodeGroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGropuingBuildDefinition_InternalOrHEDIS_Result>("usp_CodeGropuingBuildDefinition_InternalOrHEDIS", i_AppUserIDParameter, i_CodeGroupingIDParameter, vc_CodeGroupTypeParameter);
        }
    
        public virtual ObjectResult<usp_CodeGropuingBuildDefinition_PDF_Result> usp_CodeGropuingBuildDefinition_PDF(Nullable<int> i_AppUserID, Nullable<int> i_CodeGroupingID, string vc_CodeGroupType)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var vc_CodeGroupTypeParameter = vc_CodeGroupType != null ?
                new ObjectParameter("vc_CodeGroupType", vc_CodeGroupType) :
                new ObjectParameter("vc_CodeGroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGropuingBuildDefinition_PDF_Result>("usp_CodeGropuingBuildDefinition_PDF", i_AppUserIDParameter, i_CodeGroupingIDParameter, vc_CodeGroupTypeParameter);
        }
    
        public virtual ObjectResult<usp_CodeGrouperSummary_SELECT_Result> usp_CodeGrouperSummary_SELECT(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingTypeID, Nullable<int> i_CodegroupersID, Nullable<int> i_CodeGroupingSourceID, string vc_CodegroupingName, Nullable<bool> b_display)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingTypeIDParameter = i_CodeGroupingTypeID.HasValue ?
                new ObjectParameter("i_CodeGroupingTypeID", i_CodeGroupingTypeID) :
                new ObjectParameter("i_CodeGroupingTypeID", typeof(int));
    
            var i_CodegroupersIDParameter = i_CodegroupersID.HasValue ?
                new ObjectParameter("i_CodegroupersID", i_CodegroupersID) :
                new ObjectParameter("i_CodegroupersID", typeof(int));
    
            var i_CodeGroupingSourceIDParameter = i_CodeGroupingSourceID.HasValue ?
                new ObjectParameter("i_CodeGroupingSourceID", i_CodeGroupingSourceID) :
                new ObjectParameter("i_CodeGroupingSourceID", typeof(int));
    
            var vc_CodegroupingNameParameter = vc_CodegroupingName != null ?
                new ObjectParameter("vc_CodegroupingName", vc_CodegroupingName) :
                new ObjectParameter("vc_CodegroupingName", typeof(string));
    
            var b_displayParameter = b_display.HasValue ?
                new ObjectParameter("b_display", b_display) :
                new ObjectParameter("b_display", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGrouperSummary_SELECT_Result>("usp_CodeGrouperSummary_SELECT", i_AppUserIdParameter, i_CodeGroupingTypeIDParameter, i_CodegroupersIDParameter, i_CodeGroupingSourceIDParameter, vc_CodegroupingNameParameter, b_displayParameter);
        }
    
        public virtual ObjectResult<usp_CodeGrouping_DD_Result> usp_CodeGrouping_DD(Nullable<int> i_AppUserId, string vc_CodeGroupingName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_CodeGroupingNameParameter = vc_CodeGroupingName != null ?
                new ObjectParameter("vc_CodeGroupingName", vc_CodeGroupingName) :
                new ObjectParameter("vc_CodeGroupingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGrouping_DD_Result>("usp_CodeGrouping_DD", i_AppUserIdParameter, vc_CodeGroupingNameParameter);
        }
    
        public virtual ObjectResult<Usp_CodeGrouping_Filter_Result> Usp_CodeGrouping_Filter(Nullable<int> i_AppUserId, string v_CodeGroupingName, Nullable<int> i_CodeGroupingID, Nullable<int> v_CodeGroupingTypeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_CodeGroupingNameParameter = v_CodeGroupingName != null ?
                new ObjectParameter("v_CodeGroupingName", v_CodeGroupingName) :
                new ObjectParameter("v_CodeGroupingName", typeof(string));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var v_CodeGroupingTypeIDParameter = v_CodeGroupingTypeID.HasValue ?
                new ObjectParameter("v_CodeGroupingTypeID", v_CodeGroupingTypeID) :
                new ObjectParameter("v_CodeGroupingTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_CodeGrouping_Filter_Result>("Usp_CodeGrouping_Filter", i_AppUserIdParameter, v_CodeGroupingNameParameter, i_CodeGroupingIDParameter, v_CodeGroupingTypeIDParameter);
        }
    
        public virtual int usp_CodeGrouping_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupTypeID, string vc_CodeGroupingName, string vc_CodeGroupingDescription, string vc_Synonyms, Nullable<int> i_CodeTypeGroupersID, Nullable<int> i_ECTHedisTableID, string vc_ECTCodeDescription, Nullable<int> i_ECTHedisCodeTypeID, Nullable<bool> b_NonModifiable, Nullable<bool> b_IsPrimary, string b_ProductionStatus, Nullable<bool> b_DisplayStatus, string b_StatusCode, Nullable<int> i_CodeGroupingID, ObjectParameter o_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupTypeIDParameter = i_CodeGroupTypeID.HasValue ?
                new ObjectParameter("i_CodeGroupTypeID", i_CodeGroupTypeID) :
                new ObjectParameter("i_CodeGroupTypeID", typeof(int));
    
            var vc_CodeGroupingNameParameter = vc_CodeGroupingName != null ?
                new ObjectParameter("vc_CodeGroupingName", vc_CodeGroupingName) :
                new ObjectParameter("vc_CodeGroupingName", typeof(string));
    
            var vc_CodeGroupingDescriptionParameter = vc_CodeGroupingDescription != null ?
                new ObjectParameter("vc_CodeGroupingDescription", vc_CodeGroupingDescription) :
                new ObjectParameter("vc_CodeGroupingDescription", typeof(string));
    
            var vc_SynonymsParameter = vc_Synonyms != null ?
                new ObjectParameter("vc_Synonyms", vc_Synonyms) :
                new ObjectParameter("vc_Synonyms", typeof(string));
    
            var i_CodeTypeGroupersIDParameter = i_CodeTypeGroupersID.HasValue ?
                new ObjectParameter("i_CodeTypeGroupersID", i_CodeTypeGroupersID) :
                new ObjectParameter("i_CodeTypeGroupersID", typeof(int));
    
            var i_ECTHedisTableIDParameter = i_ECTHedisTableID.HasValue ?
                new ObjectParameter("i_ECTHedisTableID", i_ECTHedisTableID) :
                new ObjectParameter("i_ECTHedisTableID", typeof(int));
    
            var vc_ECTCodeDescriptionParameter = vc_ECTCodeDescription != null ?
                new ObjectParameter("vc_ECTCodeDescription", vc_ECTCodeDescription) :
                new ObjectParameter("vc_ECTCodeDescription", typeof(string));
    
            var i_ECTHedisCodeTypeIDParameter = i_ECTHedisCodeTypeID.HasValue ?
                new ObjectParameter("i_ECTHedisCodeTypeID", i_ECTHedisCodeTypeID) :
                new ObjectParameter("i_ECTHedisCodeTypeID", typeof(int));
    
            var b_NonModifiableParameter = b_NonModifiable.HasValue ?
                new ObjectParameter("b_NonModifiable", b_NonModifiable) :
                new ObjectParameter("b_NonModifiable", typeof(bool));
    
            var b_IsPrimaryParameter = b_IsPrimary.HasValue ?
                new ObjectParameter("b_IsPrimary", b_IsPrimary) :
                new ObjectParameter("b_IsPrimary", typeof(bool));
    
            var b_ProductionStatusParameter = b_ProductionStatus != null ?
                new ObjectParameter("b_ProductionStatus", b_ProductionStatus) :
                new ObjectParameter("b_ProductionStatus", typeof(string));
    
            var b_DisplayStatusParameter = b_DisplayStatus.HasValue ?
                new ObjectParameter("b_DisplayStatus", b_DisplayStatus) :
                new ObjectParameter("b_DisplayStatus", typeof(bool));
    
            var b_StatusCodeParameter = b_StatusCode != null ?
                new ObjectParameter("b_StatusCode", b_StatusCode) :
                new ObjectParameter("b_StatusCode", typeof(string));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeGrouping_InsertUpdate", i_AppUserIdParameter, i_CodeGroupTypeIDParameter, vc_CodeGroupingNameParameter, vc_CodeGroupingDescriptionParameter, vc_SynonymsParameter, i_CodeTypeGroupersIDParameter, i_ECTHedisTableIDParameter, vc_ECTCodeDescriptionParameter, i_ECTHedisCodeTypeIDParameter, b_NonModifiableParameter, b_IsPrimaryParameter, b_ProductionStatusParameter, b_DisplayStatusParameter, b_StatusCodeParameter, i_CodeGroupingIDParameter, o_CodeGroupingID);
        }
    
        public virtual int usp_CodeGrouping_Primary_Update(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID, Nullable<bool> b_IsPrimary)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var b_IsPrimaryParameter = b_IsPrimary.HasValue ?
                new ObjectParameter("b_IsPrimary", b_IsPrimary) :
                new ObjectParameter("b_IsPrimary", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeGrouping_Primary_Update", i_AppUserIdParameter, i_CodeGroupingIDParameter, b_IsPrimaryParameter);
        }
    
        public virtual int usp_CodeGrouping_SaveAsVersion(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeGrouping_SaveAsVersion", i_AppUserIdParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual ObjectResult<usp_CodeGrouping_Search_Result> usp_CodeGrouping_Search(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID, Nullable<int> i_CodeGroupTypeID, string vc_CodeGroupingName, string vc_CodeGroupingDescription, string i_CodeTypeGroupersID, Nullable<bool> b_IsPrimary, string b_ProductionStatus, Nullable<bool> b_DisplayStatus, string b_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var i_CodeGroupTypeIDParameter = i_CodeGroupTypeID.HasValue ?
                new ObjectParameter("i_CodeGroupTypeID", i_CodeGroupTypeID) :
                new ObjectParameter("i_CodeGroupTypeID", typeof(int));
    
            var vc_CodeGroupingNameParameter = vc_CodeGroupingName != null ?
                new ObjectParameter("vc_CodeGroupingName", vc_CodeGroupingName) :
                new ObjectParameter("vc_CodeGroupingName", typeof(string));
    
            var vc_CodeGroupingDescriptionParameter = vc_CodeGroupingDescription != null ?
                new ObjectParameter("vc_CodeGroupingDescription", vc_CodeGroupingDescription) :
                new ObjectParameter("vc_CodeGroupingDescription", typeof(string));
    
            var i_CodeTypeGroupersIDParameter = i_CodeTypeGroupersID != null ?
                new ObjectParameter("i_CodeTypeGroupersID", i_CodeTypeGroupersID) :
                new ObjectParameter("i_CodeTypeGroupersID", typeof(string));
    
            var b_IsPrimaryParameter = b_IsPrimary.HasValue ?
                new ObjectParameter("b_IsPrimary", b_IsPrimary) :
                new ObjectParameter("b_IsPrimary", typeof(bool));
    
            var b_ProductionStatusParameter = b_ProductionStatus != null ?
                new ObjectParameter("b_ProductionStatus", b_ProductionStatus) :
                new ObjectParameter("b_ProductionStatus", typeof(string));
    
            var b_DisplayStatusParameter = b_DisplayStatus.HasValue ?
                new ObjectParameter("b_DisplayStatus", b_DisplayStatus) :
                new ObjectParameter("b_DisplayStatus", typeof(bool));
    
            var b_StatusCodeParameter = b_StatusCode != null ?
                new ObjectParameter("b_StatusCode", b_StatusCode) :
                new ObjectParameter("b_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGrouping_Search_Result>("usp_CodeGrouping_Search", i_AppUserIdParameter, i_CodeGroupingIDParameter, i_CodeGroupTypeIDParameter, vc_CodeGroupingNameParameter, vc_CodeGroupingDescriptionParameter, i_CodeTypeGroupersIDParameter, b_IsPrimaryParameter, b_ProductionStatusParameter, b_DisplayStatusParameter, b_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CodeGrouping_VersionHistory_Result> usp_CodeGrouping_VersionHistory(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGrouping_VersionHistory_Result>("usp_CodeGrouping_VersionHistory", i_AppUserIdParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual int Usp_CodeGroupingClone_DrawFromLibrary(Nullable<int> i_AppUserId, Nullable<int> i_OldCodeGroupingID, Nullable<int> i_NewCodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OldCodeGroupingIDParameter = i_OldCodeGroupingID.HasValue ?
                new ObjectParameter("i_OldCodeGroupingID", i_OldCodeGroupingID) :
                new ObjectParameter("i_OldCodeGroupingID", typeof(int));
    
            var i_NewCodeGroupingIDParameter = i_NewCodeGroupingID.HasValue ?
                new ObjectParameter("i_NewCodeGroupingID", i_NewCodeGroupingID) :
                new ObjectParameter("i_NewCodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CodeGroupingClone_DrawFromLibrary", i_AppUserIdParameter, i_OldCodeGroupingIDParameter, i_NewCodeGroupingIDParameter);
        }
    
        public virtual ObjectResult<usp_CodeGroupingCodeType_BySource_Result> usp_CodeGroupingCodeType_BySource(Nullable<int> i_AppUserId, string v_CodeSource, Nullable<int> v_ECTHedisTableID, string v_ECTCodeDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_CodeSourceParameter = v_CodeSource != null ?
                new ObjectParameter("v_CodeSource", v_CodeSource) :
                new ObjectParameter("v_CodeSource", typeof(string));
    
            var v_ECTHedisTableIDParameter = v_ECTHedisTableID.HasValue ?
                new ObjectParameter("v_ECTHedisTableID", v_ECTHedisTableID) :
                new ObjectParameter("v_ECTHedisTableID", typeof(int));
    
            var v_ECTCodeDescriptionParameter = v_ECTCodeDescription != null ?
                new ObjectParameter("v_ECTCodeDescription", v_ECTCodeDescription) :
                new ObjectParameter("v_ECTCodeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGroupingCodeType_BySource_Result>("usp_CodeGroupingCodeType_BySource", i_AppUserIdParameter, v_CodeSourceParameter, v_ECTHedisTableIDParameter, v_ECTCodeDescriptionParameter);
        }
    
        public virtual int usp_CodeGroupingDetailIntrenal_Delete(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingDetailInternallID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingDetailInternallIDParameter = i_CodeGroupingDetailInternallID.HasValue ?
                new ObjectParameter("i_CodeGroupingDetailInternallID", i_CodeGroupingDetailInternallID) :
                new ObjectParameter("i_CodeGroupingDetailInternallID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeGroupingDetailIntrenal_Delete", i_AppUserIdParameter, i_CodeGroupingDetailInternallIDParameter);
        }
    
        public virtual ObjectResult<usp_CodeGroupingSource_DD_Result> usp_CodeGroupingSource_DD(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingTypeID, Nullable<int> i_DisplaySource)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingTypeIDParameter = i_CodeGroupingTypeID.HasValue ?
                new ObjectParameter("i_CodeGroupingTypeID", i_CodeGroupingTypeID) :
                new ObjectParameter("i_CodeGroupingTypeID", typeof(int));
    
            var i_DisplaySourceParameter = i_DisplaySource.HasValue ?
                new ObjectParameter("i_DisplaySource", i_DisplaySource) :
                new ObjectParameter("i_DisplaySource", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGroupingSource_DD_Result>("usp_CodeGroupingSource_DD", i_AppUserIdParameter, i_CodeGroupingTypeIDParameter, i_DisplaySourceParameter);
        }
    
        public virtual ObjectResult<usp_CodeGroupInlineSearch_DD_Result> usp_CodeGroupInlineSearch_DD(Nullable<int> i_AppUserId, string vc_InlineSearchDesc, string vc_CodeGroupType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_InlineSearchDescParameter = vc_InlineSearchDesc != null ?
                new ObjectParameter("vc_InlineSearchDesc", vc_InlineSearchDesc) :
                new ObjectParameter("vc_InlineSearchDesc", typeof(string));
    
            var vc_CodeGroupTypeParameter = vc_CodeGroupType != null ?
                new ObjectParameter("vc_CodeGroupType", vc_CodeGroupType) :
                new ObjectParameter("vc_CodeGroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeGroupInlineSearch_DD_Result>("usp_CodeGroupInlineSearch_DD", i_AppUserIdParameter, vc_InlineSearchDescParameter, vc_CodeGroupTypeParameter);
        }
    
        public virtual ObjectResult<usp_CodegroupSummary_Select_DD_Result> usp_CodegroupSummary_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodegroupSummary_Select_DD_Result>("usp_CodegroupSummary_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetDrug_Select_Result> usp_CodeSetDrug_Select(Nullable<int> i_AppUserId, Nullable<int> i_DrugCodeId, string v_StatusCode, string v_DrugCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DrugCodeIdParameter = i_DrugCodeId.HasValue ?
                new ObjectParameter("i_DrugCodeId", i_DrugCodeId) :
                new ObjectParameter("i_DrugCodeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_DrugCodeParameter = v_DrugCode != null ?
                new ObjectParameter("v_DrugCode", v_DrugCode) :
                new ObjectParameter("v_DrugCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetDrug_Select_Result>("usp_CodeSetDrug_Select", i_AppUserIdParameter, i_DrugCodeIdParameter, v_StatusCodeParameter, v_DrugCodeParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetDrug_Select_DD_Result> usp_CodeSetDrug_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetDrug_Select_DD_Result>("usp_CodeSetDrug_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetICD_DD_Result> usp_CodeSetICD_DD(Nullable<int> i_AppUserId, string vc_ICDCodeType, string vc_ICDCoderORDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ICDCodeTypeParameter = vc_ICDCodeType != null ?
                new ObjectParameter("vc_ICDCodeType", vc_ICDCodeType) :
                new ObjectParameter("vc_ICDCodeType", typeof(string));
    
            var vc_ICDCoderORDescriptionParameter = vc_ICDCoderORDescription != null ?
                new ObjectParameter("vc_ICDCoderORDescription", vc_ICDCoderORDescription) :
                new ObjectParameter("vc_ICDCoderORDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetICD_DD_Result>("usp_CodeSetICD_DD", i_AppUserIdParameter, vc_ICDCodeTypeParameter, vc_ICDCoderORDescriptionParameter);
        }
    
        public virtual int usp_CodeSetICDGroups_Insert(Nullable<int> i_AppUserId, string v_ICDGroupName, string v_StatusCode, ObjectParameter o_ICDCodeGroupId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ICDGroupNameParameter = v_ICDGroupName != null ?
                new ObjectParameter("v_ICDGroupName", v_ICDGroupName) :
                new ObjectParameter("v_ICDGroupName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeSetICDGroups_Insert", i_AppUserIdParameter, v_ICDGroupNameParameter, v_StatusCodeParameter, o_ICDCodeGroupId);
        }
    
        public virtual ObjectResult<usp_CodeSetICDGroups_Select_Result> usp_CodeSetICDGroups_Select(Nullable<int> i_AppUserId, Nullable<int> i_ICDCodeGroupId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ICDCodeGroupIdParameter = i_ICDCodeGroupId.HasValue ?
                new ObjectParameter("i_ICDCodeGroupId", i_ICDCodeGroupId) :
                new ObjectParameter("i_ICDCodeGroupId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetICDGroups_Select_Result>("usp_CodeSetICDGroups_Select", i_AppUserIdParameter, i_ICDCodeGroupIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetICDGroups_Select_DD_Result> usp_CodeSetICDGroups_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetICDGroups_Select_DD_Result>("usp_CodeSetICDGroups_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_CodeSetICDGroups_Update(Nullable<int> i_AppUserId, string v_ICDGroupName, string v_StatusCode, Nullable<int> i_ICDCodeGroupId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ICDGroupNameParameter = v_ICDGroupName != null ?
                new ObjectParameter("v_ICDGroupName", v_ICDGroupName) :
                new ObjectParameter("v_ICDGroupName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ICDCodeGroupIdParameter = i_ICDCodeGroupId.HasValue ?
                new ObjectParameter("i_ICDCodeGroupId", i_ICDCodeGroupId) :
                new ObjectParameter("i_ICDCodeGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeSetICDGroups_Update", i_AppUserIdParameter, v_ICDGroupNameParameter, v_StatusCodeParameter, i_ICDCodeGroupIdParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetLoincCode_DD_Result> usp_CodeSetLoincCode_DD(Nullable<int> i_AppUserId, string vc_LoincCodeORDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_LoincCodeORDescriptionParameter = vc_LoincCodeORDescription != null ?
                new ObjectParameter("vc_LoincCodeORDescription", vc_LoincCodeORDescription) :
                new ObjectParameter("vc_LoincCodeORDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetLoincCode_DD_Result>("usp_CodeSetLoincCode_DD", i_AppUserIdParameter, vc_LoincCodeORDescriptionParameter);
        }
    
        public virtual int usp_CodeSetLoincCode_Insert(Nullable<int> i_AppUserId, string v_LoincCode, string v_ShortDescription, string v_LongDescription, string v_Component, string v_Property, string v_TimeAspect, string v_System, string v_ScaleType, string v_MethodType, string v_Class, string v_StatusCode, ObjectParameter o_LoincCodeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LoincCodeParameter = v_LoincCode != null ?
                new ObjectParameter("v_LoincCode", v_LoincCode) :
                new ObjectParameter("v_LoincCode", typeof(string));
    
            var v_ShortDescriptionParameter = v_ShortDescription != null ?
                new ObjectParameter("v_ShortDescription", v_ShortDescription) :
                new ObjectParameter("v_ShortDescription", typeof(string));
    
            var v_LongDescriptionParameter = v_LongDescription != null ?
                new ObjectParameter("v_LongDescription", v_LongDescription) :
                new ObjectParameter("v_LongDescription", typeof(string));
    
            var v_ComponentParameter = v_Component != null ?
                new ObjectParameter("v_Component", v_Component) :
                new ObjectParameter("v_Component", typeof(string));
    
            var v_PropertyParameter = v_Property != null ?
                new ObjectParameter("v_Property", v_Property) :
                new ObjectParameter("v_Property", typeof(string));
    
            var v_TimeAspectParameter = v_TimeAspect != null ?
                new ObjectParameter("v_TimeAspect", v_TimeAspect) :
                new ObjectParameter("v_TimeAspect", typeof(string));
    
            var v_SystemParameter = v_System != null ?
                new ObjectParameter("v_System", v_System) :
                new ObjectParameter("v_System", typeof(string));
    
            var v_ScaleTypeParameter = v_ScaleType != null ?
                new ObjectParameter("v_ScaleType", v_ScaleType) :
                new ObjectParameter("v_ScaleType", typeof(string));
    
            var v_MethodTypeParameter = v_MethodType != null ?
                new ObjectParameter("v_MethodType", v_MethodType) :
                new ObjectParameter("v_MethodType", typeof(string));
    
            var v_ClassParameter = v_Class != null ?
                new ObjectParameter("v_Class", v_Class) :
                new ObjectParameter("v_Class", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeSetLoincCode_Insert", i_AppUserIdParameter, v_LoincCodeParameter, v_ShortDescriptionParameter, v_LongDescriptionParameter, v_ComponentParameter, v_PropertyParameter, v_TimeAspectParameter, v_SystemParameter, v_ScaleTypeParameter, v_MethodTypeParameter, v_ClassParameter, v_StatusCodeParameter, o_LoincCodeId);
        }
    
        public virtual int usp_CodeSetLoincCode_Update(Nullable<int> i_AppUserId, string v_LoincCode, string v_ShortDescription, string v_LongDescription, string v_Component, string v_Property, string v_TimeAspect, string v_System, string v_ScaleType, string v_MethodType, string v_Class, string v_StatusCode, Nullable<int> i_LoincCodeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LoincCodeParameter = v_LoincCode != null ?
                new ObjectParameter("v_LoincCode", v_LoincCode) :
                new ObjectParameter("v_LoincCode", typeof(string));
    
            var v_ShortDescriptionParameter = v_ShortDescription != null ?
                new ObjectParameter("v_ShortDescription", v_ShortDescription) :
                new ObjectParameter("v_ShortDescription", typeof(string));
    
            var v_LongDescriptionParameter = v_LongDescription != null ?
                new ObjectParameter("v_LongDescription", v_LongDescription) :
                new ObjectParameter("v_LongDescription", typeof(string));
    
            var v_ComponentParameter = v_Component != null ?
                new ObjectParameter("v_Component", v_Component) :
                new ObjectParameter("v_Component", typeof(string));
    
            var v_PropertyParameter = v_Property != null ?
                new ObjectParameter("v_Property", v_Property) :
                new ObjectParameter("v_Property", typeof(string));
    
            var v_TimeAspectParameter = v_TimeAspect != null ?
                new ObjectParameter("v_TimeAspect", v_TimeAspect) :
                new ObjectParameter("v_TimeAspect", typeof(string));
    
            var v_SystemParameter = v_System != null ?
                new ObjectParameter("v_System", v_System) :
                new ObjectParameter("v_System", typeof(string));
    
            var v_ScaleTypeParameter = v_ScaleType != null ?
                new ObjectParameter("v_ScaleType", v_ScaleType) :
                new ObjectParameter("v_ScaleType", typeof(string));
    
            var v_MethodTypeParameter = v_MethodType != null ?
                new ObjectParameter("v_MethodType", v_MethodType) :
                new ObjectParameter("v_MethodType", typeof(string));
    
            var v_ClassParameter = v_Class != null ?
                new ObjectParameter("v_Class", v_Class) :
                new ObjectParameter("v_Class", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_LoincCodeIdParameter = i_LoincCodeId.HasValue ?
                new ObjectParameter("i_LoincCodeId", i_LoincCodeId) :
                new ObjectParameter("i_LoincCodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeSetLoincCode_Update", i_AppUserIdParameter, v_LoincCodeParameter, v_ShortDescriptionParameter, v_LongDescriptionParameter, v_ComponentParameter, v_PropertyParameter, v_TimeAspectParameter, v_SystemParameter, v_ScaleTypeParameter, v_MethodTypeParameter, v_ClassParameter, v_StatusCodeParameter, i_LoincCodeIdParameter);
        }
    
        public virtual ObjectResult<usp_CodeSetProcedure_DD_Result> usp_CodeSetProcedure_DD(Nullable<int> i_AppUserId, string vc_ProcedureCodeType, string vc_CPTCoderORDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProcedureCodeTypeParameter = vc_ProcedureCodeType != null ?
                new ObjectParameter("vc_ProcedureCodeType", vc_ProcedureCodeType) :
                new ObjectParameter("vc_ProcedureCodeType", typeof(string));
    
            var vc_CPTCoderORDescriptionParameter = vc_CPTCoderORDescription != null ?
                new ObjectParameter("vc_CPTCoderORDescription", vc_CPTCoderORDescription) :
                new ObjectParameter("vc_CPTCoderORDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeSetProcedure_DD_Result>("usp_CodeSetProcedure_DD", i_AppUserIdParameter, vc_ProcedureCodeTypeParameter, vc_CPTCoderORDescriptionParameter);
        }
    
        public virtual int usp_CodeSetProcedure_SelectByProcedureCode(Nullable<int> i_AppUserId, Nullable<int> i_ProcedureCodeType, string vc_CPTCoderORDescription, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProcedureCodeTypeParameter = i_ProcedureCodeType.HasValue ?
                new ObjectParameter("i_ProcedureCodeType", i_ProcedureCodeType) :
                new ObjectParameter("i_ProcedureCodeType", typeof(int));
    
            var vc_CPTCoderORDescriptionParameter = vc_CPTCoderORDescription != null ?
                new ObjectParameter("vc_CPTCoderORDescription", vc_CPTCoderORDescription) :
                new ObjectParameter("vc_CPTCoderORDescription", typeof(string));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CodeSetProcedure_SelectByProcedureCode", i_AppUserIdParameter, i_ProcedureCodeTypeParameter, vc_CPTCoderORDescriptionParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CodeTypeGrouperSummary_SELECT_Result> usp_CodeTypeGrouperSummary_SELECT(Nullable<int> i_AppUserId, Nullable<int> i_CodeGroupingTypeID, Nullable<int> i_CodeTypeGroupersID, Nullable<int> i_CodeGroupingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeGroupingTypeIDParameter = i_CodeGroupingTypeID.HasValue ?
                new ObjectParameter("i_CodeGroupingTypeID", i_CodeGroupingTypeID) :
                new ObjectParameter("i_CodeGroupingTypeID", typeof(int));
    
            var i_CodeTypeGroupersIDParameter = i_CodeTypeGroupersID.HasValue ?
                new ObjectParameter("i_CodeTypeGroupersID", i_CodeTypeGroupersID) :
                new ObjectParameter("i_CodeTypeGroupersID", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeTypeGrouperSummary_SELECT_Result>("usp_CodeTypeGrouperSummary_SELECT", i_AppUserIdParameter, i_CodeGroupingTypeIDParameter, i_CodeTypeGroupersIDParameter, i_CodeGroupingIDParameter);
        }
    
        public virtual ObjectResult<usp_CodeTypeICD_Select_DD_Result> usp_CodeTypeICD_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CodeTypeICD_Select_DD_Result>("usp_CodeTypeICD_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CohortList_Select_DD_Result> usp_CohortList_Select_DD(Nullable<int> i_AppUserId, string v_StatusCode, string v_MassCommunication)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_MassCommunicationParameter = v_MassCommunication != null ?
                new ObjectParameter("v_MassCommunication", v_MassCommunication) :
                new ObjectParameter("v_MassCommunication", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CohortList_Select_DD_Result>("usp_CohortList_Select_DD", i_AppUserIdParameter, v_StatusCodeParameter, v_MassCommunicationParameter);
        }
    
        public virtual int usp_CohortListUsers_Patients_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIdParameter = i_PopulationDefinitionId.HasValue ?
                new ObjectParameter("i_PopulationDefinitionId", i_PopulationDefinitionId) :
                new ObjectParameter("i_PopulationDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CohortListUsers_Patients_Select", i_AppUserIdParameter, i_PopulationDefinitionIdParameter);
        }
    
        public virtual int usp_CohortListUsers_SelectByCareTeamUserId(Nullable<int> i_AppUserId, Nullable<int> i_CareTeamId, Nullable<int> i_PopulationDefinitionId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_PopulationDefinitionIdParameter = i_PopulationDefinitionId.HasValue ?
                new ObjectParameter("i_PopulationDefinitionId", i_PopulationDefinitionId) :
                new ObjectParameter("i_PopulationDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CohortListUsers_SelectByCareTeamUserId", i_AppUserIdParameter, i_CareTeamIdParameter, i_PopulationDefinitionIdParameter);
        }
    
        public virtual ObjectResult<usp_Communication_CommunicationCohorts_Select_Result> usp_Communication_CommunicationCohorts_Select(Nullable<int> i_AppUserId, string v_ApprovalState1, string v_ApprovalState2, Nullable<int> i_CommunicationId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ApprovalState1Parameter = v_ApprovalState1 != null ?
                new ObjectParameter("v_ApprovalState1", v_ApprovalState1) :
                new ObjectParameter("v_ApprovalState1", typeof(string));
    
            var v_ApprovalState2Parameter = v_ApprovalState2 != null ?
                new ObjectParameter("v_ApprovalState2", v_ApprovalState2) :
                new ObjectParameter("v_ApprovalState2", typeof(string));
    
            var i_CommunicationIdParameter = i_CommunicationId.HasValue ?
                new ObjectParameter("i_CommunicationId", i_CommunicationId) :
                new ObjectParameter("i_CommunicationId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Communication_CommunicationCohorts_Select_Result>("usp_Communication_CommunicationCohorts_Select", i_AppUserIdParameter, v_ApprovalState1Parameter, v_ApprovalState2Parameter, i_CommunicationIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Communication_ComposeAndSendMessages(Nullable<int> i_AppUserId, Nullable<System.DateTime> d_Date, Nullable<int> i_Param_CommunicationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var d_DateParameter = d_Date.HasValue ?
                new ObjectParameter("d_Date", d_Date) :
                new ObjectParameter("d_Date", typeof(System.DateTime));
    
            var i_Param_CommunicationIdParameter = i_Param_CommunicationId.HasValue ?
                new ObjectParameter("i_Param_CommunicationId", i_Param_CommunicationId) :
                new ObjectParameter("i_Param_CommunicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Communication_ComposeAndSendMessages", i_AppUserIdParameter, d_DateParameter, i_Param_CommunicationIdParameter);
        }
    
        public virtual int usp_Communication_MessageContent(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationTemplateId, Nullable<int> i_UserID, ObjectParameter v_EmailIdPrimary, ObjectParameter v_SubjectText, ObjectParameter v_CommunicationText, ObjectParameter v_NotifySubjectText, ObjectParameter v_NotifyCommunicationText)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Communication_MessageContent", i_AppUserIdParameter, i_CommunicationTemplateIdParameter, i_UserIDParameter, v_EmailIdPrimary, v_SubjectText, v_CommunicationText, v_NotifySubjectText, v_NotifyCommunicationText);
        }
    
        public virtual ObjectResult<string> usp_Communication_MessageContent_Template(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationTemplateId, Nullable<int> i_UserID, ObjectParameter v_EmailIdPrimary, ObjectParameter v_SubjectText, ObjectParameter v_CommunicationText)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Communication_MessageContent_Template", i_AppUserIdParameter, i_CommunicationTemplateIdParameter, i_UserIDParameter, v_EmailIdPrimary, v_SubjectText, v_CommunicationText);
        }
    
        public virtual ObjectResult<usp_Communication_MessageDetail_Result> usp_Communication_MessageDetail(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationTemplateId, string v_SenderEmailAddress, Nullable<int> i_UserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var v_SenderEmailAddressParameter = v_SenderEmailAddress != null ?
                new ObjectParameter("v_SenderEmailAddress", v_SenderEmailAddress) :
                new ObjectParameter("v_SenderEmailAddress", typeof(string));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Communication_MessageDetail_Result>("usp_Communication_MessageDetail", i_AppUserIdParameter, i_CommunicationTemplateIdParameter, v_SenderEmailAddressParameter, i_UserIDParameter);
        }
    
        public virtual ObjectResult<usp_Communication_PreviewCommunication_Result> usp_Communication_PreviewCommunication(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationTemplateId, Nullable<int> i_PopulationDefinitionID, string v_SenderEmailAddress)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_SenderEmailAddressParameter = v_SenderEmailAddress != null ?
                new ObjectParameter("v_SenderEmailAddress", v_SenderEmailAddress) :
                new ObjectParameter("v_SenderEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Communication_PreviewCommunication_Result>("usp_Communication_PreviewCommunication", i_AppUserIdParameter, i_CommunicationTemplateIdParameter, i_PopulationDefinitionIDParameter, v_SenderEmailAddressParameter);
        }
    
        public virtual ObjectResult<usp_Communication_PreviewNotification_Result> usp_Communication_PreviewNotification(Nullable<int> i_AppUserId, Nullable<int> i_NotifyCommunicationTemplateId, Nullable<int> i_PopulationDefinitionID, string v_SenderEmailAddress)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_NotifyCommunicationTemplateIdParameter = i_NotifyCommunicationTemplateId.HasValue ?
                new ObjectParameter("i_NotifyCommunicationTemplateId", i_NotifyCommunicationTemplateId) :
                new ObjectParameter("i_NotifyCommunicationTemplateId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_SenderEmailAddressParameter = v_SenderEmailAddress != null ?
                new ObjectParameter("v_SenderEmailAddress", v_SenderEmailAddress) :
                new ObjectParameter("v_SenderEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Communication_PreviewNotification_Result>("usp_Communication_PreviewNotification", i_AppUserIdParameter, i_NotifyCommunicationTemplateIdParameter, i_PopulationDefinitionIDParameter, v_SenderEmailAddressParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationTemplate_CommunicationType_Select_DD_Result> usp_CommunicationTemplate_CommunicationType_Select_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsNotificationTemplate, Nullable<int> i_CommunicationTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsNotificationTemplateParameter = b_IsNotificationTemplate.HasValue ?
                new ObjectParameter("b_IsNotificationTemplate", b_IsNotificationTemplate) :
                new ObjectParameter("b_IsNotificationTemplate", typeof(bool));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationTemplate_CommunicationType_Select_DD_Result>("usp_CommunicationTemplate_CommunicationType_Select_DD", i_AppUserIdParameter, b_IsNotificationTemplateParameter, i_CommunicationTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationTemplate_ForEmailAndLetter_Result> usp_CommunicationTemplate_ForEmailAndLetter(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationTemplate_ForEmailAndLetter_Result>("usp_CommunicationTemplate_ForEmailAndLetter", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationTemplate_Select_Result> usp_CommunicationTemplate_Select(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationTemplateId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationTemplate_Select_Result>("usp_CommunicationTemplate_Select", i_AppUserIdParameter, i_CommunicationTemplateIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationTemplate_Select_DD_Result> usp_CommunicationTemplate_Select_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsNotificationTemplate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsNotificationTemplateParameter = b_IsNotificationTemplate.HasValue ?
                new ObjectParameter("b_IsNotificationTemplate", b_IsNotificationTemplate) :
                new ObjectParameter("b_IsNotificationTemplate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationTemplate_Select_DD_Result>("usp_CommunicationTemplate_Select_DD", i_AppUserIdParameter, b_IsNotificationTemplateParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationTemplateToken_Select_DD_Result> usp_CommunicationTemplateToken_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationTemplateToken_Select_DD_Result>("usp_CommunicationTemplateToken_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationType_Select_All_Result> usp_CommunicationType_Select_All(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationType_Select_All_Result>("usp_CommunicationType_Select_All", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CommunicationType_Select_DD_Result> usp_CommunicationType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CommunicationType_Select_DD_Result>("usp_CommunicationType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Country_Select_DD_Result> usp_Country_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Country_Select_DD_Result>("usp_Country_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_County_Select_DD_Result> usp_County_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_County_Select_DD_Result>("usp_County_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_CoverageTier_Select_DD_Result> usp_CoverageTier_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CoverageTier_Select_DD_Result>("usp_CoverageTier_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_CPTLabTests_Insert(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, Nullable<int> i_ProcedureID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_ProcedureIDParameter = i_ProcedureID.HasValue ?
                new ObjectParameter("i_ProcedureID", i_ProcedureID) :
                new ObjectParameter("i_ProcedureID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CPTLabTests_Insert", i_AppUserIdParameter, i_LabTestIdParameter, i_ProcedureIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_CPTLabTests_Select_Result> usp_CPTLabTests_Select(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, Nullable<int> i_ProcedureId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CPTLabTests_Select_Result>("usp_CPTLabTests_Select", i_AppUserIdParameter, i_LabTestIdParameter, i_ProcedureIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_CPTLabTests_Update(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, Nullable<int> i_ProcedureId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CPTLabTests_Update", i_AppUserIdParameter, i_LabTestIdParameter, i_ProcedureIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Criteria_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Criteria_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_DashBoard_Appointment(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DashBoard_Appointment", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_DashBoard_MissedOpportunity_Result> usp_DashBoard_MissedOpportunity(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DashBoard_MissedOpportunity_Result>("usp_DashBoard_MissedOpportunity", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual int usp_DashBoard_PatientHomePage_ProgramEncounters(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<bool> b_isLV, Nullable<bool> b_ispopup)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var b_isLVParameter = b_isLV.HasValue ?
                new ObjectParameter("b_isLV", b_isLV) :
                new ObjectParameter("b_isLV", typeof(bool));
    
            var b_ispopupParameter = b_ispopup.HasValue ?
                new ObjectParameter("b_ispopup", b_ispopup) :
                new ObjectParameter("b_ispopup", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DashBoard_PatientHomePage_ProgramEncounters", i_AppUserIdParameter, i_UserIdParameter, b_isLVParameter, b_ispopupParameter);
        }
    
        public virtual int usp_DashBoard_PatientUtilityAndCost(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DashBoard_PatientUtilityAndCost", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual int usp_Dashboard_UserProcedureFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_CodeGroupingId, string v_StatusCode, Nullable<int> i_FrequencyNumber, string v_Frequency, Nullable<bool> b_NeverSchedule, string vc_ExclusionReason, Nullable<int> i_LabTestId, Nullable<System.DateTime> d_EffectiveStartDate, Nullable<System.DateTime> d_EffectiveEndDate, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_CodeGroupingIdParameter = i_CodeGroupingId.HasValue ?
                new ObjectParameter("i_CodeGroupingId", i_CodeGroupingId) :
                new ObjectParameter("i_CodeGroupingId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var v_FrequencyParameter = v_Frequency != null ?
                new ObjectParameter("v_Frequency", v_Frequency) :
                new ObjectParameter("v_Frequency", typeof(string));
    
            var b_NeverScheduleParameter = b_NeverSchedule.HasValue ?
                new ObjectParameter("b_NeverSchedule", b_NeverSchedule) :
                new ObjectParameter("b_NeverSchedule", typeof(bool));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var d_EffectiveStartDateParameter = d_EffectiveStartDate.HasValue ?
                new ObjectParameter("d_EffectiveStartDate", d_EffectiveStartDate) :
                new ObjectParameter("d_EffectiveStartDate", typeof(System.DateTime));
    
            var d_EffectiveEndDateParameter = d_EffectiveEndDate.HasValue ?
                new ObjectParameter("d_EffectiveEndDate", d_EffectiveEndDate) :
                new ObjectParameter("d_EffectiveEndDate", typeof(System.DateTime));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Dashboard_UserProcedureFrequency_InsertUpdate", i_AppUserIdParameter, i_UserIdParameter, i_CodeGroupingIdParameter, v_StatusCodeParameter, i_FrequencyNumberParameter, v_FrequencyParameter, b_NeverScheduleParameter, vc_ExclusionReasonParameter, i_LabTestIdParameter, d_EffectiveStartDateParameter, d_EffectiveEndDateParameter, i_ProgramIdParameter);
        }
    
        public virtual ObjectResult<usp_Dashboard_UtilityAndCost_Result> usp_Dashboard_UtilityAndCost(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Dashboard_UtilityAndCost_Result>("usp_Dashboard_UtilityAndCost", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_DataSource_Select_DD_Result> usp_DataSource_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DataSource_Select_DD_Result>("usp_DataSource_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_dbAdmin_CheckDependencies_Result> usp_dbAdmin_CheckDependencies(string objname, Nullable<bool> isReferenced)
        {
            var objnameParameter = objname != null ?
                new ObjectParameter("objname", objname) :
                new ObjectParameter("objname", typeof(string));
    
            var isReferencedParameter = isReferenced.HasValue ?
                new ObjectParameter("IsReferenced", isReferenced) :
                new ObjectParameter("IsReferenced", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_dbAdmin_CheckDependencies_Result>("usp_dbAdmin_CheckDependencies", objnameParameter, isReferencedParameter);
        }
    
        public virtual ObjectResult<usp_dbAdmin_CheckNewDatainXDays_Result> usp_dbAdmin_CheckNewDatainXDays(string v_NumberOfDays, string v_SourceDB, string v_TargetDB, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate)
        {
            var v_NumberOfDaysParameter = v_NumberOfDays != null ?
                new ObjectParameter("v_NumberOfDays", v_NumberOfDays) :
                new ObjectParameter("v_NumberOfDays", typeof(string));
    
            var v_SourceDBParameter = v_SourceDB != null ?
                new ObjectParameter("v_SourceDB", v_SourceDB) :
                new ObjectParameter("v_SourceDB", typeof(string));
    
            var v_TargetDBParameter = v_TargetDB != null ?
                new ObjectParameter("v_TargetDB", v_TargetDB) :
                new ObjectParameter("v_TargetDB", typeof(string));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_dbAdmin_CheckNewDatainXDays_Result>("usp_dbAdmin_CheckNewDatainXDays", v_NumberOfDaysParameter, v_SourceDBParameter, v_TargetDBParameter, d_StartDateParameter, d_EndDateParameter);
        }
    
        public virtual int usp_dbAdmin_DuplicateIndex(Nullable<bool> executeDropSQL)
        {
            var executeDropSQLParameter = executeDropSQL.HasValue ?
                new ObjectParameter("ExecuteDropSQL", executeDropSQL) :
                new ObjectParameter("ExecuteDropSQL", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_dbAdmin_DuplicateIndex", executeDropSQLParameter);
        }
    
        public virtual int usp_dbAdmin_IndexOptimizer(Nullable<byte> tintFragPerc, string txtIndexName, string txtTableName, Nullable<bool> tintBuildOnline, Nullable<bool> debug)
        {
            var tintFragPercParameter = tintFragPerc.HasValue ?
                new ObjectParameter("tintFragPerc", tintFragPerc) :
                new ObjectParameter("tintFragPerc", typeof(byte));
    
            var txtIndexNameParameter = txtIndexName != null ?
                new ObjectParameter("txtIndexName", txtIndexName) :
                new ObjectParameter("txtIndexName", typeof(string));
    
            var txtTableNameParameter = txtTableName != null ?
                new ObjectParameter("txtTableName", txtTableName) :
                new ObjectParameter("txtTableName", typeof(string));
    
            var tintBuildOnlineParameter = tintBuildOnline.HasValue ?
                new ObjectParameter("tintBuildOnline", tintBuildOnline) :
                new ObjectParameter("tintBuildOnline", typeof(bool));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_dbAdmin_IndexOptimizer", tintFragPercParameter, txtIndexNameParameter, txtTableNameParameter, tintBuildOnlineParameter, debugParameter);
        }
    
        public virtual ObjectResult<usp_dbAdmin_MissingIndex_Result> usp_dbAdmin_MissingIndex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_dbAdmin_MissingIndex_Result>("usp_dbAdmin_MissingIndex");
        }
    
        public virtual int usp_dbAdmin_RecompileSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_dbAdmin_RecompileSP");
        }
    
        public virtual ObjectResult<usp_Disease_Select_DD_Result> usp_Disease_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Disease_Select_DD_Result>("usp_Disease_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Disease_SpecificCareGap_DD_Result> usp_Disease_SpecificCareGap_DD(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_UserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Disease_SpecificCareGap_DD_Result>("usp_Disease_SpecificCareGap_DD", i_AppUserIdParameter, i_ProgramIdParameter, i_UserIDParameter);
        }
    
        public virtual ObjectResult<usp_Disease_StandardSelect_DD_Result> usp_Disease_StandardSelect_DD(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityStandardId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityStandardIdParameter = i_HealthCareQualityStandardId.HasValue ?
                new ObjectParameter("i_HealthCareQualityStandardId", i_HealthCareQualityStandardId) :
                new ObjectParameter("i_HealthCareQualityStandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Disease_StandardSelect_DD_Result>("usp_Disease_StandardSelect_DD", i_AppUserIdParameter, i_HealthCareQualityStandardIdParameter);
        }
    
        public virtual int usp_DiseaseByRoleSpecific_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsMyPatients)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsMyPatientsParameter = b_IsMyPatients.HasValue ?
                new ObjectParameter("b_IsMyPatients", b_IsMyPatients) :
                new ObjectParameter("b_IsMyPatients", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseByRoleSpecific_DD", i_AppUserIdParameter, b_IsMyPatientsParameter);
        }
    
        public virtual int usp_DiseaseMeasure_Insert(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId, Nullable<int> i_MeasureId, Nullable<int> i_Prioritization, string vc_StatusCode, ObjectParameter o_DiseaseMeasureId, Nullable<bool> b_IsPrimaryMeasure)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_PrioritizationParameter = i_Prioritization.HasValue ?
                new ObjectParameter("i_Prioritization", i_Prioritization) :
                new ObjectParameter("i_Prioritization", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var b_IsPrimaryMeasureParameter = b_IsPrimaryMeasure.HasValue ?
                new ObjectParameter("b_IsPrimaryMeasure", b_IsPrimaryMeasure) :
                new ObjectParameter("b_IsPrimaryMeasure", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseMeasure_Insert", i_AppUserIdParameter, i_DiseaseIdParameter, i_MeasureIdParameter, i_PrioritizationParameter, vc_StatusCodeParameter, o_DiseaseMeasureId, b_IsPrimaryMeasureParameter);
        }
    
        public virtual int usp_DiseaseMeasure_SearchByDiseaseId(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseMeasure_SearchByDiseaseId", i_AppUserIdParameter, i_DiseaseIdParameter);
        }
    
        public virtual int usp_DiseaseMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId, Nullable<int> i_MeasureId, Nullable<int> i_Prioritization, string vc_StatusCode, Nullable<int> i_DiseaseMeasureId, Nullable<bool> b_IsPrimaryMeasure)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_PrioritizationParameter = i_Prioritization.HasValue ?
                new ObjectParameter("i_Prioritization", i_Prioritization) :
                new ObjectParameter("i_Prioritization", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_DiseaseMeasureIdParameter = i_DiseaseMeasureId.HasValue ?
                new ObjectParameter("i_DiseaseMeasureId", i_DiseaseMeasureId) :
                new ObjectParameter("i_DiseaseMeasureId", typeof(int));
    
            var b_IsPrimaryMeasureParameter = b_IsPrimaryMeasure.HasValue ?
                new ObjectParameter("b_IsPrimaryMeasure", b_IsPrimaryMeasure) :
                new ObjectParameter("b_IsPrimaryMeasure", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseMeasure_Update", i_AppUserIdParameter, i_DiseaseIdParameter, i_MeasureIdParameter, i_PrioritizationParameter, vc_StatusCodeParameter, i_DiseaseMeasureIdParameter, b_IsPrimaryMeasureParameter);
        }
    
        public virtual int usp_DiseaseTherapeuticClass_Delete(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseID, Nullable<int> i_TherapeuticID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseTherapeuticClass_Delete", i_AppUserIdParameter, i_DiseaseIDParameter, i_TherapeuticIDParameter);
        }
    
        public virtual int usp_DiseaseTherapeuticClass_Insert(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, Nullable<int> i_DiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DiseaseTherapeuticClass_Insert", i_AppUserIdParameter, i_TherapeuticIDParameter, i_DiseaseIdParameter);
        }
    
        public virtual ObjectResult<usp_DiseaseTherapeuticClass_Select_Result> usp_DiseaseTherapeuticClass_Select(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DiseaseTherapeuticClass_Select_Result>("usp_DiseaseTherapeuticClass_Select", i_AppUserIdParameter, i_TherapeuticIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_DocumentCategory_Select_Result> usp_DocumentCategory_Select(Nullable<int> i_AppUserId, Nullable<int> i_DocumentCategoryId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentCategoryIdParameter = i_DocumentCategoryId.HasValue ?
                new ObjectParameter("i_DocumentCategoryId", i_DocumentCategoryId) :
                new ObjectParameter("i_DocumentCategoryId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentCategory_Select_Result>("usp_DocumentCategory_Select", i_AppUserIdParameter, i_DocumentCategoryIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_DocumentDisease_Delete(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_DiseaseID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentDisease_Delete", i_AppUserIdParameter, i_LibraryIDParameter, i_DiseaseIDParameter);
        }
    
        public virtual int usp_DocumentDisease_Insert(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_DiseaseID, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentDisease_Insert", i_AppUserIdParameter, i_LibraryIDParameter, i_DiseaseIDParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_DocumentDisease_Search_Result> usp_DocumentDisease_Search(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseID, string vc_DocumentName, string vc_DocumentDescription, Nullable<System.DateTime> dt_LastModifiedDateFrom, Nullable<System.DateTime> dt_LastModifiedDateTo)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var vc_DocumentNameParameter = vc_DocumentName != null ?
                new ObjectParameter("vc_DocumentName", vc_DocumentName) :
                new ObjectParameter("vc_DocumentName", typeof(string));
    
            var vc_DocumentDescriptionParameter = vc_DocumentDescription != null ?
                new ObjectParameter("vc_DocumentDescription", vc_DocumentDescription) :
                new ObjectParameter("vc_DocumentDescription", typeof(string));
    
            var dt_LastModifiedDateFromParameter = dt_LastModifiedDateFrom.HasValue ?
                new ObjectParameter("dt_LastModifiedDateFrom", dt_LastModifiedDateFrom) :
                new ObjectParameter("dt_LastModifiedDateFrom", typeof(System.DateTime));
    
            var dt_LastModifiedDateToParameter = dt_LastModifiedDateTo.HasValue ?
                new ObjectParameter("dt_LastModifiedDateTo", dt_LastModifiedDateTo) :
                new ObjectParameter("dt_LastModifiedDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentDisease_Search_Result>("usp_DocumentDisease_Search", i_AppUserIdParameter, i_DiseaseIDParameter, vc_DocumentNameParameter, vc_DocumentDescriptionParameter, dt_LastModifiedDateFromParameter, dt_LastModifiedDateToParameter);
        }
    
        public virtual ObjectResult<usp_DocumentDisease_Select_Result> usp_DocumentDisease_Select(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_DiseaseID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentDisease_Select_Result>("usp_DocumentDisease_Select", i_AppUserIdParameter, i_LibraryIDParameter, i_DiseaseIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_DocumentDisease_Update(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_DiseaseID, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentDisease_Update", i_AppUserIdParameter, i_LibraryIDParameter, i_DiseaseIDParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_DocumentProgram_Delete(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentProgram_Delete", i_AppUserIdParameter, i_LibraryIDParameter, i_ProgramIDParameter);
        }
    
        public virtual int usp_DocumentProgram_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, Nullable<int> i_LibraryID, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentProgram_Insert", i_AppUserIdParameter, i_ProgramIDParameter, i_LibraryIDParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_DocumentProgram_Search_Result> usp_DocumentProgram_Search(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID, string vc_DocumentName, string vc_DocumentDescription, Nullable<System.DateTime> dt_LastModifiedDateFrom, Nullable<System.DateTime> dt_LastModifiedDateTo)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var vc_DocumentNameParameter = vc_DocumentName != null ?
                new ObjectParameter("vc_DocumentName", vc_DocumentName) :
                new ObjectParameter("vc_DocumentName", typeof(string));
    
            var vc_DocumentDescriptionParameter = vc_DocumentDescription != null ?
                new ObjectParameter("vc_DocumentDescription", vc_DocumentDescription) :
                new ObjectParameter("vc_DocumentDescription", typeof(string));
    
            var dt_LastModifiedDateFromParameter = dt_LastModifiedDateFrom.HasValue ?
                new ObjectParameter("dt_LastModifiedDateFrom", dt_LastModifiedDateFrom) :
                new ObjectParameter("dt_LastModifiedDateFrom", typeof(System.DateTime));
    
            var dt_LastModifiedDateToParameter = dt_LastModifiedDateTo.HasValue ?
                new ObjectParameter("dt_LastModifiedDateTo", dt_LastModifiedDateTo) :
                new ObjectParameter("dt_LastModifiedDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentProgram_Search_Result>("usp_DocumentProgram_Search", i_AppUserIdParameter, i_ProgramIDParameter, vc_DocumentNameParameter, vc_DocumentDescriptionParameter, dt_LastModifiedDateFromParameter, dt_LastModifiedDateToParameter);
        }
    
        public virtual ObjectResult<usp_DocumentProgram_Select_Result> usp_DocumentProgram_Select(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_ProgramID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentProgram_Select_Result>("usp_DocumentProgram_Select", i_AppUserIdParameter, i_LibraryIDParameter, i_ProgramIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_DocumentProgram_Update(Nullable<int> i_AppUserId, Nullable<int> i_LibraryID, Nullable<int> i_ProgramID, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentProgram_Update", i_AppUserIdParameter, i_LibraryIDParameter, i_ProgramIDParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_DocumentType_Delete(Nullable<int> i_AppUserId, Nullable<int> i_DocumentTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentType_Delete", i_AppUserIdParameter, i_DocumentTypeIdParameter);
        }
    
        public virtual int usp_DocumentType_Insert(Nullable<int> i_AppUserId, string v_Name, string v_Description, string v_StatusCode, ObjectParameter o_DocumentTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentType_Insert", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter, o_DocumentTypeId);
        }
    
        public virtual ObjectResult<usp_DocumentType_Select_Result> usp_DocumentType_Select(Nullable<int> i_AppUserId, Nullable<int> i_DocumentTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentType_Select_Result>("usp_DocumentType_Select", i_AppUserIdParameter, i_DocumentTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_DocumentType_Select_DD_Result> usp_DocumentType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DocumentType_Select_DD_Result>("usp_DocumentType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_DocumentType_Update(Nullable<int> i_AppUserId, Nullable<int> i_DocumentTypeId, string v_Name, string v_Description, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentType_Update", i_AppUserIdParameter, i_DocumentTypeIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_EmailAddressType_Select_DD_Result> usp_EmailAddressType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmailAddressType_Select_DD_Result>("usp_EmailAddressType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EmployerGroup_DD_Result> usp_EmployerGroup_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployerGroup_DD_Result>("usp_EmployerGroup_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EmploymentStatus_Select_DD_Result> usp_EmploymentStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmploymentStatus_Select_DD_Result>("usp_EmploymentStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_EncounterType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EncounterType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_EpisodeGroupersAndDisease_Select_Result> usp_EpisodeGroupersAndDisease_Select(Nullable<int> i_AppUserId, Nullable<int> i_GrouperSystemId, Nullable<int> i_GrouperDiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_GrouperSystemIdParameter = i_GrouperSystemId.HasValue ?
                new ObjectParameter("i_GrouperSystemId", i_GrouperSystemId) :
                new ObjectParameter("i_GrouperSystemId", typeof(int));
    
            var i_GrouperDiseaseIdParameter = i_GrouperDiseaseId.HasValue ?
                new ObjectParameter("i_GrouperDiseaseId", i_GrouperDiseaseId) :
                new ObjectParameter("i_GrouperDiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EpisodeGroupersAndDisease_Select_Result>("usp_EpisodeGroupersAndDisease_Select", i_AppUserIdParameter, i_GrouperSystemIdParameter, i_GrouperDiseaseIdParameter);
        }
    
        public virtual int usp_ErrorLog_Insert(Nullable<int> i_UserID, Nullable<int> i_Error_Number, Nullable<int> i_Error_Severity, Nullable<int> i_Error_State, string i_Error_Procedure, Nullable<int> i_Error_Line, string i_Error_Message, Nullable<int> i_Trancount, ObjectParameter i_ErrorLogID)
        {
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_Error_NumberParameter = i_Error_Number.HasValue ?
                new ObjectParameter("i_Error_Number", i_Error_Number) :
                new ObjectParameter("i_Error_Number", typeof(int));
    
            var i_Error_SeverityParameter = i_Error_Severity.HasValue ?
                new ObjectParameter("i_Error_Severity", i_Error_Severity) :
                new ObjectParameter("i_Error_Severity", typeof(int));
    
            var i_Error_StateParameter = i_Error_State.HasValue ?
                new ObjectParameter("i_Error_State", i_Error_State) :
                new ObjectParameter("i_Error_State", typeof(int));
    
            var i_Error_ProcedureParameter = i_Error_Procedure != null ?
                new ObjectParameter("i_Error_Procedure", i_Error_Procedure) :
                new ObjectParameter("i_Error_Procedure", typeof(string));
    
            var i_Error_LineParameter = i_Error_Line.HasValue ?
                new ObjectParameter("i_Error_Line", i_Error_Line) :
                new ObjectParameter("i_Error_Line", typeof(int));
    
            var i_Error_MessageParameter = i_Error_Message != null ?
                new ObjectParameter("i_Error_Message", i_Error_Message) :
                new ObjectParameter("i_Error_Message", typeof(string));
    
            var i_TrancountParameter = i_Trancount.HasValue ?
                new ObjectParameter("i_Trancount", i_Trancount) :
                new ObjectParameter("i_Trancount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ErrorLog_Insert", i_UserIDParameter, i_Error_NumberParameter, i_Error_SeverityParameter, i_Error_StateParameter, i_Error_ProcedureParameter, i_Error_LineParameter, i_Error_MessageParameter, i_TrancountParameter, i_ErrorLogID);
        }
    
        public virtual ObjectResult<usp_Ethnicity_Select_DD_Result> usp_Ethnicity_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ethnicity_Select_DD_Result>("usp_Ethnicity_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_ExecGrantViewDefinition(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExecGrantViewDefinition", loginParameter);
        }
    
        public virtual int Usp_ExecPermissionsForGroupUsers_DbObjects(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ExecPermissionsForGroupUsers_DbObjects", i_AppUserIdParameter);
        }
    
        public virtual int usp_Expirydate_Update(Nullable<System.DateTime> passwordExpiryDate, string primaryEmailid)
        {
            var passwordExpiryDateParameter = passwordExpiryDate.HasValue ?
                new ObjectParameter("PasswordExpiryDate", passwordExpiryDate) :
                new ObjectParameter("PasswordExpiryDate", typeof(System.DateTime));
    
            var primaryEmailidParameter = primaryEmailid != null ?
                new ObjectParameter("PrimaryEmailid", primaryEmailid) :
                new ObjectParameter("PrimaryEmailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Expirydate_Update", passwordExpiryDateParameter, primaryEmailidParameter);
        }
    
        public virtual int usp_ExternalCareProvider_Insert(Nullable<int> i_AppUserId, string vc_FirstName, string vc_MiddleName, string vc_LastName, string vc_AddressLine1, string vc_AddressLine2, string vc_City, string vc_StateCode, string vc_PhoneNumber, string vc_PhoneNumberExt, string vc_EmailId, string vc_Fax, string vc_StatusCode, string vc_ZIPCode, ObjectParameter o_ExternalProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_FirstNameParameter = vc_FirstName != null ?
                new ObjectParameter("vc_FirstName", vc_FirstName) :
                new ObjectParameter("vc_FirstName", typeof(string));
    
            var vc_MiddleNameParameter = vc_MiddleName != null ?
                new ObjectParameter("vc_MiddleName", vc_MiddleName) :
                new ObjectParameter("vc_MiddleName", typeof(string));
    
            var vc_LastNameParameter = vc_LastName != null ?
                new ObjectParameter("vc_LastName", vc_LastName) :
                new ObjectParameter("vc_LastName", typeof(string));
    
            var vc_AddressLine1Parameter = vc_AddressLine1 != null ?
                new ObjectParameter("vc_AddressLine1", vc_AddressLine1) :
                new ObjectParameter("vc_AddressLine1", typeof(string));
    
            var vc_AddressLine2Parameter = vc_AddressLine2 != null ?
                new ObjectParameter("vc_AddressLine2", vc_AddressLine2) :
                new ObjectParameter("vc_AddressLine2", typeof(string));
    
            var vc_CityParameter = vc_City != null ?
                new ObjectParameter("vc_City", vc_City) :
                new ObjectParameter("vc_City", typeof(string));
    
            var vc_StateCodeParameter = vc_StateCode != null ?
                new ObjectParameter("vc_StateCode", vc_StateCode) :
                new ObjectParameter("vc_StateCode", typeof(string));
    
            var vc_PhoneNumberParameter = vc_PhoneNumber != null ?
                new ObjectParameter("vc_PhoneNumber", vc_PhoneNumber) :
                new ObjectParameter("vc_PhoneNumber", typeof(string));
    
            var vc_PhoneNumberExtParameter = vc_PhoneNumberExt != null ?
                new ObjectParameter("vc_PhoneNumberExt", vc_PhoneNumberExt) :
                new ObjectParameter("vc_PhoneNumberExt", typeof(string));
    
            var vc_EmailIdParameter = vc_EmailId != null ?
                new ObjectParameter("vc_EmailId", vc_EmailId) :
                new ObjectParameter("vc_EmailId", typeof(string));
    
            var vc_FaxParameter = vc_Fax != null ?
                new ObjectParameter("vc_Fax", vc_Fax) :
                new ObjectParameter("vc_Fax", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_ZIPCodeParameter = vc_ZIPCode != null ?
                new ObjectParameter("vc_ZIPCode", vc_ZIPCode) :
                new ObjectParameter("vc_ZIPCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExternalCareProvider_Insert", i_AppUserIdParameter, vc_FirstNameParameter, vc_MiddleNameParameter, vc_LastNameParameter, vc_AddressLine1Parameter, vc_AddressLine2Parameter, vc_CityParameter, vc_StateCodeParameter, vc_PhoneNumberParameter, vc_PhoneNumberExtParameter, vc_EmailIdParameter, vc_FaxParameter, vc_StatusCodeParameter, vc_ZIPCodeParameter, o_ExternalProviderId);
        }
    
        public virtual ObjectResult<usp_ExternalCareProvider_Search_Result> usp_ExternalCareProvider_Search(Nullable<int> i_AppUserId, Nullable<int> i_ExternalProviderId, Nullable<int> i_PatientUserId, string vc_FirstName, string vc_LastName, string vc_EmailId, string vc_PhoneNumber, string vc_Fax, string vc_AddressLine1, string vc_AddressLine2, string vc_StatusCode, string vc_City, string vc_ZipCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ExternalProviderIdParameter = i_ExternalProviderId.HasValue ?
                new ObjectParameter("i_ExternalProviderId", i_ExternalProviderId) :
                new ObjectParameter("i_ExternalProviderId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var vc_FirstNameParameter = vc_FirstName != null ?
                new ObjectParameter("vc_FirstName", vc_FirstName) :
                new ObjectParameter("vc_FirstName", typeof(string));
    
            var vc_LastNameParameter = vc_LastName != null ?
                new ObjectParameter("vc_LastName", vc_LastName) :
                new ObjectParameter("vc_LastName", typeof(string));
    
            var vc_EmailIdParameter = vc_EmailId != null ?
                new ObjectParameter("vc_EmailId", vc_EmailId) :
                new ObjectParameter("vc_EmailId", typeof(string));
    
            var vc_PhoneNumberParameter = vc_PhoneNumber != null ?
                new ObjectParameter("vc_PhoneNumber", vc_PhoneNumber) :
                new ObjectParameter("vc_PhoneNumber", typeof(string));
    
            var vc_FaxParameter = vc_Fax != null ?
                new ObjectParameter("vc_Fax", vc_Fax) :
                new ObjectParameter("vc_Fax", typeof(string));
    
            var vc_AddressLine1Parameter = vc_AddressLine1 != null ?
                new ObjectParameter("vc_AddressLine1", vc_AddressLine1) :
                new ObjectParameter("vc_AddressLine1", typeof(string));
    
            var vc_AddressLine2Parameter = vc_AddressLine2 != null ?
                new ObjectParameter("vc_AddressLine2", vc_AddressLine2) :
                new ObjectParameter("vc_AddressLine2", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_CityParameter = vc_City != null ?
                new ObjectParameter("vc_City", vc_City) :
                new ObjectParameter("vc_City", typeof(string));
    
            var vc_ZipCodeParameter = vc_ZipCode != null ?
                new ObjectParameter("vc_ZipCode", vc_ZipCode) :
                new ObjectParameter("vc_ZipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ExternalCareProvider_Search_Result>("usp_ExternalCareProvider_Search", i_AppUserIdParameter, i_ExternalProviderIdParameter, i_PatientUserIdParameter, vc_FirstNameParameter, vc_LastNameParameter, vc_EmailIdParameter, vc_PhoneNumberParameter, vc_FaxParameter, vc_AddressLine1Parameter, vc_AddressLine2Parameter, vc_StatusCodeParameter, vc_CityParameter, vc_ZipCodeParameter);
        }
    
        public virtual int usp_ExternalCareProvider_Select(Nullable<int> i_AppUserId, Nullable<int> i_ExternalProviderId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ExternalProviderIdParameter = i_ExternalProviderId.HasValue ?
                new ObjectParameter("i_ExternalProviderId", i_ExternalProviderId) :
                new ObjectParameter("i_ExternalProviderId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExternalCareProvider_Select", i_AppUserIdParameter, i_ExternalProviderIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ExternalCareProvider_Update(Nullable<int> i_AppUserId, string vc_FirstName, string vc_MiddleName, string vc_LastName, string vc_AddressLine1, string vc_AddressLine2, string vc_City, string vc_StateCode, string vc_PhoneNumber, string vc_PhoneNumberExt, string vc_EmailId, string vc_Fax, string vc_StatusCode, Nullable<int> i_ExternalProviderId, string vc_ZIPCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_FirstNameParameter = vc_FirstName != null ?
                new ObjectParameter("vc_FirstName", vc_FirstName) :
                new ObjectParameter("vc_FirstName", typeof(string));
    
            var vc_MiddleNameParameter = vc_MiddleName != null ?
                new ObjectParameter("vc_MiddleName", vc_MiddleName) :
                new ObjectParameter("vc_MiddleName", typeof(string));
    
            var vc_LastNameParameter = vc_LastName != null ?
                new ObjectParameter("vc_LastName", vc_LastName) :
                new ObjectParameter("vc_LastName", typeof(string));
    
            var vc_AddressLine1Parameter = vc_AddressLine1 != null ?
                new ObjectParameter("vc_AddressLine1", vc_AddressLine1) :
                new ObjectParameter("vc_AddressLine1", typeof(string));
    
            var vc_AddressLine2Parameter = vc_AddressLine2 != null ?
                new ObjectParameter("vc_AddressLine2", vc_AddressLine2) :
                new ObjectParameter("vc_AddressLine2", typeof(string));
    
            var vc_CityParameter = vc_City != null ?
                new ObjectParameter("vc_City", vc_City) :
                new ObjectParameter("vc_City", typeof(string));
    
            var vc_StateCodeParameter = vc_StateCode != null ?
                new ObjectParameter("vc_StateCode", vc_StateCode) :
                new ObjectParameter("vc_StateCode", typeof(string));
    
            var vc_PhoneNumberParameter = vc_PhoneNumber != null ?
                new ObjectParameter("vc_PhoneNumber", vc_PhoneNumber) :
                new ObjectParameter("vc_PhoneNumber", typeof(string));
    
            var vc_PhoneNumberExtParameter = vc_PhoneNumberExt != null ?
                new ObjectParameter("vc_PhoneNumberExt", vc_PhoneNumberExt) :
                new ObjectParameter("vc_PhoneNumberExt", typeof(string));
    
            var vc_EmailIdParameter = vc_EmailId != null ?
                new ObjectParameter("vc_EmailId", vc_EmailId) :
                new ObjectParameter("vc_EmailId", typeof(string));
    
            var vc_FaxParameter = vc_Fax != null ?
                new ObjectParameter("vc_Fax", vc_Fax) :
                new ObjectParameter("vc_Fax", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ExternalProviderIdParameter = i_ExternalProviderId.HasValue ?
                new ObjectParameter("i_ExternalProviderId", i_ExternalProviderId) :
                new ObjectParameter("i_ExternalProviderId", typeof(int));
    
            var vc_ZIPCodeParameter = vc_ZIPCode != null ?
                new ObjectParameter("vc_ZIPCode", vc_ZIPCode) :
                new ObjectParameter("vc_ZIPCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExternalCareProvider_Update", i_AppUserIdParameter, vc_FirstNameParameter, vc_MiddleNameParameter, vc_LastNameParameter, vc_AddressLine1Parameter, vc_AddressLine2Parameter, vc_CityParameter, vc_StateCodeParameter, vc_PhoneNumberParameter, vc_PhoneNumberExtParameter, vc_EmailIdParameter, vc_FaxParameter, vc_StatusCodeParameter, i_ExternalProviderIdParameter, vc_ZIPCodeParameter);
        }
    
        public virtual ObjectResult<usp_ExternalCareProvider_User_Select_Result> usp_ExternalCareProvider_User_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ExternalCareProvider_User_Select_Result>("usp_ExternalCareProvider_User_Select", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ExternalCareProvider_UserProviders_Select_Result> usp_ExternalCareProvider_UserProviders_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ExternalCareProvider_UserProviders_Select_Result>("usp_ExternalCareProvider_UserProviders_Select", i_AppUserIdParameter, i_PatientUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ExternalInternalCareProvider_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExternalInternalCareProvider_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_ExternalInternalCareProvider_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExternalInternalCareProvider_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_FamilyRelation_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FamilyRelation_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Get_SMSIntegrationforPatient_Result> usp_Get_SMSIntegrationforPatient(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_PageType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_PageTypeParameter = i_PageType.HasValue ?
                new ObjectParameter("i_PageType", i_PageType) :
                new ObjectParameter("i_PageType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_SMSIntegrationforPatient_Result>("usp_Get_SMSIntegrationforPatient", i_AppUserIdParameter, i_PatientUserIdParameter, i_PageTypeParameter);
        }
    
        public virtual int USP_GetDependencies(string objectName, Nullable<bool> keepResult)
        {
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            var keepResultParameter = keepResult.HasValue ?
                new ObjectParameter("KeepResult", keepResult) :
                new ObjectParameter("KeepResult", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetDependencies", objectNameParameter, keepResultParameter);
        }
    
        public virtual ObjectResult<usp_GetManagedPopulation_Select_Result> usp_GetManagedPopulation_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetManagedPopulation_Select_Result>("usp_GetManagedPopulation_Select", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_getUserActivityLog_report_Result> usp_getUserActivityLog_report(string v_LoginName, Nullable<System.DateTime> dt_ActivityDate)
        {
            var v_LoginNameParameter = v_LoginName != null ?
                new ObjectParameter("v_LoginName", v_LoginName) :
                new ObjectParameter("v_LoginName", typeof(string));
    
            var dt_ActivityDateParameter = dt_ActivityDate.HasValue ?
                new ObjectParameter("dt_ActivityDate", dt_ActivityDate) :
                new ObjectParameter("dt_ActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getUserActivityLog_report_Result>("usp_getUserActivityLog_report", v_LoginNameParameter, dt_ActivityDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetUserByProviderID(Nullable<int> i_ProviderID, Nullable<int> i_AppUserId)
        {
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetUserByProviderID", i_ProviderIDParameter, i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetUserID_ByUserLoginName(Nullable<int> i_AppUserId, string v_UserLoginName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_UserLoginNameParameter = v_UserLoginName != null ?
                new ObjectParameter("v_UserLoginName", v_UserLoginName) :
                new ObjectParameter("v_UserLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetUserID_ByUserLoginName", i_AppUserIdParameter, v_UserLoginNameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetUserName_ByUserId(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetUserName_ByUserId", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual ObjectResult<usp_GridResolution_Select_Result> usp_GridResolution_Select(Nullable<int> i_AppUserId, string v_ModuleName, string v_PageName, Nullable<short> i_ResolutionValue, string v_GridName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ModuleNameParameter = v_ModuleName != null ?
                new ObjectParameter("v_ModuleName", v_ModuleName) :
                new ObjectParameter("v_ModuleName", typeof(string));
    
            var v_PageNameParameter = v_PageName != null ?
                new ObjectParameter("v_PageName", v_PageName) :
                new ObjectParameter("v_PageName", typeof(string));
    
            var i_ResolutionValueParameter = i_ResolutionValue.HasValue ?
                new ObjectParameter("i_ResolutionValue", i_ResolutionValue) :
                new ObjectParameter("i_ResolutionValue", typeof(short));
    
            var v_GridNameParameter = v_GridName != null ?
                new ObjectParameter("v_GridName", v_GridName) :
                new ObjectParameter("v_GridName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GridResolution_Select_Result>("usp_GridResolution_Select", i_AppUserIdParameter, v_ModuleNameParameter, v_PageNameParameter, i_ResolutionValueParameter, v_GridNameParameter);
        }
    
        public virtual int usp_HandleException(Nullable<int> i_UserID)
        {
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HandleException", i_UserIDParameter);
        }
    
        public virtual int usp_HealthCareQualityBCategory_Insert(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityCategoryId, string vc_HealthCareQualityBCategoryName, ObjectParameter o_HealthCareQualityBCategoryId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityCategoryIdParameter = i_HealthCareQualityCategoryId.HasValue ?
                new ObjectParameter("i_HealthCareQualityCategoryId", i_HealthCareQualityCategoryId) :
                new ObjectParameter("i_HealthCareQualityCategoryId", typeof(int));
    
            var vc_HealthCareQualityBCategoryNameParameter = vc_HealthCareQualityBCategoryName != null ?
                new ObjectParameter("vc_HealthCareQualityBCategoryName", vc_HealthCareQualityBCategoryName) :
                new ObjectParameter("vc_HealthCareQualityBCategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityBCategory_Insert", i_AppUserIdParameter, i_HealthCareQualityCategoryIdParameter, vc_HealthCareQualityBCategoryNameParameter, o_HealthCareQualityBCategoryId);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityBCategory_Select_DD_Result> usp_HealthCareQualityBCategory_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityCategoryId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityCategoryIdParameter = i_HealthCareQualityCategoryId.HasValue ?
                new ObjectParameter("i_HealthCareQualityCategoryId", i_HealthCareQualityCategoryId) :
                new ObjectParameter("i_HealthCareQualityCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityBCategory_Select_DD_Result>("usp_HealthCareQualityBCategory_Select_DD", i_AppUserIdParameter, i_HealthCareQualityCategoryIdParameter);
        }
    
        public virtual int usp_HealthCareQualityCategory_Insert(Nullable<int> i_AppUserId, string vc_HealthCareQualityCategoryName, ObjectParameter o_HealthCareQualityCategoryID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_HealthCareQualityCategoryNameParameter = vc_HealthCareQualityCategoryName != null ?
                new ObjectParameter("vc_HealthCareQualityCategoryName", vc_HealthCareQualityCategoryName) :
                new ObjectParameter("vc_HealthCareQualityCategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityCategory_Insert", i_AppUserIdParameter, vc_HealthCareQualityCategoryNameParameter, o_HealthCareQualityCategoryID);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityCategory_Select_DD_Result> usp_HealthCareQualityCategory_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityCategory_Select_DD_Result>("usp_HealthCareQualityCategory_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_HealthCareQualityCategory_Update(Nullable<int> i_AppUserId, string vc_HealthCareQualityCategoryName, Nullable<int> i_HealthCareQualityCategoryID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_HealthCareQualityCategoryNameParameter = vc_HealthCareQualityCategoryName != null ?
                new ObjectParameter("vc_HealthCareQualityCategoryName", vc_HealthCareQualityCategoryName) :
                new ObjectParameter("vc_HealthCareQualityCategoryName", typeof(string));
    
            var i_HealthCareQualityCategoryIDParameter = i_HealthCareQualityCategoryID.HasValue ?
                new ObjectParameter("i_HealthCareQualityCategoryID", i_HealthCareQualityCategoryID) :
                new ObjectParameter("i_HealthCareQualityCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityCategory_Update", i_AppUserIdParameter, vc_HealthCareQualityCategoryNameParameter, i_HealthCareQualityCategoryIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasure_GenerateCustomNrDr(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasure_GenerateCustomNrDr", i_AppUserIdParameter, i_HealthCareQualityMeasureIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasure_Select(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityBCategoryId, Nullable<int> i_HealthCareQualityStandardId, Nullable<int> i_ReportingYear, string v_ReportingPeriod, Nullable<int> i_ProgramID, Nullable<int> i_DiseaseID, Nullable<int> i_HealthCareQualityCategoryID, Nullable<int> i_ProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityBCategoryIdParameter = i_HealthCareQualityBCategoryId.HasValue ?
                new ObjectParameter("i_HealthCareQualityBCategoryId", i_HealthCareQualityBCategoryId) :
                new ObjectParameter("i_HealthCareQualityBCategoryId", typeof(int));
    
            var i_HealthCareQualityStandardIdParameter = i_HealthCareQualityStandardId.HasValue ?
                new ObjectParameter("i_HealthCareQualityStandardId", i_HealthCareQualityStandardId) :
                new ObjectParameter("i_HealthCareQualityStandardId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(int));
    
            var v_ReportingPeriodParameter = v_ReportingPeriod != null ?
                new ObjectParameter("v_ReportingPeriod", v_ReportingPeriod) :
                new ObjectParameter("v_ReportingPeriod", typeof(string));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var i_HealthCareQualityCategoryIDParameter = i_HealthCareQualityCategoryID.HasValue ?
                new ObjectParameter("i_HealthCareQualityCategoryID", i_HealthCareQualityCategoryID) :
                new ObjectParameter("i_HealthCareQualityCategoryID", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasure_Select", i_AppUserIdParameter, i_HealthCareQualityBCategoryIdParameter, i_HealthCareQualityStandardIdParameter, i_ReportingYearParameter, v_ReportingPeriodParameter, i_ProgramIDParameter, i_DiseaseIDParameter, i_HealthCareQualityCategoryIDParameter, i_ProviderIDParameter);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityMeasure_Select_DD_Result> usp_HealthCareQualityMeasure_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityMeasure_Select_DD_Result>("usp_HealthCareQualityMeasure_Select_DD", i_AppUserIdParameter, i_HealthCareQualityMeasureIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityBCategoryId, string v_HealthCareQualityMeasureName, Nullable<int> i_HealthCareQualityMeasureID, Nullable<int> i_HealthCareQualityStandardId, string v_StatusCode, Nullable<int> i_ReportingYear, string v_ReportingPeriod, string c_AdminOrClincFlag, string v_SpecialityIDList, string v_ProviderIDList, string v_AdminClassificationIDList, Nullable<int> i_ProgramID, Nullable<int> i_DiseaseID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityBCategoryIdParameter = i_HealthCareQualityBCategoryId.HasValue ?
                new ObjectParameter("i_HealthCareQualityBCategoryId", i_HealthCareQualityBCategoryId) :
                new ObjectParameter("i_HealthCareQualityBCategoryId", typeof(int));
    
            var v_HealthCareQualityMeasureNameParameter = v_HealthCareQualityMeasureName != null ?
                new ObjectParameter("v_HealthCareQualityMeasureName", v_HealthCareQualityMeasureName) :
                new ObjectParameter("v_HealthCareQualityMeasureName", typeof(string));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            var i_HealthCareQualityStandardIdParameter = i_HealthCareQualityStandardId.HasValue ?
                new ObjectParameter("i_HealthCareQualityStandardId", i_HealthCareQualityStandardId) :
                new ObjectParameter("i_HealthCareQualityStandardId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(int));
    
            var v_ReportingPeriodParameter = v_ReportingPeriod != null ?
                new ObjectParameter("v_ReportingPeriod", v_ReportingPeriod) :
                new ObjectParameter("v_ReportingPeriod", typeof(string));
    
            var c_AdminOrClincFlagParameter = c_AdminOrClincFlag != null ?
                new ObjectParameter("c_AdminOrClincFlag", c_AdminOrClincFlag) :
                new ObjectParameter("c_AdminOrClincFlag", typeof(string));
    
            var v_SpecialityIDListParameter = v_SpecialityIDList != null ?
                new ObjectParameter("v_SpecialityIDList", v_SpecialityIDList) :
                new ObjectParameter("v_SpecialityIDList", typeof(string));
    
            var v_ProviderIDListParameter = v_ProviderIDList != null ?
                new ObjectParameter("v_ProviderIDList", v_ProviderIDList) :
                new ObjectParameter("v_ProviderIDList", typeof(string));
    
            var v_AdminClassificationIDListParameter = v_AdminClassificationIDList != null ?
                new ObjectParameter("v_AdminClassificationIDList", v_AdminClassificationIDList) :
                new ObjectParameter("v_AdminClassificationIDList", typeof(string));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasure_Update", i_AppUserIdParameter, i_HealthCareQualityBCategoryIdParameter, v_HealthCareQualityMeasureNameParameter, i_HealthCareQualityMeasureIDParameter, i_HealthCareQualityStandardIdParameter, v_StatusCodeParameter, i_ReportingYearParameter, v_ReportingPeriodParameter, c_AdminOrClincFlagParameter, v_SpecialityIDListParameter, v_ProviderIDListParameter, v_AdminClassificationIDListParameter, i_ProgramIDParameter, i_DiseaseIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasureNrDrDefinition_Delete(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureNrDrDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureNrDrDefinitionIDParameter = i_HealthCareQualityMeasureNrDrDefinitionID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureNrDrDefinitionID", i_HealthCareQualityMeasureNrDrDefinitionID) :
                new ObjectParameter("i_HealthCareQualityMeasureNrDrDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasureNrDrDefinition_Delete", i_AppUserIdParameter, i_HealthCareQualityMeasureNrDrDefinitionIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasureNrDrDefinition_Insert(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureID, string c_NrDrIndicator, string v_CriteriaText, string v_JoinType, string v_JoinStatement, string v_OnClause, string v_WhereClause, string v_CriteriaTypeName, ObjectParameter o_HealthCareQualityMeasureNrDrDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            var c_NrDrIndicatorParameter = c_NrDrIndicator != null ?
                new ObjectParameter("c_NrDrIndicator", c_NrDrIndicator) :
                new ObjectParameter("c_NrDrIndicator", typeof(string));
    
            var v_CriteriaTextParameter = v_CriteriaText != null ?
                new ObjectParameter("v_CriteriaText", v_CriteriaText) :
                new ObjectParameter("v_CriteriaText", typeof(string));
    
            var v_JoinTypeParameter = v_JoinType != null ?
                new ObjectParameter("v_JoinType", v_JoinType) :
                new ObjectParameter("v_JoinType", typeof(string));
    
            var v_JoinStatementParameter = v_JoinStatement != null ?
                new ObjectParameter("v_JoinStatement", v_JoinStatement) :
                new ObjectParameter("v_JoinStatement", typeof(string));
    
            var v_OnClauseParameter = v_OnClause != null ?
                new ObjectParameter("v_OnClause", v_OnClause) :
                new ObjectParameter("v_OnClause", typeof(string));
    
            var v_WhereClauseParameter = v_WhereClause != null ?
                new ObjectParameter("v_WhereClause", v_WhereClause) :
                new ObjectParameter("v_WhereClause", typeof(string));
    
            var v_CriteriaTypeNameParameter = v_CriteriaTypeName != null ?
                new ObjectParameter("v_CriteriaTypeName", v_CriteriaTypeName) :
                new ObjectParameter("v_CriteriaTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasureNrDrDefinition_Insert", i_AppUserIdParameter, i_HealthCareQualityMeasureIDParameter, c_NrDrIndicatorParameter, v_CriteriaTextParameter, v_JoinTypeParameter, v_JoinStatementParameter, v_OnClauseParameter, v_WhereClauseParameter, v_CriteriaTypeNameParameter, o_HealthCareQualityMeasureNrDrDefinitionID);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityMeasureNrDrDefinition_Select_Result> usp_HealthCareQualityMeasureNrDrDefinition_Select(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityMeasureNrDrDefinition_Select_Result>("usp_HealthCareQualityMeasureNrDrDefinition_Select", i_AppUserIdParameter, i_HealthCareQualityMeasureIDParameter);
        }
    
        public virtual int usp_HealthCareQualityMeasureNrDrDefinition_Update(Nullable<int> i_AppUserId, Nullable<int> i_HealthCareQualityMeasureNrDrDefinitionID, Nullable<int> i_HealthCareQualityMeasureID, string c_NrDrIndicator, string v_CriteriaText, string v_JoinType, string v_JoinStatement, string v_OnClause, string v_WhereClause, string v_CriteriaTypeName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthCareQualityMeasureNrDrDefinitionIDParameter = i_HealthCareQualityMeasureNrDrDefinitionID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureNrDrDefinitionID", i_HealthCareQualityMeasureNrDrDefinitionID) :
                new ObjectParameter("i_HealthCareQualityMeasureNrDrDefinitionID", typeof(int));
    
            var i_HealthCareQualityMeasureIDParameter = i_HealthCareQualityMeasureID.HasValue ?
                new ObjectParameter("i_HealthCareQualityMeasureID", i_HealthCareQualityMeasureID) :
                new ObjectParameter("i_HealthCareQualityMeasureID", typeof(int));
    
            var c_NrDrIndicatorParameter = c_NrDrIndicator != null ?
                new ObjectParameter("c_NrDrIndicator", c_NrDrIndicator) :
                new ObjectParameter("c_NrDrIndicator", typeof(string));
    
            var v_CriteriaTextParameter = v_CriteriaText != null ?
                new ObjectParameter("v_CriteriaText", v_CriteriaText) :
                new ObjectParameter("v_CriteriaText", typeof(string));
    
            var v_JoinTypeParameter = v_JoinType != null ?
                new ObjectParameter("v_JoinType", v_JoinType) :
                new ObjectParameter("v_JoinType", typeof(string));
    
            var v_JoinStatementParameter = v_JoinStatement != null ?
                new ObjectParameter("v_JoinStatement", v_JoinStatement) :
                new ObjectParameter("v_JoinStatement", typeof(string));
    
            var v_OnClauseParameter = v_OnClause != null ?
                new ObjectParameter("v_OnClause", v_OnClause) :
                new ObjectParameter("v_OnClause", typeof(string));
    
            var v_WhereClauseParameter = v_WhereClause != null ?
                new ObjectParameter("v_WhereClause", v_WhereClause) :
                new ObjectParameter("v_WhereClause", typeof(string));
    
            var v_CriteriaTypeNameParameter = v_CriteriaTypeName != null ?
                new ObjectParameter("v_CriteriaTypeName", v_CriteriaTypeName) :
                new ObjectParameter("v_CriteriaTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthCareQualityMeasureNrDrDefinition_Update", i_AppUserIdParameter, i_HealthCareQualityMeasureNrDrDefinitionIDParameter, i_HealthCareQualityMeasureIDParameter, c_NrDrIndicatorParameter, v_CriteriaTextParameter, v_JoinTypeParameter, v_JoinStatementParameter, v_OnClauseParameter, v_WhereClauseParameter, v_CriteriaTypeNameParameter);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityStandard_Insert_Result> usp_HealthCareQualityStandard_Insert(Nullable<int> i_AppUserId, string vc_HealthCareQualityStandardName, string vc_CustomMeasureType, ObjectParameter o_HealthCareQualityStandardID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_HealthCareQualityStandardNameParameter = vc_HealthCareQualityStandardName != null ?
                new ObjectParameter("vc_HealthCareQualityStandardName", vc_HealthCareQualityStandardName) :
                new ObjectParameter("vc_HealthCareQualityStandardName", typeof(string));
    
            var vc_CustomMeasureTypeParameter = vc_CustomMeasureType != null ?
                new ObjectParameter("vc_CustomMeasureType", vc_CustomMeasureType) :
                new ObjectParameter("vc_CustomMeasureType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityStandard_Insert_Result>("usp_HealthCareQualityStandard_Insert", i_AppUserIdParameter, vc_HealthCareQualityStandardNameParameter, vc_CustomMeasureTypeParameter, o_HealthCareQualityStandardID);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityStandard_Select_DD_Result> usp_HealthCareQualityStandard_Select_DD(Nullable<int> i_AppUserId, Nullable<bool> b_MeasureTypeStatus)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_MeasureTypeStatusParameter = b_MeasureTypeStatus.HasValue ?
                new ObjectParameter("b_MeasureTypeStatus", b_MeasureTypeStatus) :
                new ObjectParameter("b_MeasureTypeStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityStandard_Select_DD_Result>("usp_HealthCareQualityStandard_Select_DD", i_AppUserIdParameter, b_MeasureTypeStatusParameter);
        }
    
        public virtual ObjectResult<usp_HealthCareQualityStandardCategoryMeasure_Select_Result> usp_HealthCareQualityStandardCategoryMeasure_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthCareQualityStandardCategoryMeasure_Select_Result>("usp_HealthCareQualityStandardCategoryMeasure_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_HealthIndicatorsAndBarriers_Insert(Nullable<int> i_AppUserId, string v_Name, string v_Description, string v_StatusCode, string c_Type, ObjectParameter o_HealthIndicatorsAndBarriersId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var c_TypeParameter = c_Type != null ?
                new ObjectParameter("c_Type", c_Type) :
                new ObjectParameter("c_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthIndicatorsAndBarriers_Insert", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter, c_TypeParameter, o_HealthIndicatorsAndBarriersId);
        }
    
        public virtual ObjectResult<usp_HealthIndicatorsAndBarriers_Select_Result> usp_HealthIndicatorsAndBarriers_Select(Nullable<int> i_AppUserId, string c_Type, string c_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var c_TypeParameter = c_Type != null ?
                new ObjectParameter("c_Type", c_Type) :
                new ObjectParameter("c_Type", typeof(string));
    
            var c_StatusCodeParameter = c_StatusCode != null ?
                new ObjectParameter("c_StatusCode", c_StatusCode) :
                new ObjectParameter("c_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthIndicatorsAndBarriers_Select_Result>("usp_HealthIndicatorsAndBarriers_Select", i_AppUserIdParameter, c_TypeParameter, c_StatusCodeParameter);
        }
    
        public virtual int usp_HealthIndicatorsAndBarriers_Update(Nullable<int> i_AppUserId, string v_Name, string v_Description, string v_StatusCode, string c_Type, Nullable<int> i_HealthIndicatorsAndBarriersId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var c_TypeParameter = c_Type != null ?
                new ObjectParameter("c_Type", c_Type) :
                new ObjectParameter("c_Type", typeof(string));
    
            var i_HealthIndicatorsAndBarriersIdParameter = i_HealthIndicatorsAndBarriersId.HasValue ?
                new ObjectParameter("i_HealthIndicatorsAndBarriersId", i_HealthIndicatorsAndBarriersId) :
                new ObjectParameter("i_HealthIndicatorsAndBarriersId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthIndicatorsAndBarriers_Update", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter, c_TypeParameter, i_HealthIndicatorsAndBarriersIdParameter);
        }
    
        public virtual int usp_HealthStatusScoreOrganization_Insert(Nullable<int> i_AppUserId, string vc_Name, Nullable<int> i_SortOrder, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthStatusScoreOrganization_Insert", i_AppUserIdParameter, vc_NameParameter, i_SortOrderParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_HealthStatusScoreOrganization_Select_Result> usp_HealthStatusScoreOrganization_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthStatusScoreOrganization_Select_Result>("usp_HealthStatusScoreOrganization_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_HealthStatusScoreOrganization_Select_DD_Result> usp_HealthStatusScoreOrganization_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthStatusScoreOrganization_Select_DD_Result>("usp_HealthStatusScoreOrganization_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_HealthStatusScoreOrganization_Update(Nullable<int> i_AppUserId, string vc_Name, Nullable<int> i_SortOrder, string vc_StatusCode, Nullable<int> i_HealthStatusScoreOrgId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_HealthStatusScoreOrgIdParameter = i_HealthStatusScoreOrgId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreOrgId", i_HealthStatusScoreOrgId) :
                new ObjectParameter("i_HealthStatusScoreOrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthStatusScoreOrganization_Update", i_AppUserIdParameter, vc_NameParameter, i_SortOrderParameter, vc_StatusCodeParameter, i_HealthStatusScoreOrgIdParameter);
        }
    
        public virtual int usp_HealthStatusScoreType_Insert(Nullable<int> i_AppUserId, string vc_Name, Nullable<int> i_HealthStatusScoreOrgId, string vc_Description, Nullable<int> i_SortOrder, string vc_StatusCode, string i_Operator1forGoodScore, Nullable<decimal> d_Operator1Value1forGoodScore, Nullable<decimal> d_Operator1Value2forGoodScore, string i_Operator2forGoodScore, Nullable<decimal> d_Operator2Value1forGoodScore, Nullable<decimal> d_Operator2Value2forGoodScore, string vc_TextValueforGoodScore, string i_Operator1forFairScore, Nullable<decimal> d_Operator1Value1forFairScore, Nullable<decimal> d_Operator1Value2forFairScore, string i_Operator2forFairScore, Nullable<decimal> d_Operator2Value1forFairScore, Nullable<decimal> d_Operator2Value2forFairScore, string vc_TextValueforFairScore, string i_Operator1forPoorScore, Nullable<decimal> d_Operator1Value1forPoorScore, Nullable<decimal> d_Operator1Value2forPoorScore, string i_Operator2forPoorScore, Nullable<decimal> d_Operator2Value1forPoorScore, Nullable<decimal> d_Operator2Value2forPoorScore, string vc_TextValueforPoorScore)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var i_HealthStatusScoreOrgIdParameter = i_HealthStatusScoreOrgId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreOrgId", i_HealthStatusScoreOrgId) :
                new ObjectParameter("i_HealthStatusScoreOrgId", typeof(int));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_Operator1forGoodScoreParameter = i_Operator1forGoodScore != null ?
                new ObjectParameter("i_Operator1forGoodScore", i_Operator1forGoodScore) :
                new ObjectParameter("i_Operator1forGoodScore", typeof(string));
    
            var d_Operator1Value1forGoodScoreParameter = d_Operator1Value1forGoodScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forGoodScore", d_Operator1Value1forGoodScore) :
                new ObjectParameter("d_Operator1Value1forGoodScore", typeof(decimal));
    
            var d_Operator1Value2forGoodScoreParameter = d_Operator1Value2forGoodScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forGoodScore", d_Operator1Value2forGoodScore) :
                new ObjectParameter("d_Operator1Value2forGoodScore", typeof(decimal));
    
            var i_Operator2forGoodScoreParameter = i_Operator2forGoodScore != null ?
                new ObjectParameter("i_Operator2forGoodScore", i_Operator2forGoodScore) :
                new ObjectParameter("i_Operator2forGoodScore", typeof(string));
    
            var d_Operator2Value1forGoodScoreParameter = d_Operator2Value1forGoodScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forGoodScore", d_Operator2Value1forGoodScore) :
                new ObjectParameter("d_Operator2Value1forGoodScore", typeof(decimal));
    
            var d_Operator2Value2forGoodScoreParameter = d_Operator2Value2forGoodScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forGoodScore", d_Operator2Value2forGoodScore) :
                new ObjectParameter("d_Operator2Value2forGoodScore", typeof(decimal));
    
            var vc_TextValueforGoodScoreParameter = vc_TextValueforGoodScore != null ?
                new ObjectParameter("vc_TextValueforGoodScore", vc_TextValueforGoodScore) :
                new ObjectParameter("vc_TextValueforGoodScore", typeof(string));
    
            var i_Operator1forFairScoreParameter = i_Operator1forFairScore != null ?
                new ObjectParameter("i_Operator1forFairScore", i_Operator1forFairScore) :
                new ObjectParameter("i_Operator1forFairScore", typeof(string));
    
            var d_Operator1Value1forFairScoreParameter = d_Operator1Value1forFairScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forFairScore", d_Operator1Value1forFairScore) :
                new ObjectParameter("d_Operator1Value1forFairScore", typeof(decimal));
    
            var d_Operator1Value2forFairScoreParameter = d_Operator1Value2forFairScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forFairScore", d_Operator1Value2forFairScore) :
                new ObjectParameter("d_Operator1Value2forFairScore", typeof(decimal));
    
            var i_Operator2forFairScoreParameter = i_Operator2forFairScore != null ?
                new ObjectParameter("i_Operator2forFairScore", i_Operator2forFairScore) :
                new ObjectParameter("i_Operator2forFairScore", typeof(string));
    
            var d_Operator2Value1forFairScoreParameter = d_Operator2Value1forFairScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forFairScore", d_Operator2Value1forFairScore) :
                new ObjectParameter("d_Operator2Value1forFairScore", typeof(decimal));
    
            var d_Operator2Value2forFairScoreParameter = d_Operator2Value2forFairScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forFairScore", d_Operator2Value2forFairScore) :
                new ObjectParameter("d_Operator2Value2forFairScore", typeof(decimal));
    
            var vc_TextValueforFairScoreParameter = vc_TextValueforFairScore != null ?
                new ObjectParameter("vc_TextValueforFairScore", vc_TextValueforFairScore) :
                new ObjectParameter("vc_TextValueforFairScore", typeof(string));
    
            var i_Operator1forPoorScoreParameter = i_Operator1forPoorScore != null ?
                new ObjectParameter("i_Operator1forPoorScore", i_Operator1forPoorScore) :
                new ObjectParameter("i_Operator1forPoorScore", typeof(string));
    
            var d_Operator1Value1forPoorScoreParameter = d_Operator1Value1forPoorScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forPoorScore", d_Operator1Value1forPoorScore) :
                new ObjectParameter("d_Operator1Value1forPoorScore", typeof(decimal));
    
            var d_Operator1Value2forPoorScoreParameter = d_Operator1Value2forPoorScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forPoorScore", d_Operator1Value2forPoorScore) :
                new ObjectParameter("d_Operator1Value2forPoorScore", typeof(decimal));
    
            var i_Operator2forPoorScoreParameter = i_Operator2forPoorScore != null ?
                new ObjectParameter("i_Operator2forPoorScore", i_Operator2forPoorScore) :
                new ObjectParameter("i_Operator2forPoorScore", typeof(string));
    
            var d_Operator2Value1forPoorScoreParameter = d_Operator2Value1forPoorScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forPoorScore", d_Operator2Value1forPoorScore) :
                new ObjectParameter("d_Operator2Value1forPoorScore", typeof(decimal));
    
            var d_Operator2Value2forPoorScoreParameter = d_Operator2Value2forPoorScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forPoorScore", d_Operator2Value2forPoorScore) :
                new ObjectParameter("d_Operator2Value2forPoorScore", typeof(decimal));
    
            var vc_TextValueforPoorScoreParameter = vc_TextValueforPoorScore != null ?
                new ObjectParameter("vc_TextValueforPoorScore", vc_TextValueforPoorScore) :
                new ObjectParameter("vc_TextValueforPoorScore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthStatusScoreType_Insert", i_AppUserIdParameter, vc_NameParameter, i_HealthStatusScoreOrgIdParameter, vc_DescriptionParameter, i_SortOrderParameter, vc_StatusCodeParameter, i_Operator1forGoodScoreParameter, d_Operator1Value1forGoodScoreParameter, d_Operator1Value2forGoodScoreParameter, i_Operator2forGoodScoreParameter, d_Operator2Value1forGoodScoreParameter, d_Operator2Value2forGoodScoreParameter, vc_TextValueforGoodScoreParameter, i_Operator1forFairScoreParameter, d_Operator1Value1forFairScoreParameter, d_Operator1Value2forFairScoreParameter, i_Operator2forFairScoreParameter, d_Operator2Value1forFairScoreParameter, d_Operator2Value2forFairScoreParameter, vc_TextValueforFairScoreParameter, i_Operator1forPoorScoreParameter, d_Operator1Value1forPoorScoreParameter, d_Operator1Value2forPoorScoreParameter, i_Operator2forPoorScoreParameter, d_Operator2Value1forPoorScoreParameter, d_Operator2Value2forPoorScoreParameter, vc_TextValueforPoorScoreParameter);
        }
    
        public virtual ObjectResult<usp_HealthStatusScoreType_Select_Result> usp_HealthStatusScoreType_Select(Nullable<int> i_AppUserId, Nullable<int> i_HealthStatusScoreOrgId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthStatusScoreOrgIdParameter = i_HealthStatusScoreOrgId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreOrgId", i_HealthStatusScoreOrgId) :
                new ObjectParameter("i_HealthStatusScoreOrgId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthStatusScoreType_Select_Result>("usp_HealthStatusScoreType_Select", i_AppUserIdParameter, i_HealthStatusScoreOrgIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_HealthStatusScoreType_Select_ByHealthStatusScoreType_Result> usp_HealthStatusScoreType_Select_ByHealthStatusScoreType(Nullable<int> i_AppUserId, Nullable<int> i_HealthStatusScoreId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthStatusScoreIdParameter = i_HealthStatusScoreId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreId", i_HealthStatusScoreId) :
                new ObjectParameter("i_HealthStatusScoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthStatusScoreType_Select_ByHealthStatusScoreType_Result>("usp_HealthStatusScoreType_Select_ByHealthStatusScoreType", i_AppUserIdParameter, i_HealthStatusScoreIdParameter);
        }
    
        public virtual ObjectResult<usp_HealthStatusScoreType_Select_DD_Result> usp_HealthStatusScoreType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HealthStatusScoreType_Select_DD_Result>("usp_HealthStatusScoreType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_HealthStatusScoreType_Update(Nullable<int> i_AppUserId, Nullable<int> i_HealthStatusScoreId, string vc_Name, Nullable<int> i_HealthStatusScoreOrgId, string vc_Description, Nullable<int> i_SortOrder, string vc_StatusCode, string i_Operator1forGoodScore, Nullable<decimal> d_Operator1Value1forGoodScore, Nullable<decimal> d_Operator1Value2forGoodScore, string i_Operator2forGoodScore, Nullable<decimal> d_Operator2Value1forGoodScore, Nullable<decimal> d_Operator2Value2forGoodScore, string vc_TextValueforGoodScore, string i_Operator1forFairScore, Nullable<decimal> d_Operator1Value1forFairScore, Nullable<decimal> d_Operator1Value2forFairScore, string i_Operator2forFairScore, Nullable<decimal> d_Operator2Value1forFairScore, Nullable<decimal> d_Operator2Value2forFairScore, string vc_TextValueforFairScore, string i_Operator1forPoorScore, Nullable<decimal> d_Operator1Value1forPoorScore, Nullable<decimal> d_Operator1Value2forPoorScore, string i_Operator2forPoorScore, Nullable<decimal> d_Operator2Value1forPoorScore, Nullable<decimal> d_Operator2Value2forPoorScore, string vc_TextValueforPoorScore)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthStatusScoreIdParameter = i_HealthStatusScoreId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreId", i_HealthStatusScoreId) :
                new ObjectParameter("i_HealthStatusScoreId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var i_HealthStatusScoreOrgIdParameter = i_HealthStatusScoreOrgId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreOrgId", i_HealthStatusScoreOrgId) :
                new ObjectParameter("i_HealthStatusScoreOrgId", typeof(int));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_Operator1forGoodScoreParameter = i_Operator1forGoodScore != null ?
                new ObjectParameter("i_Operator1forGoodScore", i_Operator1forGoodScore) :
                new ObjectParameter("i_Operator1forGoodScore", typeof(string));
    
            var d_Operator1Value1forGoodScoreParameter = d_Operator1Value1forGoodScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forGoodScore", d_Operator1Value1forGoodScore) :
                new ObjectParameter("d_Operator1Value1forGoodScore", typeof(decimal));
    
            var d_Operator1Value2forGoodScoreParameter = d_Operator1Value2forGoodScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forGoodScore", d_Operator1Value2forGoodScore) :
                new ObjectParameter("d_Operator1Value2forGoodScore", typeof(decimal));
    
            var i_Operator2forGoodScoreParameter = i_Operator2forGoodScore != null ?
                new ObjectParameter("i_Operator2forGoodScore", i_Operator2forGoodScore) :
                new ObjectParameter("i_Operator2forGoodScore", typeof(string));
    
            var d_Operator2Value1forGoodScoreParameter = d_Operator2Value1forGoodScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forGoodScore", d_Operator2Value1forGoodScore) :
                new ObjectParameter("d_Operator2Value1forGoodScore", typeof(decimal));
    
            var d_Operator2Value2forGoodScoreParameter = d_Operator2Value2forGoodScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forGoodScore", d_Operator2Value2forGoodScore) :
                new ObjectParameter("d_Operator2Value2forGoodScore", typeof(decimal));
    
            var vc_TextValueforGoodScoreParameter = vc_TextValueforGoodScore != null ?
                new ObjectParameter("vc_TextValueforGoodScore", vc_TextValueforGoodScore) :
                new ObjectParameter("vc_TextValueforGoodScore", typeof(string));
    
            var i_Operator1forFairScoreParameter = i_Operator1forFairScore != null ?
                new ObjectParameter("i_Operator1forFairScore", i_Operator1forFairScore) :
                new ObjectParameter("i_Operator1forFairScore", typeof(string));
    
            var d_Operator1Value1forFairScoreParameter = d_Operator1Value1forFairScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forFairScore", d_Operator1Value1forFairScore) :
                new ObjectParameter("d_Operator1Value1forFairScore", typeof(decimal));
    
            var d_Operator1Value2forFairScoreParameter = d_Operator1Value2forFairScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forFairScore", d_Operator1Value2forFairScore) :
                new ObjectParameter("d_Operator1Value2forFairScore", typeof(decimal));
    
            var i_Operator2forFairScoreParameter = i_Operator2forFairScore != null ?
                new ObjectParameter("i_Operator2forFairScore", i_Operator2forFairScore) :
                new ObjectParameter("i_Operator2forFairScore", typeof(string));
    
            var d_Operator2Value1forFairScoreParameter = d_Operator2Value1forFairScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forFairScore", d_Operator2Value1forFairScore) :
                new ObjectParameter("d_Operator2Value1forFairScore", typeof(decimal));
    
            var d_Operator2Value2forFairScoreParameter = d_Operator2Value2forFairScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forFairScore", d_Operator2Value2forFairScore) :
                new ObjectParameter("d_Operator2Value2forFairScore", typeof(decimal));
    
            var vc_TextValueforFairScoreParameter = vc_TextValueforFairScore != null ?
                new ObjectParameter("vc_TextValueforFairScore", vc_TextValueforFairScore) :
                new ObjectParameter("vc_TextValueforFairScore", typeof(string));
    
            var i_Operator1forPoorScoreParameter = i_Operator1forPoorScore != null ?
                new ObjectParameter("i_Operator1forPoorScore", i_Operator1forPoorScore) :
                new ObjectParameter("i_Operator1forPoorScore", typeof(string));
    
            var d_Operator1Value1forPoorScoreParameter = d_Operator1Value1forPoorScore.HasValue ?
                new ObjectParameter("d_Operator1Value1forPoorScore", d_Operator1Value1forPoorScore) :
                new ObjectParameter("d_Operator1Value1forPoorScore", typeof(decimal));
    
            var d_Operator1Value2forPoorScoreParameter = d_Operator1Value2forPoorScore.HasValue ?
                new ObjectParameter("d_Operator1Value2forPoorScore", d_Operator1Value2forPoorScore) :
                new ObjectParameter("d_Operator1Value2forPoorScore", typeof(decimal));
    
            var i_Operator2forPoorScoreParameter = i_Operator2forPoorScore != null ?
                new ObjectParameter("i_Operator2forPoorScore", i_Operator2forPoorScore) :
                new ObjectParameter("i_Operator2forPoorScore", typeof(string));
    
            var d_Operator2Value1forPoorScoreParameter = d_Operator2Value1forPoorScore.HasValue ?
                new ObjectParameter("d_Operator2Value1forPoorScore", d_Operator2Value1forPoorScore) :
                new ObjectParameter("d_Operator2Value1forPoorScore", typeof(decimal));
    
            var d_Operator2Value2forPoorScoreParameter = d_Operator2Value2forPoorScore.HasValue ?
                new ObjectParameter("d_Operator2Value2forPoorScore", d_Operator2Value2forPoorScore) :
                new ObjectParameter("d_Operator2Value2forPoorScore", typeof(decimal));
    
            var vc_TextValueforPoorScoreParameter = vc_TextValueforPoorScore != null ?
                new ObjectParameter("vc_TextValueforPoorScore", vc_TextValueforPoorScore) :
                new ObjectParameter("vc_TextValueforPoorScore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HealthStatusScoreType_Update", i_AppUserIdParameter, i_HealthStatusScoreIdParameter, vc_NameParameter, i_HealthStatusScoreOrgIdParameter, vc_DescriptionParameter, i_SortOrderParameter, vc_StatusCodeParameter, i_Operator1forGoodScoreParameter, d_Operator1Value1forGoodScoreParameter, d_Operator1Value2forGoodScoreParameter, i_Operator2forGoodScoreParameter, d_Operator2Value1forGoodScoreParameter, d_Operator2Value2forGoodScoreParameter, vc_TextValueforGoodScoreParameter, i_Operator1forFairScoreParameter, d_Operator1Value1forFairScoreParameter, d_Operator1Value2forFairScoreParameter, i_Operator2forFairScoreParameter, d_Operator2Value1forFairScoreParameter, d_Operator2Value2forFairScoreParameter, vc_TextValueforFairScoreParameter, i_Operator1forPoorScoreParameter, d_Operator1Value1forPoorScoreParameter, d_Operator1Value2forPoorScoreParameter, i_Operator2forPoorScoreParameter, d_Operator2Value1forPoorScoreParameter, d_Operator2Value2forPoorScoreParameter, vc_TextValueforPoorScoreParameter);
        }
    
        public virtual int usp_HEDIS_ART_GetInsureds_EnrollmentGaps_Eligible_2012(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> allowedEnrollmentGaps, Nullable<int> allowedEnrollmentGaps_MAXDays, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var allowedEnrollmentGapsParameter = allowedEnrollmentGaps.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps", allowedEnrollmentGaps) :
                new ObjectParameter("AllowedEnrollmentGaps", typeof(int));
    
            var allowedEnrollmentGaps_MAXDaysParameter = allowedEnrollmentGaps_MAXDays.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", allowedEnrollmentGaps_MAXDays) :
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ART_GetInsureds_EnrollmentGaps_Eligible_2012", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, allowedEnrollmentGapsParameter, allowedEnrollmentGaps_MAXDaysParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        public virtual int usp_HEDIS_ART_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ART_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_ART_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchordDate_Month, Nullable<int> anchordDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Rx_Dispense, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchordDate_MonthParameter = anchordDate_Month.HasValue ?
                new ObjectParameter("AnchordDate_Month", anchordDate_Month) :
                new ObjectParameter("AnchordDate_Month", typeof(int));
    
            var anchordDate_DayParameter = anchordDate_Day.HasValue ?
                new ObjectParameter("AnchordDate_Day", anchordDate_Day) :
                new ObjectParameter("AnchordDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ART_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchordDate_MonthParameter, anchordDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Rx_DispenseParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_ASM_GetInsureds_EnrollmentGaps_Eligible_2012(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> allowedEnrollmentGaps, Nullable<int> allowedEnrollmentGaps_MAXDays, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var allowedEnrollmentGapsParameter = allowedEnrollmentGaps.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps", allowedEnrollmentGaps) :
                new ObjectParameter("AllowedEnrollmentGaps", typeof(int));
    
            var allowedEnrollmentGaps_MAXDaysParameter = allowedEnrollmentGaps_MAXDays.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", allowedEnrollmentGaps_MAXDays) :
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ASM_GetInsureds_EnrollmentGaps_Eligible_2012", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, allowedEnrollmentGapsParameter, allowedEnrollmentGaps_MAXDaysParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        public virtual int usp_HEDIS_ASM_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Encounters_Outpatient, Nullable<int> num_Encounters_ED, Nullable<int> num_Encounters_AcuteInpatient, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var num_Encounters_EDParameter = num_Encounters_ED.HasValue ?
                new ObjectParameter("Num_Encounters_ED", num_Encounters_ED) :
                new ObjectParameter("Num_Encounters_ED", typeof(int));
    
            var num_Encounters_AcuteInpatientParameter = num_Encounters_AcuteInpatient.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient", num_Encounters_AcuteInpatient) :
                new ObjectParameter("Num_Encounters_AcuteInpatient", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ASM_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Encounters_OutpatientParameter, num_Encounters_EDParameter, num_Encounters_AcuteInpatientParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_ASM_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchordDate_Month, Nullable<int> anchordDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Rx_Dispense, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchordDate_MonthParameter = anchordDate_Month.HasValue ?
                new ObjectParameter("AnchordDate_Month", anchordDate_Month) :
                new ObjectParameter("AnchordDate_Month", typeof(int));
    
            var anchordDate_DayParameter = anchordDate_Day.HasValue ?
                new ObjectParameter("AnchordDate_Day", anchordDate_Day) :
                new ObjectParameter("AnchordDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_ASM_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchordDate_MonthParameter, anchordDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Rx_DispenseParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_CBP_GetInsureds_EnrollmentGaps_Eligible_2012(string insurancePlanType, string insuranceProductType, string insuranceBenefitType, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> allowedEnrollmentGaps, Nullable<int> allowedEnrollmentGaps_MAXDays, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insurancePlanTypeParameter = insurancePlanType != null ?
                new ObjectParameter("InsurancePlanType", insurancePlanType) :
                new ObjectParameter("InsurancePlanType", typeof(string));
    
            var insuranceProductTypeParameter = insuranceProductType != null ?
                new ObjectParameter("InsuranceProductType", insuranceProductType) :
                new ObjectParameter("InsuranceProductType", typeof(string));
    
            var insuranceBenefitTypeParameter = insuranceBenefitType != null ?
                new ObjectParameter("InsuranceBenefitType", insuranceBenefitType) :
                new ObjectParameter("InsuranceBenefitType", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var allowedEnrollmentGapsParameter = allowedEnrollmentGaps.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps", allowedEnrollmentGaps) :
                new ObjectParameter("AllowedEnrollmentGaps", typeof(int));
    
            var allowedEnrollmentGaps_MAXDaysParameter = allowedEnrollmentGaps_MAXDays.HasValue ?
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", allowedEnrollmentGaps_MAXDays) :
                new ObjectParameter("AllowedEnrollmentGaps_MAXDays", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_CBP_GetInsureds_EnrollmentGaps_Eligible_2012", insurancePlanTypeParameter, insuranceProductTypeParameter, insuranceBenefitTypeParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, allowedEnrollmentGapsParameter, allowedEnrollmentGaps_MAXDaysParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        public virtual int usp_HEDIS_CBP_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Encounters_Outpatient, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_CBP_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Encounters_OutpatientParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_CMC_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Years_Prior, Nullable<int> num_Years_After, Nullable<int> num_Encounters_IVD, Nullable<int> num_Encounters_Outpatient_AcuteInPatient, string eCTCodeStatus, Nullable<int> eCTCodeVersion_Year)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Years_PriorParameter = num_Years_Prior.HasValue ?
                new ObjectParameter("Num_Years_Prior", num_Years_Prior) :
                new ObjectParameter("Num_Years_Prior", typeof(int));
    
            var num_Years_AfterParameter = num_Years_After.HasValue ?
                new ObjectParameter("Num_Years_After", num_Years_After) :
                new ObjectParameter("Num_Years_After", typeof(int));
    
            var num_Encounters_IVDParameter = num_Encounters_IVD.HasValue ?
                new ObjectParameter("Num_Encounters_IVD", num_Encounters_IVD) :
                new ObjectParameter("Num_Encounters_IVD", typeof(int));
    
            var num_Encounters_Outpatient_AcuteInPatientParameter = num_Encounters_Outpatient_AcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_AcuteInPatient", num_Encounters_Outpatient_AcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_AcuteInPatient", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_CMC_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Years_PriorParameter, num_Years_AfterParameter, num_Encounters_IVDParameter, num_Encounters_Outpatient_AcuteInPatientParameter, eCTCodeStatusParameter, eCTCodeVersion_YearParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ART_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ART_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ART_GetNumerator_DMARD_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ART_GetNumerator_DMARD_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ART_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ART_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ART_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ART_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ASM_GetNumerator_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ASM_GetNumerator_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_ASTH_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_ASTH_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_HEDIS_HealthPlans_ASTH_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Rx_Dispense, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_HEDIS_HealthPlans_ASTH_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Rx_DispenseParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_BCS_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_BCS_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_BCS_GetNumerator_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_BCS_GetNumerator_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CCS_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CCS_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CCS_GetNumerator_Pap_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> anchorDate_Year, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CCS_GetNumerator_Pap_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, anchorDate_YearParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_BP_LessThan_140_80mm_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_BP_LessThan_140_80mm_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_BP_LessThan_140_90mm_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_BP_LessThan_140_90mm_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_EyeExam_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_EyeExam_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_GreaterThan_9_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_GreaterThan_9_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_LessThan_8_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_LessThan_8_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_HbA1c_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_LDL_C_LessThan_100mg_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_LDL_C_LessThan_100mg_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_LDL_C_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_LDL_C_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetNumerator_Nephropathy_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetNumerator_Nephropathy_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_HEDIS_HealthPlans_CDC_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Rx_Dispense, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_HEDIS_HealthPlans_CDC_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Rx_DispenseParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CDC_HbA1c_GetNumeratorCount_2012(Nullable<int> populationDefinitionID, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CDC_HbA1c_GetNumeratorCount_2012", populationDefinitionIDParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CHL_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CHL_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CHL_GetNumerator_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CHL_GetNumerator_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CHL_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CHL_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_HEDIS_HealthPlans_CHL_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Rx_Dispense, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_HEDIS_HealthPlans_CHL_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Rx_DispenseParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CMC_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient, Nullable<int> num_Encounters_AcuteInpatient, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var num_Encounters_AcuteInpatientParameter = num_Encounters_AcuteInpatient.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient", num_Encounters_AcuteInpatient) :
                new ObjectParameter("Num_Encounters_AcuteInpatient", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CMC_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_OutpatientParameter, num_Encounters_AcuteInpatientParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CMC_GetNumerator_LDL_C_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CMC_GetNumerator_LDL_C_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_CMC_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient, Nullable<int> num_Encounters_AcuteInpatient, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var num_Encounters_AcuteInpatientParameter = num_Encounters_AcuteInpatient.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient", num_Encounters_AcuteInpatient) :
                new ObjectParameter("Num_Encounters_AcuteInpatient", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_CMC_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_OutpatientParameter, num_Encounters_AcuteInpatientParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_COL_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_COL_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_COL_GetNumerator_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_COL_GetNumerator_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_GetInsureds_2012(string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus)
        {
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_GetInsureds_2012", insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_GSO_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_GSO_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_GSO_GetNumerator_EyeExam_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_GSO_GetNumerator_EyeExam_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_HealthPlans_SPR_GetNumerator_Testing_Indicator_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_HealthPlans_SPR_GetNumerator_Testing_Indicator_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_ART_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_ART_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetNumerator_EyeExam_Test_Count_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetNumerator_EyeExam_Test_Count_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetNumerator_HbA1c_Result_Values_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetNumerator_HbA1c_Result_Values_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetNumerator_HbA1c_Test_Count_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetNumerator_HbA1c_Test_Count_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetNumerator_LDL_C_Result_Values_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetNumerator_LDL_C_Result_Values_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetNumerator_LDL_C_Test_Count_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetNumerator_LDL_C_Test_Count_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CDC_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CDC_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_HEDIS_L_HealthPlans_CDC_GetPatients_RxClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Rx_Dispense, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_HEDIS_L_HealthPlans_CDC_GetPatients_RxClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Rx_DispenseParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CMC_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient, Nullable<int> num_Encounters_AcuteInpatient, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var num_Encounters_AcuteInpatientParameter = num_Encounters_AcuteInpatient.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient", num_Encounters_AcuteInpatient) :
                new ObjectParameter("Num_Encounters_AcuteInpatient", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CMC_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_OutpatientParameter, num_Encounters_AcuteInpatientParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CMC_GetNumerator_LDL_C_Test_Count_2012(Nullable<int> populationDefinitionID, Nullable<int> metricID, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus, Nullable<int> anchorDate_Year, string anchorDate_Month, string anchorDate_Day, string reportType)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var metricIDParameter = metricID.HasValue ?
                new ObjectParameter("MetricID", metricID) :
                new ObjectParameter("MetricID", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month != null ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(string));
    
            var anchorDate_DayParameter = anchorDate_Day != null ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CMC_GetNumerator_LDL_C_Test_Count_2012", populationDefinitionIDParameter, metricIDParameter, num_Months_PriorParameter, num_Months_AfterParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, reportTypeParameter);
        }
    
        public virtual int usp_HEDIS_L_HealthPlans_CMC_GetPatients_EncounterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient, Nullable<int> num_Encounters_AcuteInpatient, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_OutpatientParameter = num_Encounters_Outpatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient", num_Encounters_Outpatient) :
                new ObjectParameter("Num_Encounters_Outpatient", typeof(int));
    
            var num_Encounters_AcuteInpatientParameter = num_Encounters_AcuteInpatient.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient", num_Encounters_AcuteInpatient) :
                new ObjectParameter("Num_Encounters_AcuteInpatient", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HEDIS_L_HealthPlans_CMC_GetPatients_EncounterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_OutpatientParameter, num_Encounters_AcuteInpatientParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_Immunizations_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIDParameter = i_ImmunizationID.HasValue ?
                new ObjectParameter("i_ImmunizationID", i_ImmunizationID) :
                new ObjectParameter("i_ImmunizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Immunizations_Delete", i_AppUserIdParameter, i_ImmunizationIDParameter);
        }
    
        public virtual int usp_Immunizations_Insert(Nullable<int> i_AppUserId, string v_Name, string v_Description, Nullable<int> i_SortOrder, string v_StatusCode, string v_Route, Nullable<int> i_ProcedureID, ObjectParameter o_ImmunizationId, Nullable<int> i_DependentImmunizationID, Nullable<int> i_DaysBetweenImmunization, string v_Strength)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_RouteParameter = v_Route != null ?
                new ObjectParameter("v_Route", v_Route) :
                new ObjectParameter("v_Route", typeof(string));
    
            var i_ProcedureIDParameter = i_ProcedureID.HasValue ?
                new ObjectParameter("i_ProcedureID", i_ProcedureID) :
                new ObjectParameter("i_ProcedureID", typeof(int));
    
            var i_DependentImmunizationIDParameter = i_DependentImmunizationID.HasValue ?
                new ObjectParameter("i_DependentImmunizationID", i_DependentImmunizationID) :
                new ObjectParameter("i_DependentImmunizationID", typeof(int));
    
            var i_DaysBetweenImmunizationParameter = i_DaysBetweenImmunization.HasValue ?
                new ObjectParameter("i_DaysBetweenImmunization", i_DaysBetweenImmunization) :
                new ObjectParameter("i_DaysBetweenImmunization", typeof(int));
    
            var v_StrengthParameter = v_Strength != null ?
                new ObjectParameter("v_Strength", v_Strength) :
                new ObjectParameter("v_Strength", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Immunizations_Insert", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, i_SortOrderParameter, v_StatusCodeParameter, v_RouteParameter, i_ProcedureIDParameter, o_ImmunizationId, i_DependentImmunizationIDParameter, i_DaysBetweenImmunizationParameter, v_StrengthParameter);
        }
    
        public virtual ObjectResult<usp_Immunizations_Select_Result> usp_Immunizations_Select(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIDParameter = i_ImmunizationID.HasValue ?
                new ObjectParameter("i_ImmunizationID", i_ImmunizationID) :
                new ObjectParameter("i_ImmunizationID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Immunizations_Select_Result>("usp_Immunizations_Select", i_AppUserIdParameter, i_ImmunizationIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Immunizations_Select_DD_Result> usp_Immunizations_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Immunizations_Select_DD_Result>("usp_Immunizations_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Immunizations_Update(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationID, string v_Name, string v_Description, Nullable<int> i_SortOrder, string v_StatusCode, string v_Route, Nullable<int> i_ProcedureID, Nullable<int> i_DependentImmunizationID, Nullable<int> i_DaysBetweenImmunization, string v_Strength)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIDParameter = i_ImmunizationID.HasValue ?
                new ObjectParameter("i_ImmunizationID", i_ImmunizationID) :
                new ObjectParameter("i_ImmunizationID", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_RouteParameter = v_Route != null ?
                new ObjectParameter("v_Route", v_Route) :
                new ObjectParameter("v_Route", typeof(string));
    
            var i_ProcedureIDParameter = i_ProcedureID.HasValue ?
                new ObjectParameter("i_ProcedureID", i_ProcedureID) :
                new ObjectParameter("i_ProcedureID", typeof(int));
    
            var i_DependentImmunizationIDParameter = i_DependentImmunizationID.HasValue ?
                new ObjectParameter("i_DependentImmunizationID", i_DependentImmunizationID) :
                new ObjectParameter("i_DependentImmunizationID", typeof(int));
    
            var i_DaysBetweenImmunizationParameter = i_DaysBetweenImmunization.HasValue ?
                new ObjectParameter("i_DaysBetweenImmunization", i_DaysBetweenImmunization) :
                new ObjectParameter("i_DaysBetweenImmunization", typeof(int));
    
            var v_StrengthParameter = v_Strength != null ?
                new ObjectParameter("v_Strength", v_Strength) :
                new ObjectParameter("v_Strength", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Immunizations_Update", i_AppUserIdParameter, i_ImmunizationIDParameter, v_NameParameter, v_DescriptionParameter, i_SortOrderParameter, v_StatusCodeParameter, v_RouteParameter, i_ProcedureIDParameter, i_DependentImmunizationIDParameter, i_DaysBetweenImmunizationParameter, v_StrengthParameter);
        }
    
        public virtual int usp_ImmunizationSchedule_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationId, Nullable<int> i_FrequenceNumber, string c_Frequence, string v_StatusCode, ObjectParameter o_ImmunizationScheduleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIdParameter = i_ImmunizationId.HasValue ?
                new ObjectParameter("i_ImmunizationId", i_ImmunizationId) :
                new ObjectParameter("i_ImmunizationId", typeof(int));
    
            var i_FrequenceNumberParameter = i_FrequenceNumber.HasValue ?
                new ObjectParameter("i_FrequenceNumber", i_FrequenceNumber) :
                new ObjectParameter("i_FrequenceNumber", typeof(int));
    
            var c_FrequenceParameter = c_Frequence != null ?
                new ObjectParameter("c_Frequence", c_Frequence) :
                new ObjectParameter("c_Frequence", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ImmunizationSchedule_Insert", i_AppUserIdParameter, i_ImmunizationIdParameter, i_FrequenceNumberParameter, c_FrequenceParameter, v_StatusCodeParameter, o_ImmunizationScheduleId);
        }
    
        public virtual ObjectResult<usp_ImmunizationSchedule_Select_Result> usp_ImmunizationSchedule_Select(Nullable<int> i_AppUserId, string c_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var c_StatusCodeParameter = c_StatusCode != null ?
                new ObjectParameter("c_StatusCode", c_StatusCode) :
                new ObjectParameter("c_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ImmunizationSchedule_Select_Result>("usp_ImmunizationSchedule_Select", i_AppUserIdParameter, c_StatusCodeParameter);
        }
    
        public virtual int usp_ImmunizationSchedule_Update(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationId, Nullable<int> i_FrequenceNumber, string c_Frequence, string v_StatusCode, Nullable<int> i_ImmunizationScheduleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIdParameter = i_ImmunizationId.HasValue ?
                new ObjectParameter("i_ImmunizationId", i_ImmunizationId) :
                new ObjectParameter("i_ImmunizationId", typeof(int));
    
            var i_FrequenceNumberParameter = i_FrequenceNumber.HasValue ?
                new ObjectParameter("i_FrequenceNumber", i_FrequenceNumber) :
                new ObjectParameter("i_FrequenceNumber", typeof(int));
    
            var c_FrequenceParameter = c_Frequence != null ?
                new ObjectParameter("c_Frequence", c_Frequence) :
                new ObjectParameter("c_Frequence", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ImmunizationScheduleIdParameter = i_ImmunizationScheduleId.HasValue ?
                new ObjectParameter("i_ImmunizationScheduleId", i_ImmunizationScheduleId) :
                new ObjectParameter("i_ImmunizationScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ImmunizationSchedule_Update", i_AppUserIdParameter, i_ImmunizationIdParameter, i_FrequenceNumberParameter, c_FrequenceParameter, v_StatusCodeParameter, i_ImmunizationScheduleIdParameter);
        }
    
        public virtual int usp_InboxSharing_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_ShareWithUserID, Nullable<System.DateTime> d_StartSharingDate, Nullable<System.DateTime> d_EndSharingDate, string v_Remarks, string v_StatusCode, ObjectParameter o_InboxSharingID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ShareWithUserIDParameter = i_ShareWithUserID.HasValue ?
                new ObjectParameter("i_ShareWithUserID", i_ShareWithUserID) :
                new ObjectParameter("i_ShareWithUserID", typeof(int));
    
            var d_StartSharingDateParameter = d_StartSharingDate.HasValue ?
                new ObjectParameter("d_StartSharingDate", d_StartSharingDate) :
                new ObjectParameter("d_StartSharingDate", typeof(System.DateTime));
    
            var d_EndSharingDateParameter = d_EndSharingDate.HasValue ?
                new ObjectParameter("d_EndSharingDate", d_EndSharingDate) :
                new ObjectParameter("d_EndSharingDate", typeof(System.DateTime));
    
            var v_RemarksParameter = v_Remarks != null ?
                new ObjectParameter("v_Remarks", v_Remarks) :
                new ObjectParameter("v_Remarks", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InboxSharing_Insert", i_AppUserIdParameter, i_UserIdParameter, i_ShareWithUserIDParameter, d_StartSharingDateParameter, d_EndSharingDateParameter, v_RemarksParameter, v_StatusCodeParameter, o_InboxSharingID);
        }
    
        public virtual ObjectResult<usp_InboxSharing_Select_Result> usp_InboxSharing_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InboxSharing_Select_Result>("usp_InboxSharing_Select", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_InboxSharing_Select_SharedInbox_Result> usp_InboxSharing_Select_SharedInbox(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InboxSharing_Select_SharedInbox_Result>("usp_InboxSharing_Select_SharedInbox", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual int usp_InboxSharing_Update(Nullable<int> i_AppUserId, Nullable<int> i_InboxSharingId, Nullable<int> i_UserId, Nullable<int> i_ShareWithUserID, Nullable<System.DateTime> d_StartSharingDate, Nullable<System.DateTime> d_EndSharingDate, string v_Remarks, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InboxSharingIdParameter = i_InboxSharingId.HasValue ?
                new ObjectParameter("i_InboxSharingId", i_InboxSharingId) :
                new ObjectParameter("i_InboxSharingId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ShareWithUserIDParameter = i_ShareWithUserID.HasValue ?
                new ObjectParameter("i_ShareWithUserID", i_ShareWithUserID) :
                new ObjectParameter("i_ShareWithUserID", typeof(int));
    
            var d_StartSharingDateParameter = d_StartSharingDate.HasValue ?
                new ObjectParameter("d_StartSharingDate", d_StartSharingDate) :
                new ObjectParameter("d_StartSharingDate", typeof(System.DateTime));
    
            var d_EndSharingDateParameter = d_EndSharingDate.HasValue ?
                new ObjectParameter("d_EndSharingDate", d_EndSharingDate) :
                new ObjectParameter("d_EndSharingDate", typeof(System.DateTime));
    
            var v_RemarksParameter = v_Remarks != null ?
                new ObjectParameter("v_Remarks", v_Remarks) :
                new ObjectParameter("v_Remarks", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InboxSharing_Update", i_AppUserIdParameter, i_InboxSharingIdParameter, i_UserIdParameter, i_ShareWithUserIDParameter, d_StartSharingDateParameter, d_EndSharingDateParameter, v_RemarksParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<Usp_InlineMeasure_Select_Result> Usp_InlineMeasure_Select(Nullable<int> i_AppUserId, string v_Measure)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_MeasureParameter = v_Measure != null ?
                new ObjectParameter("v_Measure", v_Measure) :
                new ObjectParameter("v_Measure", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_InlineMeasure_Select_Result>("Usp_InlineMeasure_Select", i_AppUserIdParameter, v_MeasureParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceGroup_DD_Result> usp_InsuranceGroup_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceGroup_DD_Result>("usp_InsuranceGroup_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_InsuranceGroup_Insert(Nullable<int> i_AppUserId, string v_GroupName, string v_AddressLine1, string v_AddressLine2, string v_City, string v_StateCode, string v_ZipCode, string v_ContactName, string v_ContactPhoneNumber, string v_ContactPhoneNumberExtension, string v_Website, string v_PhoneNumber, string v_PhoneNumberExtension, string v_Fax, string v_StatusCode, ObjectParameter o_InsuranceGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_GroupNameParameter = v_GroupName != null ?
                new ObjectParameter("v_GroupName", v_GroupName) :
                new ObjectParameter("v_GroupName", typeof(string));
    
            var v_AddressLine1Parameter = v_AddressLine1 != null ?
                new ObjectParameter("v_AddressLine1", v_AddressLine1) :
                new ObjectParameter("v_AddressLine1", typeof(string));
    
            var v_AddressLine2Parameter = v_AddressLine2 != null ?
                new ObjectParameter("v_AddressLine2", v_AddressLine2) :
                new ObjectParameter("v_AddressLine2", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateCodeParameter = v_StateCode != null ?
                new ObjectParameter("v_StateCode", v_StateCode) :
                new ObjectParameter("v_StateCode", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_ContactNameParameter = v_ContactName != null ?
                new ObjectParameter("v_ContactName", v_ContactName) :
                new ObjectParameter("v_ContactName", typeof(string));
    
            var v_ContactPhoneNumberParameter = v_ContactPhoneNumber != null ?
                new ObjectParameter("v_ContactPhoneNumber", v_ContactPhoneNumber) :
                new ObjectParameter("v_ContactPhoneNumber", typeof(string));
    
            var v_ContactPhoneNumberExtensionParameter = v_ContactPhoneNumberExtension != null ?
                new ObjectParameter("v_ContactPhoneNumberExtension", v_ContactPhoneNumberExtension) :
                new ObjectParameter("v_ContactPhoneNumberExtension", typeof(string));
    
            var v_WebsiteParameter = v_Website != null ?
                new ObjectParameter("v_Website", v_Website) :
                new ObjectParameter("v_Website", typeof(string));
    
            var v_PhoneNumberParameter = v_PhoneNumber != null ?
                new ObjectParameter("v_PhoneNumber", v_PhoneNumber) :
                new ObjectParameter("v_PhoneNumber", typeof(string));
    
            var v_PhoneNumberExtensionParameter = v_PhoneNumberExtension != null ?
                new ObjectParameter("v_PhoneNumberExtension", v_PhoneNumberExtension) :
                new ObjectParameter("v_PhoneNumberExtension", typeof(string));
    
            var v_FaxParameter = v_Fax != null ?
                new ObjectParameter("v_Fax", v_Fax) :
                new ObjectParameter("v_Fax", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsuranceGroup_Insert", i_AppUserIdParameter, v_GroupNameParameter, v_AddressLine1Parameter, v_AddressLine2Parameter, v_CityParameter, v_StateCodeParameter, v_ZipCodeParameter, v_ContactNameParameter, v_ContactPhoneNumberParameter, v_ContactPhoneNumberExtensionParameter, v_WebsiteParameter, v_PhoneNumberParameter, v_PhoneNumberExtensionParameter, v_FaxParameter, v_StatusCodeParameter, o_InsuranceGroupID);
        }
    
        public virtual ObjectResult<usp_InsuranceGroup_Select_Result> usp_InsuranceGroup_Select(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupID, string vc_GroupName, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupIDParameter = i_InsuranceGroupID.HasValue ?
                new ObjectParameter("i_InsuranceGroupID", i_InsuranceGroupID) :
                new ObjectParameter("i_InsuranceGroupID", typeof(int));
    
            var vc_GroupNameParameter = vc_GroupName != null ?
                new ObjectParameter("vc_GroupName", vc_GroupName) :
                new ObjectParameter("vc_GroupName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceGroup_Select_Result>("usp_InsuranceGroup_Select", i_AppUserIdParameter, i_InsuranceGroupIDParameter, vc_GroupNameParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceGroup_Select_DD_Result> usp_InsuranceGroup_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceGroup_Select_DD_Result>("usp_InsuranceGroup_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_InsuranceGroup_Update(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupID, string v_GroupName, string v_AddressLine1, string v_AddressLine2, string v_City, string v_StateCode, string v_ZipCode, string v_ContactName, string v_ContactPhoneNumber, string v_ContactPhoneNumberExtension, string v_Website, string v_PhoneNumber, string v_PhoneNumberExtension, string v_Fax, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupIDParameter = i_InsuranceGroupID.HasValue ?
                new ObjectParameter("i_InsuranceGroupID", i_InsuranceGroupID) :
                new ObjectParameter("i_InsuranceGroupID", typeof(int));
    
            var v_GroupNameParameter = v_GroupName != null ?
                new ObjectParameter("v_GroupName", v_GroupName) :
                new ObjectParameter("v_GroupName", typeof(string));
    
            var v_AddressLine1Parameter = v_AddressLine1 != null ?
                new ObjectParameter("v_AddressLine1", v_AddressLine1) :
                new ObjectParameter("v_AddressLine1", typeof(string));
    
            var v_AddressLine2Parameter = v_AddressLine2 != null ?
                new ObjectParameter("v_AddressLine2", v_AddressLine2) :
                new ObjectParameter("v_AddressLine2", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateCodeParameter = v_StateCode != null ?
                new ObjectParameter("v_StateCode", v_StateCode) :
                new ObjectParameter("v_StateCode", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_ContactNameParameter = v_ContactName != null ?
                new ObjectParameter("v_ContactName", v_ContactName) :
                new ObjectParameter("v_ContactName", typeof(string));
    
            var v_ContactPhoneNumberParameter = v_ContactPhoneNumber != null ?
                new ObjectParameter("v_ContactPhoneNumber", v_ContactPhoneNumber) :
                new ObjectParameter("v_ContactPhoneNumber", typeof(string));
    
            var v_ContactPhoneNumberExtensionParameter = v_ContactPhoneNumberExtension != null ?
                new ObjectParameter("v_ContactPhoneNumberExtension", v_ContactPhoneNumberExtension) :
                new ObjectParameter("v_ContactPhoneNumberExtension", typeof(string));
    
            var v_WebsiteParameter = v_Website != null ?
                new ObjectParameter("v_Website", v_Website) :
                new ObjectParameter("v_Website", typeof(string));
    
            var v_PhoneNumberParameter = v_PhoneNumber != null ?
                new ObjectParameter("v_PhoneNumber", v_PhoneNumber) :
                new ObjectParameter("v_PhoneNumber", typeof(string));
    
            var v_PhoneNumberExtensionParameter = v_PhoneNumberExtension != null ?
                new ObjectParameter("v_PhoneNumberExtension", v_PhoneNumberExtension) :
                new ObjectParameter("v_PhoneNumberExtension", typeof(string));
    
            var v_FaxParameter = v_Fax != null ?
                new ObjectParameter("v_Fax", v_Fax) :
                new ObjectParameter("v_Fax", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsuranceGroup_Update", i_AppUserIdParameter, i_InsuranceGroupIDParameter, v_GroupNameParameter, v_AddressLine1Parameter, v_AddressLine2Parameter, v_CityParameter, v_StateCodeParameter, v_ZipCodeParameter, v_ContactNameParameter, v_ContactPhoneNumberParameter, v_ContactPhoneNumberExtensionParameter, v_WebsiteParameter, v_PhoneNumberParameter, v_PhoneNumberExtensionParameter, v_FaxParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceGroupAndPlan_Select_Result> usp_InsuranceGroupAndPlan_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceGroupAndPlan_Select_Result>("usp_InsuranceGroupAndPlan_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_InsuranceGroupPlan_Insert(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupId, string vc_PlanName, string vc_StatusCode, ObjectParameter o_InsuranceGroupPlanId, string vc_PlanCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupIdParameter = i_InsuranceGroupId.HasValue ?
                new ObjectParameter("i_InsuranceGroupId", i_InsuranceGroupId) :
                new ObjectParameter("i_InsuranceGroupId", typeof(int));
    
            var vc_PlanNameParameter = vc_PlanName != null ?
                new ObjectParameter("vc_PlanName", vc_PlanName) :
                new ObjectParameter("vc_PlanName", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_PlanCodeParameter = vc_PlanCode != null ?
                new ObjectParameter("vc_PlanCode", vc_PlanCode) :
                new ObjectParameter("vc_PlanCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsuranceGroupPlan_Insert", i_AppUserIdParameter, i_InsuranceGroupIdParameter, vc_PlanNameParameter, vc_StatusCodeParameter, o_InsuranceGroupPlanId, vc_PlanCodeParameter);
        }
    
        public virtual ObjectResult<usp_InsuranceGroupPlan_Select_Result> usp_InsuranceGroupPlan_Select(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupId, Nullable<int> i_InsuranceGroupPlanId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupIdParameter = i_InsuranceGroupId.HasValue ?
                new ObjectParameter("i_InsuranceGroupId", i_InsuranceGroupId) :
                new ObjectParameter("i_InsuranceGroupId", typeof(int));
    
            var i_InsuranceGroupPlanIdParameter = i_InsuranceGroupPlanId.HasValue ?
                new ObjectParameter("i_InsuranceGroupPlanId", i_InsuranceGroupPlanId) :
                new ObjectParameter("i_InsuranceGroupPlanId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsuranceGroupPlan_Select_Result>("usp_InsuranceGroupPlan_Select", i_AppUserIdParameter, i_InsuranceGroupIdParameter, i_InsuranceGroupPlanIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_InsuranceGroupPlan_Update(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupId, string vc_PlanName, string vc_StatusCode, Nullable<int> i_InsuranceGroupPlanId, string vc_PlanCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupIdParameter = i_InsuranceGroupId.HasValue ?
                new ObjectParameter("i_InsuranceGroupId", i_InsuranceGroupId) :
                new ObjectParameter("i_InsuranceGroupId", typeof(int));
    
            var vc_PlanNameParameter = vc_PlanName != null ?
                new ObjectParameter("vc_PlanName", vc_PlanName) :
                new ObjectParameter("vc_PlanName", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_InsuranceGroupPlanIdParameter = i_InsuranceGroupPlanId.HasValue ?
                new ObjectParameter("i_InsuranceGroupPlanId", i_InsuranceGroupPlanId) :
                new ObjectParameter("i_InsuranceGroupPlanId", typeof(int));
    
            var vc_PlanCodeParameter = vc_PlanCode != null ?
                new ObjectParameter("vc_PlanCode", vc_PlanCode) :
                new ObjectParameter("vc_PlanCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsuranceGroupPlan_Update", i_AppUserIdParameter, i_InsuranceGroupIdParameter, vc_PlanNameParameter, vc_StatusCodeParameter, i_InsuranceGroupPlanIdParameter, vc_PlanCodeParameter);
        }
    
        public virtual ObjectResult<usp_InternalCareProvider_Select_Result> usp_InternalCareProvider_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, string v_ProviderName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_ProviderNameParameter = v_ProviderName != null ?
                new ObjectParameter("v_ProviderName", v_ProviderName) :
                new ObjectParameter("v_ProviderName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InternalCareProvider_Select_Result>("usp_InternalCareProvider_Select", i_AppUserIdParameter, i_PatientUserIdParameter, v_ProviderNameParameter);
        }
    
        public virtual ObjectResult<usp_LabMeasure_Alert_Result> usp_LabMeasure_Alert(Nullable<int> i_AppUserId, string c_LevelType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var c_LevelTypeParameter = c_LevelType != null ?
                new ObjectParameter("c_LevelType", c_LevelType) :
                new ObjectParameter("c_LevelType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabMeasure_Alert_Result>("usp_LabMeasure_Alert", i_AppUserIdParameter, c_LevelTypeParameter);
        }
    
        public virtual int usp_LabMeasure_Insert(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, Nullable<bool> b_IsGoodControl, string v_Operator1forGoodControl, Nullable<decimal> d_Operator1Value1forGoodControl, Nullable<decimal> d_Operator1Value2forGoodControl, string v_Operator2forGoodControl, Nullable<decimal> d_Operator2Value1forGoodControl, Nullable<decimal> d_Operator2Value2forGoodControl, string v_TextValueForGoodControl, Nullable<bool> b_IsFairControl, string v_Operator1forFairControl, Nullable<decimal> d_Operator1Value1forFairControl, Nullable<decimal> d_Operator1Value2forFairControl, string v_Operator2forFairControl, Nullable<decimal> d_Operator2Value1forFairControl, Nullable<decimal> d_Operator2Value2forFairControl, string v_TextValueForFairControl, Nullable<bool> b_IsPoorControl, string v_Operator1forPoorControl, Nullable<decimal> d_Operator1Value1forPoorControl, Nullable<decimal> d_Operator1Value2forPoorControl, string v_Operator2forPoorControl, Nullable<decimal> d_Operator2Value1forPoorControl, Nullable<decimal> d_Operator2Value2forPoorControl, string v_TextValueForPoorControl, Nullable<int> i_MeasureUOMId, Nullable<int> i_ProgramId, Nullable<int> i_PatientUserID, ObjectParameter o_LabMeasureId, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, Nullable<int> i_ReminderDaysBeforeEnddate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var b_IsGoodControlParameter = b_IsGoodControl.HasValue ?
                new ObjectParameter("b_IsGoodControl", b_IsGoodControl) :
                new ObjectParameter("b_IsGoodControl", typeof(bool));
    
            var v_Operator1forGoodControlParameter = v_Operator1forGoodControl != null ?
                new ObjectParameter("v_Operator1forGoodControl", v_Operator1forGoodControl) :
                new ObjectParameter("v_Operator1forGoodControl", typeof(string));
    
            var d_Operator1Value1forGoodControlParameter = d_Operator1Value1forGoodControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forGoodControl", d_Operator1Value1forGoodControl) :
                new ObjectParameter("d_Operator1Value1forGoodControl", typeof(decimal));
    
            var d_Operator1Value2forGoodControlParameter = d_Operator1Value2forGoodControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forGoodControl", d_Operator1Value2forGoodControl) :
                new ObjectParameter("d_Operator1Value2forGoodControl", typeof(decimal));
    
            var v_Operator2forGoodControlParameter = v_Operator2forGoodControl != null ?
                new ObjectParameter("v_Operator2forGoodControl", v_Operator2forGoodControl) :
                new ObjectParameter("v_Operator2forGoodControl", typeof(string));
    
            var d_Operator2Value1forGoodControlParameter = d_Operator2Value1forGoodControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forGoodControl", d_Operator2Value1forGoodControl) :
                new ObjectParameter("d_Operator2Value1forGoodControl", typeof(decimal));
    
            var d_Operator2Value2forGoodControlParameter = d_Operator2Value2forGoodControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forGoodControl", d_Operator2Value2forGoodControl) :
                new ObjectParameter("d_Operator2Value2forGoodControl", typeof(decimal));
    
            var v_TextValueForGoodControlParameter = v_TextValueForGoodControl != null ?
                new ObjectParameter("v_TextValueForGoodControl", v_TextValueForGoodControl) :
                new ObjectParameter("v_TextValueForGoodControl", typeof(string));
    
            var b_IsFairControlParameter = b_IsFairControl.HasValue ?
                new ObjectParameter("b_IsFairControl", b_IsFairControl) :
                new ObjectParameter("b_IsFairControl", typeof(bool));
    
            var v_Operator1forFairControlParameter = v_Operator1forFairControl != null ?
                new ObjectParameter("v_Operator1forFairControl", v_Operator1forFairControl) :
                new ObjectParameter("v_Operator1forFairControl", typeof(string));
    
            var d_Operator1Value1forFairControlParameter = d_Operator1Value1forFairControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forFairControl", d_Operator1Value1forFairControl) :
                new ObjectParameter("d_Operator1Value1forFairControl", typeof(decimal));
    
            var d_Operator1Value2forFairControlParameter = d_Operator1Value2forFairControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forFairControl", d_Operator1Value2forFairControl) :
                new ObjectParameter("d_Operator1Value2forFairControl", typeof(decimal));
    
            var v_Operator2forFairControlParameter = v_Operator2forFairControl != null ?
                new ObjectParameter("v_Operator2forFairControl", v_Operator2forFairControl) :
                new ObjectParameter("v_Operator2forFairControl", typeof(string));
    
            var d_Operator2Value1forFairControlParameter = d_Operator2Value1forFairControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forFairControl", d_Operator2Value1forFairControl) :
                new ObjectParameter("d_Operator2Value1forFairControl", typeof(decimal));
    
            var d_Operator2Value2forFairControlParameter = d_Operator2Value2forFairControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forFairControl", d_Operator2Value2forFairControl) :
                new ObjectParameter("d_Operator2Value2forFairControl", typeof(decimal));
    
            var v_TextValueForFairControlParameter = v_TextValueForFairControl != null ?
                new ObjectParameter("v_TextValueForFairControl", v_TextValueForFairControl) :
                new ObjectParameter("v_TextValueForFairControl", typeof(string));
    
            var b_IsPoorControlParameter = b_IsPoorControl.HasValue ?
                new ObjectParameter("b_IsPoorControl", b_IsPoorControl) :
                new ObjectParameter("b_IsPoorControl", typeof(bool));
    
            var v_Operator1forPoorControlParameter = v_Operator1forPoorControl != null ?
                new ObjectParameter("v_Operator1forPoorControl", v_Operator1forPoorControl) :
                new ObjectParameter("v_Operator1forPoorControl", typeof(string));
    
            var d_Operator1Value1forPoorControlParameter = d_Operator1Value1forPoorControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forPoorControl", d_Operator1Value1forPoorControl) :
                new ObjectParameter("d_Operator1Value1forPoorControl", typeof(decimal));
    
            var d_Operator1Value2forPoorControlParameter = d_Operator1Value2forPoorControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forPoorControl", d_Operator1Value2forPoorControl) :
                new ObjectParameter("d_Operator1Value2forPoorControl", typeof(decimal));
    
            var v_Operator2forPoorControlParameter = v_Operator2forPoorControl != null ?
                new ObjectParameter("v_Operator2forPoorControl", v_Operator2forPoorControl) :
                new ObjectParameter("v_Operator2forPoorControl", typeof(string));
    
            var d_Operator2Value1forPoorControlParameter = d_Operator2Value1forPoorControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forPoorControl", d_Operator2Value1forPoorControl) :
                new ObjectParameter("d_Operator2Value1forPoorControl", typeof(decimal));
    
            var d_Operator2Value2forPoorControlParameter = d_Operator2Value2forPoorControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forPoorControl", d_Operator2Value2forPoorControl) :
                new ObjectParameter("d_Operator2Value2forPoorControl", typeof(decimal));
    
            var v_TextValueForPoorControlParameter = v_TextValueForPoorControl != null ?
                new ObjectParameter("v_TextValueForPoorControl", v_TextValueForPoorControl) :
                new ObjectParameter("v_TextValueForPoorControl", typeof(string));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            var i_ReminderDaysBeforeEnddateParameter = i_ReminderDaysBeforeEnddate.HasValue ?
                new ObjectParameter("i_ReminderDaysBeforeEnddate", i_ReminderDaysBeforeEnddate) :
                new ObjectParameter("i_ReminderDaysBeforeEnddate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabMeasure_Insert", i_AppUserIdParameter, i_MeasureIdParameter, b_IsGoodControlParameter, v_Operator1forGoodControlParameter, d_Operator1Value1forGoodControlParameter, d_Operator1Value2forGoodControlParameter, v_Operator2forGoodControlParameter, d_Operator2Value1forGoodControlParameter, d_Operator2Value2forGoodControlParameter, v_TextValueForGoodControlParameter, b_IsFairControlParameter, v_Operator1forFairControlParameter, d_Operator1Value1forFairControlParameter, d_Operator1Value2forFairControlParameter, v_Operator2forFairControlParameter, d_Operator2Value1forFairControlParameter, d_Operator2Value2forFairControlParameter, v_TextValueForFairControlParameter, b_IsPoorControlParameter, v_Operator1forPoorControlParameter, d_Operator1Value1forPoorControlParameter, d_Operator1Value2forPoorControlParameter, v_Operator2forPoorControlParameter, d_Operator2Value1forPoorControlParameter, d_Operator2Value2forPoorControlParameter, v_TextValueForPoorControlParameter, i_MeasureUOMIdParameter, i_ProgramIdParameter, i_PatientUserIDParameter, o_LabMeasureId, d_StartDateParameter, d_EndDateParameter, i_ReminderDaysBeforeEnddateParameter);
        }
    
        public virtual ObjectResult<usp_LabMeasure_Select_Result> usp_LabMeasure_Select(Nullable<int> i_AppUserId, Nullable<int> i_LabMeasureId, Nullable<int> i_MeasureID, Nullable<int> i_ProgramId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabMeasureIdParameter = i_LabMeasureId.HasValue ?
                new ObjectParameter("i_LabMeasureId", i_LabMeasureId) :
                new ObjectParameter("i_LabMeasureId", typeof(int));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabMeasure_Select_Result>("usp_LabMeasure_Select", i_AppUserIdParameter, i_LabMeasureIdParameter, i_MeasureIDParameter, i_ProgramIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_LabMeasure_Select_ByPatientUserId_Result> usp_LabMeasure_Select_ByPatientUserId(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabMeasure_Select_ByPatientUserId_Result>("usp_LabMeasure_Select_ByPatientUserId", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual int usp_LabMeasure_TrendGraphByPatientUserD(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID, Nullable<int> i_MeasureId, Nullable<int> i_ProgramId, Nullable<int> i_LabMeasureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_LabMeasureIdParameter = i_LabMeasureId.HasValue ?
                new ObjectParameter("i_LabMeasureId", i_LabMeasureId) :
                new ObjectParameter("i_LabMeasureId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabMeasure_TrendGraphByPatientUserD", i_AppUserIdParameter, i_PatientUserIDParameter, i_MeasureIdParameter, i_ProgramIdParameter, i_LabMeasureIdParameter);
        }
    
        public virtual int usp_LabMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, Nullable<bool> b_IsGoodControl, string v_Operator1forGoodControl, Nullable<decimal> d_Operator1Value1forGoodControl, Nullable<decimal> d_Operator1Value2forGoodControl, string v_Operator2forGoodControl, Nullable<decimal> d_Operator2Value1forGoodControl, Nullable<decimal> d_Operator2Value2forGoodControl, string v_TextValueForGoodControl, Nullable<bool> b_IsFairControl, string v_Operator1forFairControl, Nullable<decimal> d_Operator1Value1forFairControl, Nullable<decimal> d_Operator1Value2forFairControl, string v_Operator2forFairControl, Nullable<decimal> d_Operator2Value1forFairControl, Nullable<decimal> d_Operator2Value2forFairControl, string v_TextValueForFairControl, Nullable<bool> b_IsPoorControl, string v_Operator1forPoorControl, Nullable<decimal> d_Operator1Value1forPoorControl, Nullable<decimal> d_Operator1Value2forPoorControl, string v_Operator2forPoorControl, Nullable<decimal> d_Operator2Value1forPoorControl, Nullable<decimal> d_Operator2Value2forPoorControl, string v_TextValueForPoorControl, Nullable<int> i_MeasureUOMId, Nullable<int> i_ProgramId, Nullable<int> i_PatientUserID, Nullable<int> i_LabMeasureId, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, Nullable<int> i_ReminderDaysBeforeEnddate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var b_IsGoodControlParameter = b_IsGoodControl.HasValue ?
                new ObjectParameter("b_IsGoodControl", b_IsGoodControl) :
                new ObjectParameter("b_IsGoodControl", typeof(bool));
    
            var v_Operator1forGoodControlParameter = v_Operator1forGoodControl != null ?
                new ObjectParameter("v_Operator1forGoodControl", v_Operator1forGoodControl) :
                new ObjectParameter("v_Operator1forGoodControl", typeof(string));
    
            var d_Operator1Value1forGoodControlParameter = d_Operator1Value1forGoodControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forGoodControl", d_Operator1Value1forGoodControl) :
                new ObjectParameter("d_Operator1Value1forGoodControl", typeof(decimal));
    
            var d_Operator1Value2forGoodControlParameter = d_Operator1Value2forGoodControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forGoodControl", d_Operator1Value2forGoodControl) :
                new ObjectParameter("d_Operator1Value2forGoodControl", typeof(decimal));
    
            var v_Operator2forGoodControlParameter = v_Operator2forGoodControl != null ?
                new ObjectParameter("v_Operator2forGoodControl", v_Operator2forGoodControl) :
                new ObjectParameter("v_Operator2forGoodControl", typeof(string));
    
            var d_Operator2Value1forGoodControlParameter = d_Operator2Value1forGoodControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forGoodControl", d_Operator2Value1forGoodControl) :
                new ObjectParameter("d_Operator2Value1forGoodControl", typeof(decimal));
    
            var d_Operator2Value2forGoodControlParameter = d_Operator2Value2forGoodControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forGoodControl", d_Operator2Value2forGoodControl) :
                new ObjectParameter("d_Operator2Value2forGoodControl", typeof(decimal));
    
            var v_TextValueForGoodControlParameter = v_TextValueForGoodControl != null ?
                new ObjectParameter("v_TextValueForGoodControl", v_TextValueForGoodControl) :
                new ObjectParameter("v_TextValueForGoodControl", typeof(string));
    
            var b_IsFairControlParameter = b_IsFairControl.HasValue ?
                new ObjectParameter("b_IsFairControl", b_IsFairControl) :
                new ObjectParameter("b_IsFairControl", typeof(bool));
    
            var v_Operator1forFairControlParameter = v_Operator1forFairControl != null ?
                new ObjectParameter("v_Operator1forFairControl", v_Operator1forFairControl) :
                new ObjectParameter("v_Operator1forFairControl", typeof(string));
    
            var d_Operator1Value1forFairControlParameter = d_Operator1Value1forFairControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forFairControl", d_Operator1Value1forFairControl) :
                new ObjectParameter("d_Operator1Value1forFairControl", typeof(decimal));
    
            var d_Operator1Value2forFairControlParameter = d_Operator1Value2forFairControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forFairControl", d_Operator1Value2forFairControl) :
                new ObjectParameter("d_Operator1Value2forFairControl", typeof(decimal));
    
            var v_Operator2forFairControlParameter = v_Operator2forFairControl != null ?
                new ObjectParameter("v_Operator2forFairControl", v_Operator2forFairControl) :
                new ObjectParameter("v_Operator2forFairControl", typeof(string));
    
            var d_Operator2Value1forFairControlParameter = d_Operator2Value1forFairControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forFairControl", d_Operator2Value1forFairControl) :
                new ObjectParameter("d_Operator2Value1forFairControl", typeof(decimal));
    
            var d_Operator2Value2forFairControlParameter = d_Operator2Value2forFairControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forFairControl", d_Operator2Value2forFairControl) :
                new ObjectParameter("d_Operator2Value2forFairControl", typeof(decimal));
    
            var v_TextValueForFairControlParameter = v_TextValueForFairControl != null ?
                new ObjectParameter("v_TextValueForFairControl", v_TextValueForFairControl) :
                new ObjectParameter("v_TextValueForFairControl", typeof(string));
    
            var b_IsPoorControlParameter = b_IsPoorControl.HasValue ?
                new ObjectParameter("b_IsPoorControl", b_IsPoorControl) :
                new ObjectParameter("b_IsPoorControl", typeof(bool));
    
            var v_Operator1forPoorControlParameter = v_Operator1forPoorControl != null ?
                new ObjectParameter("v_Operator1forPoorControl", v_Operator1forPoorControl) :
                new ObjectParameter("v_Operator1forPoorControl", typeof(string));
    
            var d_Operator1Value1forPoorControlParameter = d_Operator1Value1forPoorControl.HasValue ?
                new ObjectParameter("d_Operator1Value1forPoorControl", d_Operator1Value1forPoorControl) :
                new ObjectParameter("d_Operator1Value1forPoorControl", typeof(decimal));
    
            var d_Operator1Value2forPoorControlParameter = d_Operator1Value2forPoorControl.HasValue ?
                new ObjectParameter("d_Operator1Value2forPoorControl", d_Operator1Value2forPoorControl) :
                new ObjectParameter("d_Operator1Value2forPoorControl", typeof(decimal));
    
            var v_Operator2forPoorControlParameter = v_Operator2forPoorControl != null ?
                new ObjectParameter("v_Operator2forPoorControl", v_Operator2forPoorControl) :
                new ObjectParameter("v_Operator2forPoorControl", typeof(string));
    
            var d_Operator2Value1forPoorControlParameter = d_Operator2Value1forPoorControl.HasValue ?
                new ObjectParameter("d_Operator2Value1forPoorControl", d_Operator2Value1forPoorControl) :
                new ObjectParameter("d_Operator2Value1forPoorControl", typeof(decimal));
    
            var d_Operator2Value2forPoorControlParameter = d_Operator2Value2forPoorControl.HasValue ?
                new ObjectParameter("d_Operator2Value2forPoorControl", d_Operator2Value2forPoorControl) :
                new ObjectParameter("d_Operator2Value2forPoorControl", typeof(decimal));
    
            var v_TextValueForPoorControlParameter = v_TextValueForPoorControl != null ?
                new ObjectParameter("v_TextValueForPoorControl", v_TextValueForPoorControl) :
                new ObjectParameter("v_TextValueForPoorControl", typeof(string));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var i_LabMeasureIdParameter = i_LabMeasureId.HasValue ?
                new ObjectParameter("i_LabMeasureId", i_LabMeasureId) :
                new ObjectParameter("i_LabMeasureId", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            var i_ReminderDaysBeforeEnddateParameter = i_ReminderDaysBeforeEnddate.HasValue ?
                new ObjectParameter("i_ReminderDaysBeforeEnddate", i_ReminderDaysBeforeEnddate) :
                new ObjectParameter("i_ReminderDaysBeforeEnddate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabMeasure_Update", i_AppUserIdParameter, i_MeasureIdParameter, b_IsGoodControlParameter, v_Operator1forGoodControlParameter, d_Operator1Value1forGoodControlParameter, d_Operator1Value2forGoodControlParameter, v_Operator2forGoodControlParameter, d_Operator2Value1forGoodControlParameter, d_Operator2Value2forGoodControlParameter, v_TextValueForGoodControlParameter, b_IsFairControlParameter, v_Operator1forFairControlParameter, d_Operator1Value1forFairControlParameter, d_Operator1Value2forFairControlParameter, v_Operator2forFairControlParameter, d_Operator2Value1forFairControlParameter, d_Operator2Value2forFairControlParameter, v_TextValueForFairControlParameter, b_IsPoorControlParameter, v_Operator1forPoorControlParameter, d_Operator1Value1forPoorControlParameter, d_Operator1Value2forPoorControlParameter, v_Operator2forPoorControlParameter, d_Operator2Value1forPoorControlParameter, d_Operator2Value2forPoorControlParameter, v_TextValueForPoorControlParameter, i_MeasureUOMIdParameter, i_ProgramIdParameter, i_PatientUserIDParameter, i_LabMeasureIdParameter, d_StartDateParameter, d_EndDateParameter, i_ReminderDaysBeforeEnddateParameter);
        }
    
        public virtual ObjectResult<usp_LabMeasureHistory_Select_Result> usp_LabMeasureHistory_Select(Nullable<int> i_AppUserId, Nullable<int> i_LabMeasureID, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabMeasureIDParameter = i_LabMeasureID.HasValue ?
                new ObjectParameter("i_LabMeasureID", i_LabMeasureID) :
                new ObjectParameter("i_LabMeasureID", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabMeasureHistory_Select_Result>("usp_LabMeasureHistory_Select", i_AppUserIdParameter, i_LabMeasureIDParameter, i_ProgramIdParameter);
        }
    
        public virtual ObjectResult<usp_LabMeasureProcedureDiseaseProgram_Select_Result> usp_LabMeasureProcedureDiseaseProgram_Select(Nullable<int> i_AppUserId, Nullable<int> i_MeasureID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabMeasureProcedureDiseaseProgram_Select_Result>("usp_LabMeasureProcedureDiseaseProgram_Select", i_AppUserIdParameter, i_MeasureIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_LabOrPhysicalExamination_InsertUpdate(Nullable<int> i_AppUserId, string v_Name, string v_StatusCode, Nullable<int> i_LabOrPhysicalExaminationID, ObjectParameter o_LabOrPhysicalExaminationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_LabOrPhysicalExaminationIDParameter = i_LabOrPhysicalExaminationID.HasValue ?
                new ObjectParameter("i_LabOrPhysicalExaminationID", i_LabOrPhysicalExaminationID) :
                new ObjectParameter("i_LabOrPhysicalExaminationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabOrPhysicalExamination_InsertUpdate", i_AppUserIdParameter, v_NameParameter, v_StatusCodeParameter, i_LabOrPhysicalExaminationIDParameter, o_LabOrPhysicalExaminationID);
        }
    
        public virtual ObjectResult<usp_LabOrPhysicalExamination_Select_Result> usp_LabOrPhysicalExamination_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabOrPhysicalExamination_Select_Result>("usp_LabOrPhysicalExamination_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Labs_Insert(Nullable<int> i_AppUserId, string v_LabName, string v_StatusCode, ObjectParameter o_LabId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LabNameParameter = v_LabName != null ?
                new ObjectParameter("v_LabName", v_LabName) :
                new ObjectParameter("v_LabName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Labs_Insert", i_AppUserIdParameter, v_LabNameParameter, v_StatusCodeParameter, o_LabId);
        }
    
        public virtual ObjectResult<usp_Labs_Select_Result> usp_Labs_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Labs_Select_Result>("usp_Labs_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Labs_Update(Nullable<int> i_AppUserId, string v_LabName, string v_StatusCode, Nullable<int> i_LabId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LabNameParameter = v_LabName != null ?
                new ObjectParameter("v_LabName", v_LabName) :
                new ObjectParameter("v_LabName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_LabIdParameter = i_LabId.HasValue ?
                new ObjectParameter("i_LabId", i_LabId) :
                new ObjectParameter("i_LabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Labs_Update", i_AppUserIdParameter, v_LabNameParameter, v_StatusCodeParameter, i_LabIdParameter);
        }
    
        public virtual int usp_LabTestMeasure_Insert(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, Nullable<int> i_MeasureId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabTestMeasure_Insert", i_AppUserIdParameter, i_LabTestIdParameter, i_MeasureIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_LabTestMeasure_Select_Result> usp_LabTestMeasure_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabTestMeasure_Select_Result>("usp_LabTestMeasure_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_LabTestMeasure_SelectByLabTestId_Result> usp_LabTestMeasure_SelectByLabTestId(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabTestMeasure_SelectByLabTestId_Result>("usp_LabTestMeasure_SelectByLabTestId", i_AppUserIdParameter, i_LabTestIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_LabTestMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_LabTestId, Nullable<int> i_MeasureId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabTestMeasure_Update", i_AppUserIdParameter, i_LabTestIdParameter, i_MeasureIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_LabTests_Insert(Nullable<int> i_AppUserId, string v_LabTestName, string v_LabTestDesc, string v_StatusCode, ObjectParameter o_LabTestId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LabTestNameParameter = v_LabTestName != null ?
                new ObjectParameter("v_LabTestName", v_LabTestName) :
                new ObjectParameter("v_LabTestName", typeof(string));
    
            var v_LabTestDescParameter = v_LabTestDesc != null ?
                new ObjectParameter("v_LabTestDesc", v_LabTestDesc) :
                new ObjectParameter("v_LabTestDesc", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabTests_Insert", i_AppUserIdParameter, v_LabTestNameParameter, v_LabTestDescParameter, v_StatusCodeParameter, o_LabTestId);
        }
    
        public virtual ObjectResult<usp_LabTests_Search_Result> usp_LabTests_Search(Nullable<int> i_AppUserId, string v_LabTestName, string v_ProcedureCode, string v_MeasureName, string v_LabTestNameOption, string v_MeasureNameOption, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LabTestNameParameter = v_LabTestName != null ?
                new ObjectParameter("v_LabTestName", v_LabTestName) :
                new ObjectParameter("v_LabTestName", typeof(string));
    
            var v_ProcedureCodeParameter = v_ProcedureCode != null ?
                new ObjectParameter("v_ProcedureCode", v_ProcedureCode) :
                new ObjectParameter("v_ProcedureCode", typeof(string));
    
            var v_MeasureNameParameter = v_MeasureName != null ?
                new ObjectParameter("v_MeasureName", v_MeasureName) :
                new ObjectParameter("v_MeasureName", typeof(string));
    
            var v_LabTestNameOptionParameter = v_LabTestNameOption != null ?
                new ObjectParameter("v_LabTestNameOption", v_LabTestNameOption) :
                new ObjectParameter("v_LabTestNameOption", typeof(string));
    
            var v_MeasureNameOptionParameter = v_MeasureNameOption != null ?
                new ObjectParameter("v_MeasureNameOption", v_MeasureNameOption) :
                new ObjectParameter("v_MeasureNameOption", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabTests_Search_Result>("usp_LabTests_Search", i_AppUserIdParameter, v_LabTestNameParameter, v_ProcedureCodeParameter, v_MeasureNameParameter, v_LabTestNameOptionParameter, v_MeasureNameOptionParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_LabTests_Select_Result> usp_LabTests_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabTests_Select_Result>("usp_LabTests_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_LabTests_Select_DD_Result> usp_LabTests_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LabTests_Select_DD_Result>("usp_LabTests_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_LabTests_Update(Nullable<int> i_AppUserId, string v_LabTestName, string v_LabTestDesc, string v_StatusCode, Nullable<int> i_LabTestId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LabTestNameParameter = v_LabTestName != null ?
                new ObjectParameter("v_LabTestName", v_LabTestName) :
                new ObjectParameter("v_LabTestName", typeof(string));
    
            var v_LabTestDescParameter = v_LabTestDesc != null ?
                new ObjectParameter("v_LabTestDesc", v_LabTestDesc) :
                new ObjectParameter("v_LabTestDesc", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LabTests_Update", i_AppUserIdParameter, v_LabTestNameParameter, v_LabTestDescParameter, v_StatusCodeParameter, i_LabTestIdParameter);
        }
    
        public virtual ObjectResult<usp_Language_Select_DD_Result> usp_Language_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Language_Select_DD_Result>("usp_Language_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Library_Insert(Nullable<int> i_AppUserId, Nullable<int> i_DocumentTypeId, string vc_Name, string vc_Description, string vc_PhysicalFileName, string vc_DocumentNum, string vc_DocumentLocation, byte[] vc_eDocument, string vc_DocumentSourceCompany, string vc_StatusCode, string vc_MimeType, string vc_WebSiteURLLink, Nullable<bool> b_IsPEM, ObjectParameter o_LibraryID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_PhysicalFileNameParameter = vc_PhysicalFileName != null ?
                new ObjectParameter("vc_PhysicalFileName", vc_PhysicalFileName) :
                new ObjectParameter("vc_PhysicalFileName", typeof(string));
    
            var vc_DocumentNumParameter = vc_DocumentNum != null ?
                new ObjectParameter("vc_DocumentNum", vc_DocumentNum) :
                new ObjectParameter("vc_DocumentNum", typeof(string));
    
            var vc_DocumentLocationParameter = vc_DocumentLocation != null ?
                new ObjectParameter("vc_DocumentLocation", vc_DocumentLocation) :
                new ObjectParameter("vc_DocumentLocation", typeof(string));
    
            var vc_eDocumentParameter = vc_eDocument != null ?
                new ObjectParameter("vc_eDocument", vc_eDocument) :
                new ObjectParameter("vc_eDocument", typeof(byte[]));
    
            var vc_DocumentSourceCompanyParameter = vc_DocumentSourceCompany != null ?
                new ObjectParameter("vc_DocumentSourceCompany", vc_DocumentSourceCompany) :
                new ObjectParameter("vc_DocumentSourceCompany", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_MimeTypeParameter = vc_MimeType != null ?
                new ObjectParameter("vc_MimeType", vc_MimeType) :
                new ObjectParameter("vc_MimeType", typeof(string));
    
            var vc_WebSiteURLLinkParameter = vc_WebSiteURLLink != null ?
                new ObjectParameter("vc_WebSiteURLLink", vc_WebSiteURLLink) :
                new ObjectParameter("vc_WebSiteURLLink", typeof(string));
    
            var b_IsPEMParameter = b_IsPEM.HasValue ?
                new ObjectParameter("b_IsPEM", b_IsPEM) :
                new ObjectParameter("b_IsPEM", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Library_Insert", i_AppUserIdParameter, i_DocumentTypeIdParameter, vc_NameParameter, vc_DescriptionParameter, vc_PhysicalFileNameParameter, vc_DocumentNumParameter, vc_DocumentLocationParameter, vc_eDocumentParameter, vc_DocumentSourceCompanyParameter, vc_StatusCodeParameter, vc_MimeTypeParameter, vc_WebSiteURLLinkParameter, b_IsPEMParameter, o_LibraryID);
        }
    
        public virtual ObjectResult<usp_Library_Select_Result> usp_Library_Select(Nullable<int> i_AppUserId, Nullable<int> i_LibraryId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_LibraryIdParameter = i_LibraryId.HasValue ?
                new ObjectParameter("i_LibraryId", i_LibraryId) :
                new ObjectParameter("i_LibraryId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Library_Select_Result>("usp_Library_Select", i_AppUserIdParameter, i_LibraryIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Library_Select_DD_Result> usp_Library_Select_DD(Nullable<int> i_AppUserId, string v_MimeType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_MimeTypeParameter = v_MimeType != null ?
                new ObjectParameter("v_MimeType", v_MimeType) :
                new ObjectParameter("v_MimeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Library_Select_DD_Result>("usp_Library_Select_DD", i_AppUserIdParameter, v_MimeTypeParameter);
        }
    
        public virtual int usp_Library_Update(Nullable<int> i_AppUserId, Nullable<int> i_DocumentTypeId, string vc_Name, string vc_Description, string vc_PhysicalFileName, string vc_DocumentNum, string vc_DocumentLocation, byte[] vc_eDocument, string vc_DocumentSourceCompany, string vc_StatusCode, string vc_MimeType, Nullable<int> i_LibraryID, Nullable<bool> b_IsPEM, string vc_WebSiteURLLink)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_PhysicalFileNameParameter = vc_PhysicalFileName != null ?
                new ObjectParameter("vc_PhysicalFileName", vc_PhysicalFileName) :
                new ObjectParameter("vc_PhysicalFileName", typeof(string));
    
            var vc_DocumentNumParameter = vc_DocumentNum != null ?
                new ObjectParameter("vc_DocumentNum", vc_DocumentNum) :
                new ObjectParameter("vc_DocumentNum", typeof(string));
    
            var vc_DocumentLocationParameter = vc_DocumentLocation != null ?
                new ObjectParameter("vc_DocumentLocation", vc_DocumentLocation) :
                new ObjectParameter("vc_DocumentLocation", typeof(string));
    
            var vc_eDocumentParameter = vc_eDocument != null ?
                new ObjectParameter("vc_eDocument", vc_eDocument) :
                new ObjectParameter("vc_eDocument", typeof(byte[]));
    
            var vc_DocumentSourceCompanyParameter = vc_DocumentSourceCompany != null ?
                new ObjectParameter("vc_DocumentSourceCompany", vc_DocumentSourceCompany) :
                new ObjectParameter("vc_DocumentSourceCompany", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_MimeTypeParameter = vc_MimeType != null ?
                new ObjectParameter("vc_MimeType", vc_MimeType) :
                new ObjectParameter("vc_MimeType", typeof(string));
    
            var i_LibraryIDParameter = i_LibraryID.HasValue ?
                new ObjectParameter("i_LibraryID", i_LibraryID) :
                new ObjectParameter("i_LibraryID", typeof(int));
    
            var b_IsPEMParameter = b_IsPEM.HasValue ?
                new ObjectParameter("b_IsPEM", b_IsPEM) :
                new ObjectParameter("b_IsPEM", typeof(bool));
    
            var vc_WebSiteURLLinkParameter = vc_WebSiteURLLink != null ?
                new ObjectParameter("vc_WebSiteURLLink", vc_WebSiteURLLink) :
                new ObjectParameter("vc_WebSiteURLLink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Library_Update", i_AppUserIdParameter, i_DocumentTypeIdParameter, vc_NameParameter, vc_DescriptionParameter, vc_PhysicalFileNameParameter, vc_DocumentNumParameter, vc_DocumentLocationParameter, vc_eDocumentParameter, vc_DocumentSourceCompanyParameter, vc_StatusCodeParameter, vc_MimeTypeParameter, i_LibraryIDParameter, b_IsPEMParameter, vc_WebSiteURLLinkParameter);
        }
    
        public virtual ObjectResult<usp_LifeStyleGoals_DD_Result> usp_LifeStyleGoals_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LifeStyleGoals_DD_Result>("usp_LifeStyleGoals_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Listing_DrugCodeSearch_Result> usp_Listing_DrugCodeSearch(Nullable<int> i_AppUserId, string v_TradeName, string v_FirmName, string v_NDCCode, string v_IngredientName, string v_Strength, string v_DrugType, Nullable<int> i_inline)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TradeNameParameter = v_TradeName != null ?
                new ObjectParameter("v_TradeName", v_TradeName) :
                new ObjectParameter("v_TradeName", typeof(string));
    
            var v_FirmNameParameter = v_FirmName != null ?
                new ObjectParameter("v_FirmName", v_FirmName) :
                new ObjectParameter("v_FirmName", typeof(string));
    
            var v_NDCCodeParameter = v_NDCCode != null ?
                new ObjectParameter("v_NDCCode", v_NDCCode) :
                new ObjectParameter("v_NDCCode", typeof(string));
    
            var v_IngredientNameParameter = v_IngredientName != null ?
                new ObjectParameter("v_IngredientName", v_IngredientName) :
                new ObjectParameter("v_IngredientName", typeof(string));
    
            var v_StrengthParameter = v_Strength != null ?
                new ObjectParameter("v_Strength", v_Strength) :
                new ObjectParameter("v_Strength", typeof(string));
    
            var v_DrugTypeParameter = v_DrugType != null ?
                new ObjectParameter("v_DrugType", v_DrugType) :
                new ObjectParameter("v_DrugType", typeof(string));
    
            var i_inlineParameter = i_inline.HasValue ?
                new ObjectParameter("i_inline", i_inline) :
                new ObjectParameter("i_inline", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Listing_DrugCodeSearch_Result>("usp_Listing_DrugCodeSearch", i_AppUserIdParameter, v_TradeNameParameter, v_FirmNameParameter, v_NDCCodeParameter, v_IngredientNameParameter, v_StrengthParameter, v_DrugTypeParameter, i_inlineParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_LoginAudit_Insert(string v_LoginName, string v_IPAddress, string v_LoginStatus, Nullable<int> o_AuditId)
        {
            var v_LoginNameParameter = v_LoginName != null ?
                new ObjectParameter("v_LoginName", v_LoginName) :
                new ObjectParameter("v_LoginName", typeof(string));
    
            var v_IPAddressParameter = v_IPAddress != null ?
                new ObjectParameter("v_IPAddress", v_IPAddress) :
                new ObjectParameter("v_IPAddress", typeof(string));
    
            var v_LoginStatusParameter = v_LoginStatus != null ?
                new ObjectParameter("v_LoginStatus", v_LoginStatus) :
                new ObjectParameter("v_LoginStatus", typeof(string));
    
            var o_AuditIdParameter = o_AuditId.HasValue ?
                new ObjectParameter("o_AuditId", o_AuditId) :
                new ObjectParameter("o_AuditId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_LoginAudit_Insert", v_LoginNameParameter, v_IPAddressParameter, v_LoginStatusParameter, o_AuditIdParameter);
        }
    
        public virtual ObjectResult<usp_LoginAudit_Select_Result> usp_LoginAudit_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoginAudit_Select_Result>("usp_LoginAudit_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_LoginCreationForProviders_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_ProviderID, Nullable<int> i_SecurityRoleID, string v_EmailAddress)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_SecurityRoleIDParameter = i_SecurityRoleID.HasValue ?
                new ObjectParameter("i_SecurityRoleID", i_SecurityRoleID) :
                new ObjectParameter("i_SecurityRoleID", typeof(int));
    
            var v_EmailAddressParameter = v_EmailAddress != null ?
                new ObjectParameter("v_EmailAddress", v_EmailAddress) :
                new ObjectParameter("v_EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoginCreationForProviders_Insert", i_AppUserIdParameter, i_UserIDParameter, i_ProviderIDParameter, i_SecurityRoleIDParameter, v_EmailAddressParameter);
        }
    
        public virtual int usp_LogOutAudit_Insert(Nullable<int> appUserId, string v_IPAddress)
        {
            var appUserIdParameter = appUserId.HasValue ?
                new ObjectParameter("AppUserId", appUserId) :
                new ObjectParameter("AppUserId", typeof(int));
    
            var v_IPAddressParameter = v_IPAddress != null ?
                new ObjectParameter("v_IPAddress", v_IPAddress) :
                new ObjectParameter("v_IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LogOutAudit_Insert", appUserIdParameter, v_IPAddressParameter);
        }
    
        public virtual int usp_LogoutAudit_update(Nullable<int> appUserId, Nullable<System.DateTime> logouttime, Nullable<int> auditid, string logoutype)
        {
            var appUserIdParameter = appUserId.HasValue ?
                new ObjectParameter("AppUserId", appUserId) :
                new ObjectParameter("AppUserId", typeof(int));
    
            var logouttimeParameter = logouttime.HasValue ?
                new ObjectParameter("logouttime", logouttime) :
                new ObjectParameter("logouttime", typeof(System.DateTime));
    
            var auditidParameter = auditid.HasValue ?
                new ObjectParameter("Auditid", auditid) :
                new ObjectParameter("Auditid", typeof(int));
    
            var logoutypeParameter = logoutype != null ?
                new ObjectParameter("logoutype", logoutype) :
                new ObjectParameter("logoutype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LogoutAudit_update", appUserIdParameter, logouttimeParameter, auditidParameter, logoutypeParameter);
        }
    
        public virtual int usp_LoinAndCPT_ByNumeratorId(Nullable<int> i_AppUserId, Nullable<int> i_NumeratorId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_NumeratorIdParameter = i_NumeratorId.HasValue ?
                new ObjectParameter("i_NumeratorId", i_NumeratorId) :
                new ObjectParameter("i_NumeratorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoinAndCPT_ByNumeratorId", i_AppUserIdParameter, i_NumeratorIdParameter);
        }
    
        public virtual ObjectResult<usp_LoincCodeMaintance_Select_Result> usp_LoincCodeMaintance_Select(Nullable<int> i_AppUserId, string vc_LoincCode, string vc_LoincCodeOption, string vc_LoincName, string vc_LoincNameOption, Nullable<int> i_LoincCodeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_LoincCodeParameter = vc_LoincCode != null ?
                new ObjectParameter("vc_LoincCode", vc_LoincCode) :
                new ObjectParameter("vc_LoincCode", typeof(string));
    
            var vc_LoincCodeOptionParameter = vc_LoincCodeOption != null ?
                new ObjectParameter("vc_LoincCodeOption", vc_LoincCodeOption) :
                new ObjectParameter("vc_LoincCodeOption", typeof(string));
    
            var vc_LoincNameParameter = vc_LoincName != null ?
                new ObjectParameter("vc_LoincName", vc_LoincName) :
                new ObjectParameter("vc_LoincName", typeof(string));
    
            var vc_LoincNameOptionParameter = vc_LoincNameOption != null ?
                new ObjectParameter("vc_LoincNameOption", vc_LoincNameOption) :
                new ObjectParameter("vc_LoincNameOption", typeof(string));
    
            var i_LoincCodeIdParameter = i_LoincCodeId.HasValue ?
                new ObjectParameter("i_LoincCodeId", i_LoincCodeId) :
                new ObjectParameter("i_LoincCodeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoincCodeMaintance_Select_Result>("usp_LoincCodeMaintance_Select", i_AppUserIdParameter, vc_LoincCodeParameter, vc_LoincCodeOptionParameter, vc_LoincNameParameter, vc_LoincNameOptionParameter, i_LoincCodeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_LookUpCodeType_Delete(Nullable<int> i_AppUserId, Nullable<int> i_CodeTypeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LookUpCodeType_Delete", i_AppUserIdParameter, i_CodeTypeIDParameter);
        }
    
        public virtual int usp_LookUpCodeType_Insert(Nullable<int> i_AppUserId, Nullable<int> i_CodeTypeID, string vc_CodeTypeCode, string vc_CodeTypeName, string vc_TypeDescription, string vc_CodeTableName, ObjectParameter o_CodeTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            var vc_CodeTypeCodeParameter = vc_CodeTypeCode != null ?
                new ObjectParameter("vc_CodeTypeCode", vc_CodeTypeCode) :
                new ObjectParameter("vc_CodeTypeCode", typeof(string));
    
            var vc_CodeTypeNameParameter = vc_CodeTypeName != null ?
                new ObjectParameter("vc_CodeTypeName", vc_CodeTypeName) :
                new ObjectParameter("vc_CodeTypeName", typeof(string));
    
            var vc_TypeDescriptionParameter = vc_TypeDescription != null ?
                new ObjectParameter("vc_TypeDescription", vc_TypeDescription) :
                new ObjectParameter("vc_TypeDescription", typeof(string));
    
            var vc_CodeTableNameParameter = vc_CodeTableName != null ?
                new ObjectParameter("vc_CodeTableName", vc_CodeTableName) :
                new ObjectParameter("vc_CodeTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LookUpCodeType_Insert", i_AppUserIdParameter, i_CodeTypeIDParameter, vc_CodeTypeCodeParameter, vc_CodeTypeNameParameter, vc_TypeDescriptionParameter, vc_CodeTableNameParameter, o_CodeTypeId);
        }
    
        public virtual ObjectResult<usp_LookUpCodeType_Select_Result> usp_LookUpCodeType_Select(Nullable<int> i_AppUserId, Nullable<int> i_CodeTypeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LookUpCodeType_Select_Result>("usp_LookUpCodeType_Select", i_AppUserIdParameter, i_CodeTypeIDParameter);
        }
    
        public virtual int usp_LookUpCodeType_Update(Nullable<int> i_AppUserId, Nullable<int> i_CodeTypeID, string vc_CodeTypeCode, string vc_CodeTypeName, string vc_TypeDescription, string vc_CodeTableName, ObjectParameter o_CodeTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            var vc_CodeTypeCodeParameter = vc_CodeTypeCode != null ?
                new ObjectParameter("vc_CodeTypeCode", vc_CodeTypeCode) :
                new ObjectParameter("vc_CodeTypeCode", typeof(string));
    
            var vc_CodeTypeNameParameter = vc_CodeTypeName != null ?
                new ObjectParameter("vc_CodeTypeName", vc_CodeTypeName) :
                new ObjectParameter("vc_CodeTypeName", typeof(string));
    
            var vc_TypeDescriptionParameter = vc_TypeDescription != null ?
                new ObjectParameter("vc_TypeDescription", vc_TypeDescription) :
                new ObjectParameter("vc_TypeDescription", typeof(string));
    
            var vc_CodeTableNameParameter = vc_CodeTableName != null ?
                new ObjectParameter("vc_CodeTableName", vc_CodeTableName) :
                new ObjectParameter("vc_CodeTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LookUpCodeType_Update", i_AppUserIdParameter, i_CodeTypeIDParameter, vc_CodeTypeCodeParameter, vc_CodeTypeNameParameter, vc_TypeDescriptionParameter, vc_CodeTableNameParameter, o_CodeTypeId);
        }
    
        public virtual ObjectResult<usp_MaritalStatus_Select_DD_Result> usp_MaritalStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MaritalStatus_Select_DD_Result>("usp_MaritalStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int Usp_Measure_PatientQuickEntry_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Measure_PatientQuickEntry_Select", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_Measure_Search_Result> usp_Measure_Search(Nullable<int> i_AppUserId, string v_Measure, Nullable<bool> b_IsLabMeasure)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_MeasureParameter = v_Measure != null ?
                new ObjectParameter("v_Measure", v_Measure) :
                new ObjectParameter("v_Measure", typeof(string));
    
            var b_IsLabMeasureParameter = b_IsLabMeasure.HasValue ?
                new ObjectParameter("b_IsLabMeasure", b_IsLabMeasure) :
                new ObjectParameter("b_IsLabMeasure", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Measure_Search_Result>("usp_Measure_Search", i_AppUserIdParameter, v_MeasureParameter, b_IsLabMeasureParameter);
        }
    
        public virtual ObjectResult<usp_Measure_Select_Result> usp_Measure_Select(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, string v_StatusCode, Nullable<bool> b_IsSynonym, Nullable<bool> b_IsTextValueControl)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var b_IsSynonymParameter = b_IsSynonym.HasValue ?
                new ObjectParameter("b_IsSynonym", b_IsSynonym) :
                new ObjectParameter("b_IsSynonym", typeof(bool));
    
            var b_IsTextValueControlParameter = b_IsTextValueControl.HasValue ?
                new ObjectParameter("b_IsTextValueControl", b_IsTextValueControl) :
                new ObjectParameter("b_IsTextValueControl", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Measure_Select_Result>("usp_Measure_Select", i_AppUserIdParameter, i_MeasureIdParameter, v_StatusCodeParameter, b_IsSynonymParameter, b_IsTextValueControlParameter);
        }
    
        public virtual ObjectResult<usp_Measure_Select_DD_Result> usp_Measure_Select_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsSynonym, Nullable<bool> b_IsMasterMeasure, Nullable<int> i_MeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsSynonymParameter = b_IsSynonym.HasValue ?
                new ObjectParameter("b_IsSynonym", b_IsSynonym) :
                new ObjectParameter("b_IsSynonym", typeof(bool));
    
            var b_IsMasterMeasureParameter = b_IsMasterMeasure.HasValue ?
                new ObjectParameter("b_IsMasterMeasure", b_IsMasterMeasure) :
                new ObjectParameter("b_IsMasterMeasure", typeof(bool));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Measure_Select_DD_Result>("usp_Measure_Select_DD", i_AppUserIdParameter, b_IsSynonymParameter, b_IsMasterMeasureParameter, i_MeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_MeasureAdministrativeClassification_DD_Result> usp_MeasureAdministrativeClassification_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureAdministrativeClassification_DD_Result>("usp_MeasureAdministrativeClassification_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<Usp_MeasureOption_Select_DD_Result> Usp_MeasureOption_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_MeasureOption_Select_DD_Result>("Usp_MeasureOption_Select_DD", i_AppUserIdParameter, i_MeasureIdParameter);
        }
    
        public virtual ObjectResult<usp_MeasureSynonyms_Select_Result> usp_MeasureSynonyms_Select(Nullable<int> i_AppUserId, Nullable<int> i_SynonymMasterMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_SynonymMasterMeasureIDParameter = i_SynonymMasterMeasureID.HasValue ?
                new ObjectParameter("i_SynonymMasterMeasureID", i_SynonymMasterMeasureID) :
                new ObjectParameter("i_SynonymMasterMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureSynonyms_Select_Result>("usp_MeasureSynonyms_Select", i_AppUserIdParameter, i_SynonymMasterMeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_MeasureTextOption_Select_DD_Result> usp_MeasureTextOption_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureTextOption_Select_DD_Result>("usp_MeasureTextOption_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_MeasureType_Insert(Nullable<int> i_AppUserId, string vc_MeasureTypeName, string vc_Description, Nullable<int> i_SortOrder, string vc_StatusCode, ObjectParameter o_MeasureTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_MeasureTypeNameParameter = vc_MeasureTypeName != null ?
                new ObjectParameter("vc_MeasureTypeName", vc_MeasureTypeName) :
                new ObjectParameter("vc_MeasureTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MeasureType_Insert", i_AppUserIdParameter, vc_MeasureTypeNameParameter, vc_DescriptionParameter, i_SortOrderParameter, vc_StatusCodeParameter, o_MeasureTypeId);
        }
    
        public virtual ObjectResult<usp_MeasureType_Select_Result> usp_MeasureType_Select(Nullable<int> i_AppUserId, Nullable<int> i_MeasureTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureTypeIdParameter = i_MeasureTypeId.HasValue ?
                new ObjectParameter("i_MeasureTypeId", i_MeasureTypeId) :
                new ObjectParameter("i_MeasureTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureType_Select_Result>("usp_MeasureType_Select", i_AppUserIdParameter, i_MeasureTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_MeasureType_Select_DD_Result> usp_MeasureType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureType_Select_DD_Result>("usp_MeasureType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_MeasureType_Update(Nullable<int> i_AppUserId, string vc_MeasureTypeName, string vc_Description, Nullable<int> i_SortOrder, string vc_StatusCode, Nullable<int> i_MeasureTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_MeasureTypeNameParameter = vc_MeasureTypeName != null ?
                new ObjectParameter("vc_MeasureTypeName", vc_MeasureTypeName) :
                new ObjectParameter("vc_MeasureTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MeasureTypeIdParameter = i_MeasureTypeId.HasValue ?
                new ObjectParameter("i_MeasureTypeId", i_MeasureTypeId) :
                new ObjectParameter("i_MeasureTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MeasureType_Update", i_AppUserIdParameter, vc_MeasureTypeNameParameter, vc_DescriptionParameter, i_SortOrderParameter, vc_StatusCodeParameter, i_MeasureTypeIdParameter);
        }
    
        public virtual int usp_MeasureUOM_Insert(Nullable<int> i_AppUserId, string vc_UOMCode, string vc_UOMText, string vc_UOMDescription, Nullable<int> i_DataSourceID, Nullable<int> i_DataSourceFileID, string vc_StatusCode, ObjectParameter o_MeasureUOMId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_UOMCodeParameter = vc_UOMCode != null ?
                new ObjectParameter("vc_UOMCode", vc_UOMCode) :
                new ObjectParameter("vc_UOMCode", typeof(string));
    
            var vc_UOMTextParameter = vc_UOMText != null ?
                new ObjectParameter("vc_UOMText", vc_UOMText) :
                new ObjectParameter("vc_UOMText", typeof(string));
    
            var vc_UOMDescriptionParameter = vc_UOMDescription != null ?
                new ObjectParameter("vc_UOMDescription", vc_UOMDescription) :
                new ObjectParameter("vc_UOMDescription", typeof(string));
    
            var i_DataSourceIDParameter = i_DataSourceID.HasValue ?
                new ObjectParameter("i_DataSourceID", i_DataSourceID) :
                new ObjectParameter("i_DataSourceID", typeof(int));
    
            var i_DataSourceFileIDParameter = i_DataSourceFileID.HasValue ?
                new ObjectParameter("i_DataSourceFileID", i_DataSourceFileID) :
                new ObjectParameter("i_DataSourceFileID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MeasureUOM_Insert", i_AppUserIdParameter, vc_UOMCodeParameter, vc_UOMTextParameter, vc_UOMDescriptionParameter, i_DataSourceIDParameter, i_DataSourceFileIDParameter, vc_StatusCodeParameter, o_MeasureUOMId);
        }
    
        public virtual ObjectResult<usp_MeasureUOM_Select_Result> usp_MeasureUOM_Select(Nullable<int> i_AppUserId, Nullable<int> i_MeasureUOMId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureUOM_Select_Result>("usp_MeasureUOM_Select", i_AppUserIdParameter, i_MeasureUOMIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_MeasureUOM_Select_DD_Result> usp_MeasureUOM_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureUOM_Select_DD_Result>("usp_MeasureUOM_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_MeasureUOM_Update(Nullable<int> i_AppUserId, string vc_UOMCode, string vc_UOMText, string vc_UOMDescription, Nullable<int> i_DataSourceID, Nullable<int> i_DataSourceFileID, string vc_StatusCode, Nullable<int> i_MeasureUOMId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_UOMCodeParameter = vc_UOMCode != null ?
                new ObjectParameter("vc_UOMCode", vc_UOMCode) :
                new ObjectParameter("vc_UOMCode", typeof(string));
    
            var vc_UOMTextParameter = vc_UOMText != null ?
                new ObjectParameter("vc_UOMText", vc_UOMText) :
                new ObjectParameter("vc_UOMText", typeof(string));
    
            var vc_UOMDescriptionParameter = vc_UOMDescription != null ?
                new ObjectParameter("vc_UOMDescription", vc_UOMDescription) :
                new ObjectParameter("vc_UOMDescription", typeof(string));
    
            var i_DataSourceIDParameter = i_DataSourceID.HasValue ?
                new ObjectParameter("i_DataSourceID", i_DataSourceID) :
                new ObjectParameter("i_DataSourceID", typeof(int));
    
            var i_DataSourceFileIDParameter = i_DataSourceFileID.HasValue ?
                new ObjectParameter("i_DataSourceFileID", i_DataSourceFileID) :
                new ObjectParameter("i_DataSourceFileID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MeasureUOM_Update", i_AppUserIdParameter, vc_UOMCodeParameter, vc_UOMTextParameter, vc_UOMDescriptionParameter, i_DataSourceIDParameter, i_DataSourceFileIDParameter, vc_StatusCodeParameter, i_MeasureUOMIdParameter);
        }
    
        public virtual ObjectResult<usp_MeasureVital_Select_DD_Result> usp_MeasureVital_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeasureVital_Select_DD_Result>("usp_MeasureVital_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_MedicalCondition_Insert(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId, string s_Condition, string v_StatusCode, ObjectParameter o_MedicalConditionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var s_ConditionParameter = s_Condition != null ?
                new ObjectParameter("s_Condition", s_Condition) :
                new ObjectParameter("s_Condition", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalCondition_Insert", i_AppUserIdParameter, i_DiseaseIdParameter, s_ConditionParameter, v_StatusCodeParameter, o_MedicalConditionID);
        }
    
        public virtual ObjectResult<usp_MedicalCondition_Select_Result> usp_MedicalCondition_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalCondition_Select_Result>("usp_MedicalCondition_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_MedicalCondition_Update(Nullable<int> i_AppUserId, Nullable<int> i_DiseaseId, string v_Condition, string v_StatusCode, Nullable<int> i_MedicalConditionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var v_ConditionParameter = v_Condition != null ?
                new ObjectParameter("v_Condition", v_Condition) :
                new ObjectParameter("v_Condition", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_MedicalConditionIDParameter = i_MedicalConditionID.HasValue ?
                new ObjectParameter("i_MedicalConditionID", i_MedicalConditionID) :
                new ObjectParameter("i_MedicalConditionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalCondition_Update", i_AppUserIdParameter, i_DiseaseIdParameter, v_ConditionParameter, v_StatusCodeParameter, i_MedicalConditionIDParameter);
        }
    
        public virtual int usp_MedicalConditionHistory_Insert(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_MedicalConditionID, string s_Comments, string s_RecommendationsConsultation, string v_StatusCode, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, ObjectParameter o_UserMedicalConditionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_MedicalConditionIDParameter = i_MedicalConditionID.HasValue ?
                new ObjectParameter("i_MedicalConditionID", i_MedicalConditionID) :
                new ObjectParameter("i_MedicalConditionID", typeof(int));
    
            var s_CommentsParameter = s_Comments != null ?
                new ObjectParameter("s_Comments", s_Comments) :
                new ObjectParameter("s_Comments", typeof(string));
    
            var s_RecommendationsConsultationParameter = s_RecommendationsConsultation != null ?
                new ObjectParameter("s_RecommendationsConsultation", s_RecommendationsConsultation) :
                new ObjectParameter("s_RecommendationsConsultation", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalConditionHistory_Insert", i_AppUserIdParameter, i_PatientUserIdParameter, i_MedicalConditionIDParameter, s_CommentsParameter, s_RecommendationsConsultationParameter, v_StatusCodeParameter, d_StartDateParameter, d_EndDateParameter, o_UserMedicalConditionID);
        }
    
        public virtual ObjectResult<usp_MedicalHistoryOrRiskFactors_Select_Result> usp_MedicalHistoryOrRiskFactors_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalHistoryOrRiskFactors_Select_Result>("usp_MedicalHistoryOrRiskFactors_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_MedicalProblem_Insert(Nullable<int> i_AppUserId, string vc_ProblemName, string vc_Description, Nullable<int> i_MedicalProblemClassificationId, string vc_StatusCode, Nullable<bool> b_IsShowPatientCriteria, ObjectParameter o_MedicalProblemId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProblemNameParameter = vc_ProblemName != null ?
                new ObjectParameter("vc_ProblemName", vc_ProblemName) :
                new ObjectParameter("vc_ProblemName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var b_IsShowPatientCriteriaParameter = b_IsShowPatientCriteria.HasValue ?
                new ObjectParameter("b_IsShowPatientCriteria", b_IsShowPatientCriteria) :
                new ObjectParameter("b_IsShowPatientCriteria", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalProblem_Insert", i_AppUserIdParameter, vc_ProblemNameParameter, vc_DescriptionParameter, i_MedicalProblemClassificationIdParameter, vc_StatusCodeParameter, b_IsShowPatientCriteriaParameter, o_MedicalProblemId);
        }
    
        public virtual ObjectResult<usp_MedicalProblem_Select_Result> usp_MedicalProblem_Select(Nullable<int> i_AppUserId, Nullable<int> i_MedicalProblemId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MedicalProblemIdParameter = i_MedicalProblemId.HasValue ?
                new ObjectParameter("i_MedicalProblemId", i_MedicalProblemId) :
                new ObjectParameter("i_MedicalProblemId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalProblem_Select_Result>("usp_MedicalProblem_Select", i_AppUserIdParameter, i_MedicalProblemIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_MedicalProblem_Select_DD_Result> usp_MedicalProblem_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_MedicalProblemClassificationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalProblem_Select_DD_Result>("usp_MedicalProblem_Select_DD", i_AppUserIdParameter, i_MedicalProblemClassificationIdParameter);
        }
    
        public virtual int usp_MedicalProblem_Update(Nullable<int> i_AppUserId, string vc_ProblemName, string vc_Description, Nullable<int> i_MedicalProblemClassificationId, string vc_StatusCode, Nullable<int> i_MedicalProblemId, Nullable<bool> b_IsShowPatientCriteria)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProblemNameParameter = vc_ProblemName != null ?
                new ObjectParameter("vc_ProblemName", vc_ProblemName) :
                new ObjectParameter("vc_ProblemName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MedicalProblemIdParameter = i_MedicalProblemId.HasValue ?
                new ObjectParameter("i_MedicalProblemId", i_MedicalProblemId) :
                new ObjectParameter("i_MedicalProblemId", typeof(int));
    
            var b_IsShowPatientCriteriaParameter = b_IsShowPatientCriteria.HasValue ?
                new ObjectParameter("b_IsShowPatientCriteria", b_IsShowPatientCriteria) :
                new ObjectParameter("b_IsShowPatientCriteria", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalProblem_Update", i_AppUserIdParameter, vc_ProblemNameParameter, vc_DescriptionParameter, i_MedicalProblemClassificationIdParameter, vc_StatusCodeParameter, i_MedicalProblemIdParameter, b_IsShowPatientCriteriaParameter);
        }
    
        public virtual int usp_MedicalProblemClassification_Insert(Nullable<int> i_AppUserId, string vc_ProblemClassName, string vc_Description, string vc_StatusCode, ObjectParameter o_MedicalProblemClassificationId, Nullable<bool> i_isPatientViewable)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProblemClassNameParameter = vc_ProblemClassName != null ?
                new ObjectParameter("vc_ProblemClassName", vc_ProblemClassName) :
                new ObjectParameter("vc_ProblemClassName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_isPatientViewableParameter = i_isPatientViewable.HasValue ?
                new ObjectParameter("i_isPatientViewable", i_isPatientViewable) :
                new ObjectParameter("i_isPatientViewable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalProblemClassification_Insert", i_AppUserIdParameter, vc_ProblemClassNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, o_MedicalProblemClassificationId, i_isPatientViewableParameter);
        }
    
        public virtual ObjectResult<usp_MedicalProblemClassification_Select_Result> usp_MedicalProblemClassification_Select(Nullable<int> i_AppUserId, Nullable<int> i_MedicalProblemClassificationId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalProblemClassification_Select_Result>("usp_MedicalProblemClassification_Select", i_AppUserIdParameter, i_MedicalProblemClassificationIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_MedicalProblemClassification_Select_DD_Result> usp_MedicalProblemClassification_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MedicalProblemClassification_Select_DD_Result>("usp_MedicalProblemClassification_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_MedicalProblemClassification_Update(Nullable<int> i_AppUserId, string vc_ProblemClassName, string vc_Description, string vc_StatusCode, Nullable<int> i_MedicalProblemClassificationId, Nullable<bool> i_isPatientViewable)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProblemClassNameParameter = vc_ProblemClassName != null ?
                new ObjectParameter("vc_ProblemClassName", vc_ProblemClassName) :
                new ObjectParameter("vc_ProblemClassName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var i_isPatientViewableParameter = i_isPatientViewable.HasValue ?
                new ObjectParameter("i_isPatientViewable", i_isPatientViewable) :
                new ObjectParameter("i_isPatientViewable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MedicalProblemClassification_Update", i_AppUserIdParameter, vc_ProblemClassNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_MedicalProblemClassificationIdParameter, i_isPatientViewableParameter);
        }
    
        public virtual int usp_Metric_InsertUpdate(Nullable<int> i_AppUserId, string v_Name, string v_Description, Nullable<int> i_StandardId, Nullable<int> i_StandardOrganizationID, Nullable<int> i_IOMCategoryID, Nullable<int> i_InsuranceGroupID, string v_DenominatorType, Nullable<int> i_DenominatorID, string v_StatusCode, Nullable<bool> i_IsPrimary, Nullable<int> i_NumeratorID, Nullable<int> i_MeasureID, Nullable<int> i_ValueAttributeID, Nullable<int> i_MetricId, ObjectParameter o_MetricId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var i_StandardIdParameter = i_StandardId.HasValue ?
                new ObjectParameter("i_StandardId", i_StandardId) :
                new ObjectParameter("i_StandardId", typeof(int));
    
            var i_StandardOrganizationIDParameter = i_StandardOrganizationID.HasValue ?
                new ObjectParameter("i_StandardOrganizationID", i_StandardOrganizationID) :
                new ObjectParameter("i_StandardOrganizationID", typeof(int));
    
            var i_IOMCategoryIDParameter = i_IOMCategoryID.HasValue ?
                new ObjectParameter("i_IOMCategoryID", i_IOMCategoryID) :
                new ObjectParameter("i_IOMCategoryID", typeof(int));
    
            var i_InsuranceGroupIDParameter = i_InsuranceGroupID.HasValue ?
                new ObjectParameter("i_InsuranceGroupID", i_InsuranceGroupID) :
                new ObjectParameter("i_InsuranceGroupID", typeof(int));
    
            var v_DenominatorTypeParameter = v_DenominatorType != null ?
                new ObjectParameter("v_DenominatorType", v_DenominatorType) :
                new ObjectParameter("v_DenominatorType", typeof(string));
    
            var i_DenominatorIDParameter = i_DenominatorID.HasValue ?
                new ObjectParameter("i_DenominatorID", i_DenominatorID) :
                new ObjectParameter("i_DenominatorID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_IsPrimaryParameter = i_IsPrimary.HasValue ?
                new ObjectParameter("i_IsPrimary", i_IsPrimary) :
                new ObjectParameter("i_IsPrimary", typeof(bool));
    
            var i_NumeratorIDParameter = i_NumeratorID.HasValue ?
                new ObjectParameter("i_NumeratorID", i_NumeratorID) :
                new ObjectParameter("i_NumeratorID", typeof(int));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            var i_ValueAttributeIDParameter = i_ValueAttributeID.HasValue ?
                new ObjectParameter("i_ValueAttributeID", i_ValueAttributeID) :
                new ObjectParameter("i_ValueAttributeID", typeof(int));
    
            var i_MetricIdParameter = i_MetricId.HasValue ?
                new ObjectParameter("i_MetricId", i_MetricId) :
                new ObjectParameter("i_MetricId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Metric_InsertUpdate", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, i_StandardIdParameter, i_StandardOrganizationIDParameter, i_IOMCategoryIDParameter, i_InsuranceGroupIDParameter, v_DenominatorTypeParameter, i_DenominatorIDParameter, v_StatusCodeParameter, i_IsPrimaryParameter, i_NumeratorIDParameter, i_MeasureIDParameter, i_ValueAttributeIDParameter, i_MetricIdParameter, o_MetricId);
        }
    
        public virtual ObjectResult<usp_Metric_UsageSelect_Result> usp_Metric_UsageSelect(Nullable<int> i_AppUserId, Nullable<int> i_MetricId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricIdParameter = i_MetricId.HasValue ?
                new ObjectParameter("i_MetricId", i_MetricId) :
                new ObjectParameter("i_MetricId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Metric_UsageSelect_Result>("usp_Metric_UsageSelect", i_AppUserIdParameter, i_MetricIdParameter);
        }
    
        public virtual int usp_Metricdocument_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_MetricsId, string v_FileName, byte[] i_eDocument, string vc_MimeType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricsIdParameter = i_MetricsId.HasValue ?
                new ObjectParameter("i_MetricsId", i_MetricsId) :
                new ObjectParameter("i_MetricsId", typeof(int));
    
            var v_FileNameParameter = v_FileName != null ?
                new ObjectParameter("v_FileName", v_FileName) :
                new ObjectParameter("v_FileName", typeof(string));
    
            var i_eDocumentParameter = i_eDocument != null ?
                new ObjectParameter("i_eDocument", i_eDocument) :
                new ObjectParameter("i_eDocument", typeof(byte[]));
    
            var vc_MimeTypeParameter = vc_MimeType != null ?
                new ObjectParameter("vc_MimeType", vc_MimeType) :
                new ObjectParameter("vc_MimeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Metricdocument_InsertUpdate", i_AppUserIdParameter, i_MetricsIdParameter, v_FileNameParameter, i_eDocumentParameter, vc_MimeTypeParameter);
        }
    
        public virtual ObjectResult<usp_MetricDocument_Select_Result> usp_MetricDocument_Select(Nullable<int> i_AppUserId, Nullable<int> i_MetricId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricIdParameter = i_MetricId.HasValue ?
                new ObjectParameter("i_MetricId", i_MetricId) :
                new ObjectParameter("i_MetricId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricDocument_Select_Result>("usp_MetricDocument_Select", i_AppUserIdParameter, i_MetricIdParameter);
        }
    
        public virtual ObjectResult<usp_MetricGoals_Select_Result> usp_MetricGoals_Select(Nullable<int> i_AppUserId, Nullable<int> i_MetricsID, Nullable<int> i_MetricNumeratorID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricsIDParameter = i_MetricsID.HasValue ?
                new ObjectParameter("i_MetricsID", i_MetricsID) :
                new ObjectParameter("i_MetricsID", typeof(int));
    
            var i_MetricNumeratorIDParameter = i_MetricNumeratorID.HasValue ?
                new ObjectParameter("i_MetricNumeratorID", i_MetricNumeratorID) :
                new ObjectParameter("i_MetricNumeratorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricGoals_Select_Result>("usp_MetricGoals_Select", i_AppUserIdParameter, i_MetricsIDParameter, i_MetricNumeratorIDParameter);
        }
    
        public virtual ObjectResult<usp_MetricGoals_Select_DD_Result> usp_MetricGoals_Select_DD(Nullable<int> i_AppUserId, string v_Type)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TypeParameter = v_Type != null ?
                new ObjectParameter("v_Type", v_Type) :
                new ObjectParameter("v_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricGoals_Select_DD_Result>("usp_MetricGoals_Select_DD", i_AppUserIdParameter, v_TypeParameter);
        }
    
        public virtual int usp_MetricNumerator_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_MetricsID, string v_FromOperator, string i_FromFrequency, string v_ToOperator, string i_ToFrequency, Nullable<int> i_MetricNumeratorId, ObjectParameter o_MetricNumeratorId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricsIDParameter = i_MetricsID.HasValue ?
                new ObjectParameter("i_MetricsID", i_MetricsID) :
                new ObjectParameter("i_MetricsID", typeof(int));
    
            var v_FromOperatorParameter = v_FromOperator != null ?
                new ObjectParameter("v_FromOperator", v_FromOperator) :
                new ObjectParameter("v_FromOperator", typeof(string));
    
            var i_FromFrequencyParameter = i_FromFrequency != null ?
                new ObjectParameter("i_FromFrequency", i_FromFrequency) :
                new ObjectParameter("i_FromFrequency", typeof(string));
    
            var v_ToOperatorParameter = v_ToOperator != null ?
                new ObjectParameter("v_ToOperator", v_ToOperator) :
                new ObjectParameter("v_ToOperator", typeof(string));
    
            var i_ToFrequencyParameter = i_ToFrequency != null ?
                new ObjectParameter("i_ToFrequency", i_ToFrequency) :
                new ObjectParameter("i_ToFrequency", typeof(string));
    
            var i_MetricNumeratorIdParameter = i_MetricNumeratorId.HasValue ?
                new ObjectParameter("i_MetricNumeratorId", i_MetricNumeratorId) :
                new ObjectParameter("i_MetricNumeratorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MetricNumerator_InsertUpdate", i_AppUserIdParameter, i_MetricsIDParameter, v_FromOperatorParameter, i_FromFrequencyParameter, v_ToOperatorParameter, i_ToFrequencyParameter, i_MetricNumeratorIdParameter, o_MetricNumeratorId);
        }
    
        public virtual int usp_MetricnumeratorFrequency_Delete(Nullable<int> i_AppUserId, Nullable<int> i_MetricnumeratorFrequencyId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricnumeratorFrequencyIdParameter = i_MetricnumeratorFrequencyId.HasValue ?
                new ObjectParameter("i_MetricnumeratorFrequencyId", i_MetricnumeratorFrequencyId) :
                new ObjectParameter("i_MetricnumeratorFrequencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MetricnumeratorFrequency_Delete", i_AppUserIdParameter, i_MetricnumeratorFrequencyIdParameter);
        }
    
        public virtual ObjectResult<usp_MetricnumeratorFrequency_Select_Result> usp_MetricnumeratorFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricnumeratorFrequency_Select_Result>("usp_MetricnumeratorFrequency_Select", i_AppUserIdParameter, i_MetricIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_MetricReport_ETLStatus(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_MetricReport_ETLStatus", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_MetricReportConfiguration_ByDrID_Result> usp_MetricReportConfiguration_ByDrID(Nullable<int> i_AppUserId, Nullable<int> i_DrID, string v_DrType, Nullable<int> i_ReportID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DrIDParameter = i_DrID.HasValue ?
                new ObjectParameter("i_DrID", i_DrID) :
                new ObjectParameter("i_DrID", typeof(int));
    
            var v_DrTypeParameter = v_DrType != null ?
                new ObjectParameter("v_DrType", v_DrType) :
                new ObjectParameter("v_DrType", typeof(string));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricReportConfiguration_ByDrID_Result>("usp_MetricReportConfiguration_ByDrID", i_AppUserIdParameter, i_DrIDParameter, v_DrTypeParameter, i_ReportIDParameter);
        }
    
        public virtual ObjectResult<usp_MetricReportConfiguration_ByReportName_Result> usp_MetricReportConfiguration_ByReportName(Nullable<int> i_AppUserId, string i_ReportName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportNameParameter = i_ReportName != null ?
                new ObjectParameter("i_ReportName", i_ReportName) :
                new ObjectParameter("i_ReportName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricReportConfiguration_ByReportName_Result>("usp_MetricReportConfiguration_ByReportName", i_AppUserIdParameter, i_ReportNameParameter);
        }
    
        public virtual int usp_MetricReportConfiguration_CheckByReport(Nullable<int> i_AppUserId, Nullable<int> i_ReportID, ObjectParameter i_ValidateID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MetricReportConfiguration_CheckByReport", i_AppUserIdParameter, i_ReportIDParameter, i_ValidateID);
        }
    
        public virtual ObjectResult<usp_MetricReportConfiguration_Search_Result> usp_MetricReportConfiguration_Search(Nullable<int> i_AppUserId, Nullable<int> i_ReportID, Nullable<bool> b_IsSchedule, Nullable<bool> b_IsReadyForETL, string v_Status)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            var b_IsScheduleParameter = b_IsSchedule.HasValue ?
                new ObjectParameter("b_IsSchedule", b_IsSchedule) :
                new ObjectParameter("b_IsSchedule", typeof(bool));
    
            var b_IsReadyForETLParameter = b_IsReadyForETL.HasValue ?
                new ObjectParameter("b_IsReadyForETL", b_IsReadyForETL) :
                new ObjectParameter("b_IsReadyForETL", typeof(bool));
    
            var v_StatusParameter = v_Status != null ?
                new ObjectParameter("v_Status", v_Status) :
                new ObjectParameter("v_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricReportConfiguration_Search_Result>("usp_MetricReportConfiguration_Search", i_AppUserIdParameter, i_ReportIDParameter, b_IsScheduleParameter, b_IsReadyForETLParameter, v_StatusParameter);
        }
    
        public virtual ObjectResult<usp_MetricReportConfiguration_Select_Result> usp_MetricReportConfiguration_Select(Nullable<int> i_AppUserId, Nullable<int> i_ReportFrequencyID, Nullable<bool> b_IsClone)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportFrequencyIDParameter = i_ReportFrequencyID.HasValue ?
                new ObjectParameter("i_ReportFrequencyID", i_ReportFrequencyID) :
                new ObjectParameter("i_ReportFrequencyID", typeof(int));
    
            var b_IsCloneParameter = b_IsClone.HasValue ?
                new ObjectParameter("b_IsClone", b_IsClone) :
                new ObjectParameter("b_IsClone", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MetricReportConfiguration_Select_Result>("usp_MetricReportConfiguration_Select", i_AppUserIdParameter, i_ReportFrequencyIDParameter, b_IsCloneParameter);
        }
    
        public virtual int usp_MetricReportConfiguration_Validation(Nullable<int> i_AppUserId, Nullable<int> i_ReportID, Nullable<int> i_AdhocAnchorDate, Nullable<bool> b_IsSchedule, Nullable<int> i_ReportFrequencyID, ObjectParameter i_ValidateID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            var i_AdhocAnchorDateParameter = i_AdhocAnchorDate.HasValue ?
                new ObjectParameter("i_AdhocAnchorDate", i_AdhocAnchorDate) :
                new ObjectParameter("i_AdhocAnchorDate", typeof(int));
    
            var b_IsScheduleParameter = b_IsSchedule.HasValue ?
                new ObjectParameter("b_IsSchedule", b_IsSchedule) :
                new ObjectParameter("b_IsSchedule", typeof(bool));
    
            var i_ReportFrequencyIDParameter = i_ReportFrequencyID.HasValue ?
                new ObjectParameter("i_ReportFrequencyID", i_ReportFrequencyID) :
                new ObjectParameter("i_ReportFrequencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MetricReportConfiguration_Validation", i_AppUserIdParameter, i_ReportIDParameter, i_AdhocAnchorDateParameter, b_IsScheduleParameter, i_ReportFrequencyIDParameter, i_ValidateID);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_MetricReportConfiguration_ValidationForScheduleReport(Nullable<int> i_AppUserId, Nullable<int> i_ReportID, string v_Frequency, Nullable<System.DateTime> d_EndDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            var v_FrequencyParameter = v_Frequency != null ?
                new ObjectParameter("v_Frequency", v_Frequency) :
                new ObjectParameter("v_Frequency", typeof(string));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_MetricReportConfiguration_ValidationForScheduleReport", i_AppUserIdParameter, i_ReportIDParameter, v_FrequencyParameter, d_EndDateParameter);
        }
    
        public virtual ObjectResult<usp_Metrics_Search_Result> usp_Metrics_Search(Nullable<int> i_AppUserId, Nullable<int> i_MetricId, string v_Name, string v_Description, string v_DenominatorType, Nullable<int> i_DenominatorID, Nullable<int> i_InsuranceGroupID, Nullable<int> i_StandardId, Nullable<int> i_StandardOrganizationID, Nullable<int> i_NumeratorID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricIdParameter = i_MetricId.HasValue ?
                new ObjectParameter("i_MetricId", i_MetricId) :
                new ObjectParameter("i_MetricId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_DenominatorTypeParameter = v_DenominatorType != null ?
                new ObjectParameter("v_DenominatorType", v_DenominatorType) :
                new ObjectParameter("v_DenominatorType", typeof(string));
    
            var i_DenominatorIDParameter = i_DenominatorID.HasValue ?
                new ObjectParameter("i_DenominatorID", i_DenominatorID) :
                new ObjectParameter("i_DenominatorID", typeof(int));
    
            var i_InsuranceGroupIDParameter = i_InsuranceGroupID.HasValue ?
                new ObjectParameter("i_InsuranceGroupID", i_InsuranceGroupID) :
                new ObjectParameter("i_InsuranceGroupID", typeof(int));
    
            var i_StandardIdParameter = i_StandardId.HasValue ?
                new ObjectParameter("i_StandardId", i_StandardId) :
                new ObjectParameter("i_StandardId", typeof(int));
    
            var i_StandardOrganizationIDParameter = i_StandardOrganizationID.HasValue ?
                new ObjectParameter("i_StandardOrganizationID", i_StandardOrganizationID) :
                new ObjectParameter("i_StandardOrganizationID", typeof(int));
    
            var i_NumeratorIDParameter = i_NumeratorID.HasValue ?
                new ObjectParameter("i_NumeratorID", i_NumeratorID) :
                new ObjectParameter("i_NumeratorID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Metrics_Search_Result>("usp_Metrics_Search", i_AppUserIdParameter, i_MetricIdParameter, v_NameParameter, v_DescriptionParameter, v_DenominatorTypeParameter, i_DenominatorIDParameter, i_InsuranceGroupIDParameter, i_StandardIdParameter, i_StandardOrganizationIDParameter, i_NumeratorIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Metrics_Search_DD_Result> usp_Metrics_Search_DD(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Metrics_Search_DD_Result>("usp_Metrics_Search_DD", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Metrics_Select_DD_Result> usp_Metrics_Select_DD(Nullable<int> i_AppUserId, string v_PopulationType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_PopulationTypeParameter = v_PopulationType != null ?
                new ObjectParameter("v_PopulationType", v_PopulationType) :
                new ObjectParameter("v_PopulationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Metrics_Select_DD_Result>("usp_Metrics_Select_DD", i_AppUserIdParameter, v_PopulationTypeParameter);
        }
    
        public virtual int usp_Metrics_TimePeriod(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Metrics_TimePeriod", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_MNRnumber_Select_Result> usp_MNRnumber_Select(Nullable<int> i_AppUserID, string vc_MnrNoSearch)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var vc_MnrNoSearchParameter = vc_MnrNoSearch != null ?
                new ObjectParameter("vc_MnrNoSearch", vc_MnrNoSearch) :
                new ObjectParameter("vc_MnrNoSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MNRnumber_Select_Result>("usp_MNRnumber_Select", i_AppUserIDParameter, vc_MnrNoSearchParameter);
        }
    
        public virtual int Usp_MoveIndexesToFileGroup(string dBName, string schemaName, string objectNameList, string indexName, string fileGroupName, string flag)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            var schemaNameParameter = schemaName != null ?
                new ObjectParameter("SchemaName", schemaName) :
                new ObjectParameter("SchemaName", typeof(string));
    
            var objectNameListParameter = objectNameList != null ?
                new ObjectParameter("ObjectNameList", objectNameList) :
                new ObjectParameter("ObjectNameList", typeof(string));
    
            var indexNameParameter = indexName != null ?
                new ObjectParameter("IndexName", indexName) :
                new ObjectParameter("IndexName", typeof(string));
    
            var fileGroupNameParameter = fileGroupName != null ?
                new ObjectParameter("FileGroupName", fileGroupName) :
                new ObjectParameter("FileGroupName", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MoveIndexesToFileGroup", dBNameParameter, schemaNameParameter, objectNameListParameter, indexNameParameter, fileGroupNameParameter, flagParameter);
        }
    
        public virtual ObjectResult<usp_NamePrefix_Select_DD_Result> usp_NamePrefix_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NamePrefix_Select_DD_Result>("usp_NamePrefix_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NameSuffix_Select_DD_Result> usp_NameSuffix_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NameSuffix_Select_DD_Result>("usp_NameSuffix_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Non_HEDIS_HealthPlans_ASTH_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Non_HEDIS_HealthPlans_ASTH_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_NonHEDIS_HealthPlans_COPD_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NonHEDIS_HealthPlans_COPD_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_NonHEDIS_HealthPlans_COPD_GetPatients_EncouterClaims_2012(Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<int> num_Months_Prior, Nullable<int> num_Months_After, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var num_Months_PriorParameter = num_Months_Prior.HasValue ?
                new ObjectParameter("Num_Months_Prior", num_Months_Prior) :
                new ObjectParameter("Num_Months_Prior", typeof(int));
    
            var num_Months_AfterParameter = num_Months_After.HasValue ?
                new ObjectParameter("Num_Months_After", num_Months_After) :
                new ObjectParameter("Num_Months_After", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NonHEDIS_HealthPlans_COPD_GetPatients_EncouterClaims_2012", anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, num_Months_PriorParameter, num_Months_AfterParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_Non_HEDIS_L_HealthPlans_ASTH_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Non_HEDIS_L_HealthPlans_ASTH_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual int usp_NonHEDIS_L_HealthPlans_COPD_GetDenominator_2012(Nullable<int> populationDefinitionID, string insuranceProductTypes, string insurancePlanTypes, string insuranceBenefitTypes, Nullable<int> anchorDate_Year, Nullable<int> anchorDate_Month, Nullable<int> anchorDate_Day, Nullable<bool> isPrimary, Nullable<int> num_Months_Prior_EligiblePop, Nullable<int> num_Months_After_EligiblePop, Nullable<int> eligibleAge_MIN, Nullable<int> eligibleAge_MAX, Nullable<int> numMonths_Prior_Insured_Commercial, Nullable<int> numMonths_After_Insured_Commercial, Nullable<int> numMonths_Prior_Insured_Medicare, Nullable<int> numMonths_After_Insured_Medicare, Nullable<int> numMonths_Prior_Insured_Medicaid, Nullable<int> numMonths_After_Insured_Medicaid, Nullable<int> enrollment_AllowedNumGaps_Commercial, Nullable<int> enrollment_MAXDaysPerGap_Commercial, Nullable<int> enrollment_AllowedNumGaps_Medicare, Nullable<int> enrollment_MAXDaysPerGap_Medicare, Nullable<int> enrollment_AllowedNumGaps_Medicaid, Nullable<int> enrollment_MAXDaysPerGap_Medicaid, Nullable<int> num_Months_Prior_Encounters, Nullable<int> num_Months_After_Encounters, Nullable<int> num_Encounters_Outpatient_NonAcuteInPatient, Nullable<int> num_Encounters_AcuteInpatient_ED, Nullable<int> num_Months_Prior_Rx, Nullable<int> num_Months_After_Rx, Nullable<int> num_Rx_Dispense, Nullable<bool> isDeceased, string insuranceGroupStatus, string insurancePlanStatus, string insurancePolicyStatus, string patientStatus, Nullable<int> eCTCodeVersion_Year, string eCTCodeStatus)
        {
            var populationDefinitionIDParameter = populationDefinitionID.HasValue ?
                new ObjectParameter("PopulationDefinitionID", populationDefinitionID) :
                new ObjectParameter("PopulationDefinitionID", typeof(int));
    
            var insuranceProductTypesParameter = insuranceProductTypes != null ?
                new ObjectParameter("InsuranceProductTypes", insuranceProductTypes) :
                new ObjectParameter("InsuranceProductTypes", typeof(string));
    
            var insurancePlanTypesParameter = insurancePlanTypes != null ?
                new ObjectParameter("InsurancePlanTypes", insurancePlanTypes) :
                new ObjectParameter("InsurancePlanTypes", typeof(string));
    
            var insuranceBenefitTypesParameter = insuranceBenefitTypes != null ?
                new ObjectParameter("InsuranceBenefitTypes", insuranceBenefitTypes) :
                new ObjectParameter("InsuranceBenefitTypes", typeof(string));
    
            var anchorDate_YearParameter = anchorDate_Year.HasValue ?
                new ObjectParameter("AnchorDate_Year", anchorDate_Year) :
                new ObjectParameter("AnchorDate_Year", typeof(int));
    
            var anchorDate_MonthParameter = anchorDate_Month.HasValue ?
                new ObjectParameter("AnchorDate_Month", anchorDate_Month) :
                new ObjectParameter("AnchorDate_Month", typeof(int));
    
            var anchorDate_DayParameter = anchorDate_Day.HasValue ?
                new ObjectParameter("AnchorDate_Day", anchorDate_Day) :
                new ObjectParameter("AnchorDate_Day", typeof(int));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var num_Months_Prior_EligiblePopParameter = num_Months_Prior_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_Prior_EligiblePop", num_Months_Prior_EligiblePop) :
                new ObjectParameter("Num_Months_Prior_EligiblePop", typeof(int));
    
            var num_Months_After_EligiblePopParameter = num_Months_After_EligiblePop.HasValue ?
                new ObjectParameter("Num_Months_After_EligiblePop", num_Months_After_EligiblePop) :
                new ObjectParameter("Num_Months_After_EligiblePop", typeof(int));
    
            var eligibleAge_MINParameter = eligibleAge_MIN.HasValue ?
                new ObjectParameter("EligibleAge_MIN", eligibleAge_MIN) :
                new ObjectParameter("EligibleAge_MIN", typeof(int));
    
            var eligibleAge_MAXParameter = eligibleAge_MAX.HasValue ?
                new ObjectParameter("EligibleAge_MAX", eligibleAge_MAX) :
                new ObjectParameter("EligibleAge_MAX", typeof(int));
    
            var numMonths_Prior_Insured_CommercialParameter = numMonths_Prior_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", numMonths_Prior_Insured_Commercial) :
                new ObjectParameter("NumMonths_Prior_Insured_Commercial", typeof(int));
    
            var numMonths_After_Insured_CommercialParameter = numMonths_After_Insured_Commercial.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Commercial", numMonths_After_Insured_Commercial) :
                new ObjectParameter("NumMonths_After_Insured_Commercial", typeof(int));
    
            var numMonths_Prior_Insured_MedicareParameter = numMonths_Prior_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", numMonths_Prior_Insured_Medicare) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicare", typeof(int));
    
            var numMonths_After_Insured_MedicareParameter = numMonths_After_Insured_Medicare.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicare", numMonths_After_Insured_Medicare) :
                new ObjectParameter("NumMonths_After_Insured_Medicare", typeof(int));
    
            var numMonths_Prior_Insured_MedicaidParameter = numMonths_Prior_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", numMonths_Prior_Insured_Medicaid) :
                new ObjectParameter("NumMonths_Prior_Insured_Medicaid", typeof(int));
    
            var numMonths_After_Insured_MedicaidParameter = numMonths_After_Insured_Medicaid.HasValue ?
                new ObjectParameter("NumMonths_After_Insured_Medicaid", numMonths_After_Insured_Medicaid) :
                new ObjectParameter("NumMonths_After_Insured_Medicaid", typeof(int));
    
            var enrollment_AllowedNumGaps_CommercialParameter = enrollment_AllowedNumGaps_Commercial.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", enrollment_AllowedNumGaps_Commercial) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Commercial", typeof(int));
    
            var enrollment_MAXDaysPerGap_CommercialParameter = enrollment_MAXDaysPerGap_Commercial.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", enrollment_MAXDaysPerGap_Commercial) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Commercial", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicareParameter = enrollment_AllowedNumGaps_Medicare.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", enrollment_AllowedNumGaps_Medicare) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicare", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicareParameter = enrollment_MAXDaysPerGap_Medicare.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", enrollment_MAXDaysPerGap_Medicare) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicare", typeof(int));
    
            var enrollment_AllowedNumGaps_MedicaidParameter = enrollment_AllowedNumGaps_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", enrollment_AllowedNumGaps_Medicaid) :
                new ObjectParameter("Enrollment_AllowedNumGaps_Medicaid", typeof(int));
    
            var enrollment_MAXDaysPerGap_MedicaidParameter = enrollment_MAXDaysPerGap_Medicaid.HasValue ?
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", enrollment_MAXDaysPerGap_Medicaid) :
                new ObjectParameter("Enrollment_MAXDaysPerGap_Medicaid", typeof(int));
    
            var num_Months_Prior_EncountersParameter = num_Months_Prior_Encounters.HasValue ?
                new ObjectParameter("Num_Months_Prior_Encounters", num_Months_Prior_Encounters) :
                new ObjectParameter("Num_Months_Prior_Encounters", typeof(int));
    
            var num_Months_After_EncountersParameter = num_Months_After_Encounters.HasValue ?
                new ObjectParameter("Num_Months_After_Encounters", num_Months_After_Encounters) :
                new ObjectParameter("Num_Months_After_Encounters", typeof(int));
    
            var num_Encounters_Outpatient_NonAcuteInPatientParameter = num_Encounters_Outpatient_NonAcuteInPatient.HasValue ?
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", num_Encounters_Outpatient_NonAcuteInPatient) :
                new ObjectParameter("Num_Encounters_Outpatient_NonAcuteInPatient", typeof(int));
    
            var num_Encounters_AcuteInpatient_EDParameter = num_Encounters_AcuteInpatient_ED.HasValue ?
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", num_Encounters_AcuteInpatient_ED) :
                new ObjectParameter("Num_Encounters_AcuteInpatient_ED", typeof(int));
    
            var num_Months_Prior_RxParameter = num_Months_Prior_Rx.HasValue ?
                new ObjectParameter("Num_Months_Prior_Rx", num_Months_Prior_Rx) :
                new ObjectParameter("Num_Months_Prior_Rx", typeof(int));
    
            var num_Months_After_RxParameter = num_Months_After_Rx.HasValue ?
                new ObjectParameter("Num_Months_After_Rx", num_Months_After_Rx) :
                new ObjectParameter("Num_Months_After_Rx", typeof(int));
    
            var num_Rx_DispenseParameter = num_Rx_Dispense.HasValue ?
                new ObjectParameter("Num_Rx_Dispense", num_Rx_Dispense) :
                new ObjectParameter("Num_Rx_Dispense", typeof(int));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("IsDeceased", isDeceased) :
                new ObjectParameter("IsDeceased", typeof(bool));
    
            var insuranceGroupStatusParameter = insuranceGroupStatus != null ?
                new ObjectParameter("InsuranceGroupStatus", insuranceGroupStatus) :
                new ObjectParameter("InsuranceGroupStatus", typeof(string));
    
            var insurancePlanStatusParameter = insurancePlanStatus != null ?
                new ObjectParameter("InsurancePlanStatus", insurancePlanStatus) :
                new ObjectParameter("InsurancePlanStatus", typeof(string));
    
            var insurancePolicyStatusParameter = insurancePolicyStatus != null ?
                new ObjectParameter("InsurancePolicyStatus", insurancePolicyStatus) :
                new ObjectParameter("InsurancePolicyStatus", typeof(string));
    
            var patientStatusParameter = patientStatus != null ?
                new ObjectParameter("PatientStatus", patientStatus) :
                new ObjectParameter("PatientStatus", typeof(string));
    
            var eCTCodeVersion_YearParameter = eCTCodeVersion_Year.HasValue ?
                new ObjectParameter("ECTCodeVersion_Year", eCTCodeVersion_Year) :
                new ObjectParameter("ECTCodeVersion_Year", typeof(int));
    
            var eCTCodeStatusParameter = eCTCodeStatus != null ?
                new ObjectParameter("ECTCodeStatus", eCTCodeStatus) :
                new ObjectParameter("ECTCodeStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NonHEDIS_L_HealthPlans_COPD_GetDenominator_2012", populationDefinitionIDParameter, insuranceProductTypesParameter, insurancePlanTypesParameter, insuranceBenefitTypesParameter, anchorDate_YearParameter, anchorDate_MonthParameter, anchorDate_DayParameter, isPrimaryParameter, num_Months_Prior_EligiblePopParameter, num_Months_After_EligiblePopParameter, eligibleAge_MINParameter, eligibleAge_MAXParameter, numMonths_Prior_Insured_CommercialParameter, numMonths_After_Insured_CommercialParameter, numMonths_Prior_Insured_MedicareParameter, numMonths_After_Insured_MedicareParameter, numMonths_Prior_Insured_MedicaidParameter, numMonths_After_Insured_MedicaidParameter, enrollment_AllowedNumGaps_CommercialParameter, enrollment_MAXDaysPerGap_CommercialParameter, enrollment_AllowedNumGaps_MedicareParameter, enrollment_MAXDaysPerGap_MedicareParameter, enrollment_AllowedNumGaps_MedicaidParameter, enrollment_MAXDaysPerGap_MedicaidParameter, num_Months_Prior_EncountersParameter, num_Months_After_EncountersParameter, num_Encounters_Outpatient_NonAcuteInPatientParameter, num_Encounters_AcuteInpatient_EDParameter, num_Months_Prior_RxParameter, num_Months_After_RxParameter, num_Rx_DispenseParameter, isDeceasedParameter, insuranceGroupStatusParameter, insurancePlanStatusParameter, insurancePolicyStatusParameter, patientStatusParameter, eCTCodeVersion_YearParameter, eCTCodeStatusParameter);
        }
    
        public virtual ObjectResult<usp_NPOLkupCodeSupplemental_DD_Result> usp_NPOLkupCodeSupplemental_DD(Nullable<int> i_AppUserId, string v_RecordType, Nullable<int> i_CodeTypeID, Nullable<int> i_MeasureID, Nullable<bool> b_ServiceType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_RecordTypeParameter = v_RecordType != null ?
                new ObjectParameter("v_RecordType", v_RecordType) :
                new ObjectParameter("v_RecordType", typeof(string));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            var b_ServiceTypeParameter = b_ServiceType.HasValue ?
                new ObjectParameter("b_ServiceType", b_ServiceType) :
                new ObjectParameter("b_ServiceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NPOLkupCodeSupplemental_DD_Result>("usp_NPOLkupCodeSupplemental_DD", i_AppUserIdParameter, v_RecordTypeParameter, i_CodeTypeIDParameter, i_MeasureIDParameter, b_ServiceTypeParameter);
        }
    
        public virtual ObjectResult<usp_NPOLkupSupplemental_DD_Result> usp_NPOLkupSupplemental_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NPOLkupSupplemental_DD_Result>("usp_NPOLkupSupplemental_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_NPOPatientSupplementalForm_Excel_Result> usp_NPOPatientSupplementalForm_Excel(Nullable<int> i_AppUserId, Nullable<System.DateTime> dt_FromDate, Nullable<System.DateTime> dt_ToDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var dt_FromDateParameter = dt_FromDate.HasValue ?
                new ObjectParameter("dt_FromDate", dt_FromDate) :
                new ObjectParameter("dt_FromDate", typeof(System.DateTime));
    
            var dt_ToDateParameter = dt_ToDate.HasValue ?
                new ObjectParameter("dt_ToDate", dt_ToDate) :
                new ObjectParameter("dt_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NPOPatientSupplementalForm_Excel_Result>("usp_NPOPatientSupplementalForm_Excel", i_AppUserIdParameter, dt_FromDateParameter, dt_ToDateParameter);
        }
    
        public virtual int usp_NPOPatientSupplementalForm_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PatientId, Nullable<System.DateTime> d_DateOfService, string v_RecordType, Nullable<int> i_CodeTypeID, Nullable<int> i_MeasureID, string v_CodeValue, string v_ServiceCode, Nullable<int> b_IsNumericResultType, string v_LabOperator, Nullable<decimal> dc_LabResultValue, Nullable<int> i_LabResultTextID, Nullable<int> i_EthnicityID, Nullable<int> i_RaceID, Nullable<int> i_SpokenLanguageID, Nullable<int> i_WrittenLanguageID, Nullable<System.DateTime> d_DateOfDeath, string vc_ServiceProviderNPI, string vc_ServiceProviderMILicenceNo, string vc_PCPNPI, string vc_PCPMILicenceNo, Nullable<int> i_NPOPatientSupplementalForm, ObjectParameter o_NPOPatientSupplementalForm)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIdParameter = i_PatientId.HasValue ?
                new ObjectParameter("i_PatientId", i_PatientId) :
                new ObjectParameter("i_PatientId", typeof(int));
    
            var d_DateOfServiceParameter = d_DateOfService.HasValue ?
                new ObjectParameter("d_DateOfService", d_DateOfService) :
                new ObjectParameter("d_DateOfService", typeof(System.DateTime));
    
            var v_RecordTypeParameter = v_RecordType != null ?
                new ObjectParameter("v_RecordType", v_RecordType) :
                new ObjectParameter("v_RecordType", typeof(string));
    
            var i_CodeTypeIDParameter = i_CodeTypeID.HasValue ?
                new ObjectParameter("i_CodeTypeID", i_CodeTypeID) :
                new ObjectParameter("i_CodeTypeID", typeof(int));
    
            var i_MeasureIDParameter = i_MeasureID.HasValue ?
                new ObjectParameter("i_MeasureID", i_MeasureID) :
                new ObjectParameter("i_MeasureID", typeof(int));
    
            var v_CodeValueParameter = v_CodeValue != null ?
                new ObjectParameter("v_CodeValue", v_CodeValue) :
                new ObjectParameter("v_CodeValue", typeof(string));
    
            var v_ServiceCodeParameter = v_ServiceCode != null ?
                new ObjectParameter("v_ServiceCode", v_ServiceCode) :
                new ObjectParameter("v_ServiceCode", typeof(string));
    
            var b_IsNumericResultTypeParameter = b_IsNumericResultType.HasValue ?
                new ObjectParameter("b_IsNumericResultType", b_IsNumericResultType) :
                new ObjectParameter("b_IsNumericResultType", typeof(int));
    
            var v_LabOperatorParameter = v_LabOperator != null ?
                new ObjectParameter("v_LabOperator", v_LabOperator) :
                new ObjectParameter("v_LabOperator", typeof(string));
    
            var dc_LabResultValueParameter = dc_LabResultValue.HasValue ?
                new ObjectParameter("dc_LabResultValue", dc_LabResultValue) :
                new ObjectParameter("dc_LabResultValue", typeof(decimal));
    
            var i_LabResultTextIDParameter = i_LabResultTextID.HasValue ?
                new ObjectParameter("i_LabResultTextID", i_LabResultTextID) :
                new ObjectParameter("i_LabResultTextID", typeof(int));
    
            var i_EthnicityIDParameter = i_EthnicityID.HasValue ?
                new ObjectParameter("i_EthnicityID", i_EthnicityID) :
                new ObjectParameter("i_EthnicityID", typeof(int));
    
            var i_RaceIDParameter = i_RaceID.HasValue ?
                new ObjectParameter("i_RaceID", i_RaceID) :
                new ObjectParameter("i_RaceID", typeof(int));
    
            var i_SpokenLanguageIDParameter = i_SpokenLanguageID.HasValue ?
                new ObjectParameter("i_SpokenLanguageID", i_SpokenLanguageID) :
                new ObjectParameter("i_SpokenLanguageID", typeof(int));
    
            var i_WrittenLanguageIDParameter = i_WrittenLanguageID.HasValue ?
                new ObjectParameter("i_WrittenLanguageID", i_WrittenLanguageID) :
                new ObjectParameter("i_WrittenLanguageID", typeof(int));
    
            var d_DateOfDeathParameter = d_DateOfDeath.HasValue ?
                new ObjectParameter("d_DateOfDeath", d_DateOfDeath) :
                new ObjectParameter("d_DateOfDeath", typeof(System.DateTime));
    
            var vc_ServiceProviderNPIParameter = vc_ServiceProviderNPI != null ?
                new ObjectParameter("vc_ServiceProviderNPI", vc_ServiceProviderNPI) :
                new ObjectParameter("vc_ServiceProviderNPI", typeof(string));
    
            var vc_ServiceProviderMILicenceNoParameter = vc_ServiceProviderMILicenceNo != null ?
                new ObjectParameter("vc_ServiceProviderMILicenceNo", vc_ServiceProviderMILicenceNo) :
                new ObjectParameter("vc_ServiceProviderMILicenceNo", typeof(string));
    
            var vc_PCPNPIParameter = vc_PCPNPI != null ?
                new ObjectParameter("vc_PCPNPI", vc_PCPNPI) :
                new ObjectParameter("vc_PCPNPI", typeof(string));
    
            var vc_PCPMILicenceNoParameter = vc_PCPMILicenceNo != null ?
                new ObjectParameter("vc_PCPMILicenceNo", vc_PCPMILicenceNo) :
                new ObjectParameter("vc_PCPMILicenceNo", typeof(string));
    
            var i_NPOPatientSupplementalFormParameter = i_NPOPatientSupplementalForm.HasValue ?
                new ObjectParameter("i_NPOPatientSupplementalForm", i_NPOPatientSupplementalForm) :
                new ObjectParameter("i_NPOPatientSupplementalForm", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NPOPatientSupplementalForm_InsertUpdate", i_AppUserIdParameter, i_PatientIdParameter, d_DateOfServiceParameter, v_RecordTypeParameter, i_CodeTypeIDParameter, i_MeasureIDParameter, v_CodeValueParameter, v_ServiceCodeParameter, b_IsNumericResultTypeParameter, v_LabOperatorParameter, dc_LabResultValueParameter, i_LabResultTextIDParameter, i_EthnicityIDParameter, i_RaceIDParameter, i_SpokenLanguageIDParameter, i_WrittenLanguageIDParameter, d_DateOfDeathParameter, vc_ServiceProviderNPIParameter, vc_ServiceProviderMILicenceNoParameter, vc_PCPNPIParameter, vc_PCPMILicenceNoParameter, i_NPOPatientSupplementalFormParameter, o_NPOPatientSupplementalForm);
        }
    
        public virtual int usp_NPOUsers_Search(Nullable<int> i_AppUserId, Nullable<bool> b_IsPatient, Nullable<int> i_UserID, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, string v_UserLoginName, string v_LastName, string v_PreferedName, string v_City, string v_State, string v_ZipCode, string v_MemberNum, string v_UserStatusCode, string v_FirstName, string v_PhoneNumberPrimary, string v_EmailIdPrimary, string v_SSNNo, string vc_Gender, string i_OperatorValue1, Nullable<int> i_AgeFrom1, Nullable<int> i_AgeTo1, string i_OperatorValue2, Nullable<int> i_AgeFrom2, Nullable<int> i_AgeTo2, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsPatientParameter = b_IsPatient.HasValue ?
                new ObjectParameter("b_IsPatient", b_IsPatient) :
                new ObjectParameter("b_IsPatient", typeof(bool));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var v_UserLoginNameParameter = v_UserLoginName != null ?
                new ObjectParameter("v_UserLoginName", v_UserLoginName) :
                new ObjectParameter("v_UserLoginName", typeof(string));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var v_PreferedNameParameter = v_PreferedName != null ?
                new ObjectParameter("v_PreferedName", v_PreferedName) :
                new ObjectParameter("v_PreferedName", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateParameter = v_State != null ?
                new ObjectParameter("v_State", v_State) :
                new ObjectParameter("v_State", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_MemberNumParameter = v_MemberNum != null ?
                new ObjectParameter("v_MemberNum", v_MemberNum) :
                new ObjectParameter("v_MemberNum", typeof(string));
    
            var v_UserStatusCodeParameter = v_UserStatusCode != null ?
                new ObjectParameter("v_UserStatusCode", v_UserStatusCode) :
                new ObjectParameter("v_UserStatusCode", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_PhoneNumberPrimaryParameter = v_PhoneNumberPrimary != null ?
                new ObjectParameter("v_PhoneNumberPrimary", v_PhoneNumberPrimary) :
                new ObjectParameter("v_PhoneNumberPrimary", typeof(string));
    
            var v_EmailIdPrimaryParameter = v_EmailIdPrimary != null ?
                new ObjectParameter("v_EmailIdPrimary", v_EmailIdPrimary) :
                new ObjectParameter("v_EmailIdPrimary", typeof(string));
    
            var v_SSNNoParameter = v_SSNNo != null ?
                new ObjectParameter("v_SSNNo", v_SSNNo) :
                new ObjectParameter("v_SSNNo", typeof(string));
    
            var vc_GenderParameter = vc_Gender != null ?
                new ObjectParameter("vc_Gender", vc_Gender) :
                new ObjectParameter("vc_Gender", typeof(string));
    
            var i_OperatorValue1Parameter = i_OperatorValue1 != null ?
                new ObjectParameter("i_OperatorValue1", i_OperatorValue1) :
                new ObjectParameter("i_OperatorValue1", typeof(string));
    
            var i_AgeFrom1Parameter = i_AgeFrom1.HasValue ?
                new ObjectParameter("i_AgeFrom1", i_AgeFrom1) :
                new ObjectParameter("i_AgeFrom1", typeof(int));
    
            var i_AgeTo1Parameter = i_AgeTo1.HasValue ?
                new ObjectParameter("i_AgeTo1", i_AgeTo1) :
                new ObjectParameter("i_AgeTo1", typeof(int));
    
            var i_OperatorValue2Parameter = i_OperatorValue2 != null ?
                new ObjectParameter("i_OperatorValue2", i_OperatorValue2) :
                new ObjectParameter("i_OperatorValue2", typeof(string));
    
            var i_AgeFrom2Parameter = i_AgeFrom2.HasValue ?
                new ObjectParameter("i_AgeFrom2", i_AgeFrom2) :
                new ObjectParameter("i_AgeFrom2", typeof(int));
    
            var i_AgeTo2Parameter = i_AgeTo2.HasValue ?
                new ObjectParameter("i_AgeTo2", i_AgeTo2) :
                new ObjectParameter("i_AgeTo2", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NPOUsers_Search", i_AppUserIdParameter, b_IsPatientParameter, i_UserIDParameter, i_StartIndexParameter, i_EndIndexParameter, v_UserLoginNameParameter, v_LastNameParameter, v_PreferedNameParameter, v_CityParameter, v_StateParameter, v_ZipCodeParameter, v_MemberNumParameter, v_UserStatusCodeParameter, v_FirstNameParameter, v_PhoneNumberPrimaryParameter, v_EmailIdPrimaryParameter, v_SSNNoParameter, vc_GenderParameter, i_OperatorValue1Parameter, i_AgeFrom1Parameter, i_AgeTo1Parameter, i_OperatorValue2Parameter, i_AgeFrom2Parameter, i_AgeTo2Parameter, v_SecurityRoleNameParameter);
        }
    
        public virtual ObjectResult<usp_Numerator_MeasureSelect_DD_Result> usp_Numerator_MeasureSelect_DD(Nullable<int> i_AppUserId, Nullable<int> i_MetricId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MetricIdParameter = i_MetricId.HasValue ?
                new ObjectParameter("i_MetricId", i_MetricId) :
                new ObjectParameter("i_MetricId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Numerator_MeasureSelect_DD_Result>("usp_Numerator_MeasureSelect_DD", i_AppUserIdParameter, i_MetricIdParameter);
        }
    
        public virtual ObjectResult<usp_Numerator_Select_DD_Result> usp_Numerator_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_NumeratorID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_NumeratorIDParameter = i_NumeratorID.HasValue ?
                new ObjectParameter("i_NumeratorID", i_NumeratorID) :
                new ObjectParameter("i_NumeratorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Numerator_Select_DD_Result>("usp_Numerator_Select_DD", i_AppUserIdParameter, i_NumeratorIDParameter);
        }
    
        public virtual ObjectResult<usp_NumeratorDefinition_Search_Result> usp_NumeratorDefinition_Search(Nullable<int> i_AppUserId, Nullable<int> i_NumeratorDefinitionID, string v_StatusCode, string vc_NumeratorDefinitionName, string vc_NumeratorDefinitionDescription, string v_ProductionStatus, Nullable<bool> b_DisplayStatus, string v_NumeratoryType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_NumeratorDefinitionIDParameter = i_NumeratorDefinitionID.HasValue ?
                new ObjectParameter("i_NumeratorDefinitionID", i_NumeratorDefinitionID) :
                new ObjectParameter("i_NumeratorDefinitionID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var vc_NumeratorDefinitionNameParameter = vc_NumeratorDefinitionName != null ?
                new ObjectParameter("vc_NumeratorDefinitionName", vc_NumeratorDefinitionName) :
                new ObjectParameter("vc_NumeratorDefinitionName", typeof(string));
    
            var vc_NumeratorDefinitionDescriptionParameter = vc_NumeratorDefinitionDescription != null ?
                new ObjectParameter("vc_NumeratorDefinitionDescription", vc_NumeratorDefinitionDescription) :
                new ObjectParameter("vc_NumeratorDefinitionDescription", typeof(string));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var b_DisplayStatusParameter = b_DisplayStatus.HasValue ?
                new ObjectParameter("b_DisplayStatus", b_DisplayStatus) :
                new ObjectParameter("b_DisplayStatus", typeof(bool));
    
            var v_NumeratoryTypeParameter = v_NumeratoryType != null ?
                new ObjectParameter("v_NumeratoryType", v_NumeratoryType) :
                new ObjectParameter("v_NumeratoryType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NumeratorDefinition_Search_Result>("usp_NumeratorDefinition_Search", i_AppUserIdParameter, i_NumeratorDefinitionIDParameter, v_StatusCodeParameter, vc_NumeratorDefinitionNameParameter, vc_NumeratorDefinitionDescriptionParameter, v_ProductionStatusParameter, b_DisplayStatusParameter, v_NumeratoryTypeParameter);
        }
    
        public virtual int usp_NumeratorFrequency_Select_DD(Nullable<int> i_AppUserId, string vc_Frequency)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NumeratorFrequency_Select_DD", i_AppUserIdParameter, vc_FrequencyParameter);
        }
    
        public virtual int usp_ObstetricalConditions_Insert(Nullable<int> i_AppUserId, string v_ObstetricalName, string v_Comments, string v_StatusCode, ObjectParameter o_ObstetricalConditionsID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ObstetricalNameParameter = v_ObstetricalName != null ?
                new ObjectParameter("v_ObstetricalName", v_ObstetricalName) :
                new ObjectParameter("v_ObstetricalName", typeof(string));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ObstetricalConditions_Insert", i_AppUserIdParameter, v_ObstetricalNameParameter, v_CommentsParameter, v_StatusCodeParameter, o_ObstetricalConditionsID);
        }
    
        public virtual ObjectResult<usp_ObstetricalConditions_Select_Result> usp_ObstetricalConditions_Select(Nullable<int> i_AppUserId, Nullable<int> i_ObstetricalConditionsID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ObstetricalConditionsIDParameter = i_ObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_ObstetricalConditionsID", i_ObstetricalConditionsID) :
                new ObjectParameter("i_ObstetricalConditionsID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObstetricalConditions_Select_Result>("usp_ObstetricalConditions_Select", i_AppUserIdParameter, i_ObstetricalConditionsIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_ObstetricalConditions_Select_DD_Result> usp_ObstetricalConditions_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ObstetricalConditions_Select_DD_Result>("usp_ObstetricalConditions_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_ObstetricalConditions_Update(Nullable<int> i_AppUserId, Nullable<int> i_ObstetricalConditionsID, string v_ObstetricalName, string v_Comments, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ObstetricalConditionsIDParameter = i_ObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_ObstetricalConditionsID", i_ObstetricalConditionsID) :
                new ObjectParameter("i_ObstetricalConditionsID", typeof(int));
    
            var v_ObstetricalNameParameter = v_ObstetricalName != null ?
                new ObjectParameter("v_ObstetricalName", v_ObstetricalName) :
                new ObjectParameter("v_ObstetricalName", typeof(string));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ObstetricalConditions_Update", i_AppUserIdParameter, i_ObstetricalConditionsIDParameter, v_ObstetricalNameParameter, v_CommentsParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Operator_Select_Result> usp_Operator_Select(Nullable<int> i_AppUserId, Nullable<int> i_OperatorId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OperatorIdParameter = i_OperatorId.HasValue ?
                new ObjectParameter("i_OperatorId", i_OperatorId) :
                new ObjectParameter("i_OperatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Operator_Select_Result>("usp_Operator_Select", i_AppUserIdParameter, i_OperatorIdParameter);
        }
    
        public virtual int usp_Organization_CheckMappings(Nullable<int> i_AppUserID, Nullable<int> i_OrganizationWiseTypeID)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_OrganizationWiseTypeIDParameter = i_OrganizationWiseTypeID.HasValue ?
                new ObjectParameter("i_OrganizationWiseTypeID", i_OrganizationWiseTypeID) :
                new ObjectParameter("i_OrganizationWiseTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Organization_CheckMappings", i_AppUserIDParameter, i_OrganizationWiseTypeIDParameter);
        }
    
        public virtual ObjectResult<usp_Organization_Facility_Select_Result> usp_Organization_Facility_Select(Nullable<int> i_AppUserID)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Organization_Facility_Select_Result>("usp_Organization_Facility_Select", i_AppUserIDParameter);
        }
    
        public virtual int usp_Organization_Select(Nullable<int> i_AppUserID, Nullable<int> i_OrganizationID)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_OrganizationIDParameter = i_OrganizationID.HasValue ?
                new ObjectParameter("i_OrganizationID", i_OrganizationID) :
                new ObjectParameter("i_OrganizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Organization_Select", i_AppUserIDParameter, i_OrganizationIDParameter);
        }
    
        public virtual int usp_Organization_Select_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsClinic)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsClinicParameter = b_IsClinic.HasValue ?
                new ObjectParameter("b_IsClinic", b_IsClinic) :
                new ObjectParameter("b_IsClinic", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Organization_Select_DD", i_AppUserIdParameter, b_IsClinicParameter);
        }
    
        public virtual int usp_OrganizationContacts_Delete(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationContactsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationContactsIdParameter = i_OrganizationContactsId.HasValue ?
                new ObjectParameter("i_OrganizationContactsId", i_OrganizationContactsId) :
                new ObjectParameter("i_OrganizationContactsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContacts_Delete", i_AppUserIdParameter, i_OrganizationContactsIdParameter);
        }
    
        public virtual int usp_OrganizationContacts_Insert(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationId, Nullable<int> i_ContactTypeId, string vc_FirstName, string vc_MiddleName, string vc_LastName, string vc_EmailID, string vc_Phone, string vc_PhoneExt, string vc_StatusCode, ObjectParameter o_OrganizationContactsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationIdParameter = i_OrganizationId.HasValue ?
                new ObjectParameter("i_OrganizationId", i_OrganizationId) :
                new ObjectParameter("i_OrganizationId", typeof(int));
    
            var i_ContactTypeIdParameter = i_ContactTypeId.HasValue ?
                new ObjectParameter("i_ContactTypeId", i_ContactTypeId) :
                new ObjectParameter("i_ContactTypeId", typeof(int));
    
            var vc_FirstNameParameter = vc_FirstName != null ?
                new ObjectParameter("vc_FirstName", vc_FirstName) :
                new ObjectParameter("vc_FirstName", typeof(string));
    
            var vc_MiddleNameParameter = vc_MiddleName != null ?
                new ObjectParameter("vc_MiddleName", vc_MiddleName) :
                new ObjectParameter("vc_MiddleName", typeof(string));
    
            var vc_LastNameParameter = vc_LastName != null ?
                new ObjectParameter("vc_LastName", vc_LastName) :
                new ObjectParameter("vc_LastName", typeof(string));
    
            var vc_EmailIDParameter = vc_EmailID != null ?
                new ObjectParameter("vc_EmailID", vc_EmailID) :
                new ObjectParameter("vc_EmailID", typeof(string));
    
            var vc_PhoneParameter = vc_Phone != null ?
                new ObjectParameter("vc_Phone", vc_Phone) :
                new ObjectParameter("vc_Phone", typeof(string));
    
            var vc_PhoneExtParameter = vc_PhoneExt != null ?
                new ObjectParameter("vc_PhoneExt", vc_PhoneExt) :
                new ObjectParameter("vc_PhoneExt", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContacts_Insert", i_AppUserIdParameter, i_OrganizationIdParameter, i_ContactTypeIdParameter, vc_FirstNameParameter, vc_MiddleNameParameter, vc_LastNameParameter, vc_EmailIDParameter, vc_PhoneParameter, vc_PhoneExtParameter, vc_StatusCodeParameter, o_OrganizationContactsId);
        }
    
        public virtual int usp_OrganizationContacts_Update(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationId, Nullable<int> i_ContactTypeId, string vc_FirstName, string vc_MiddleName, string vc_LastName, string vc_EmailID, string vc_Phone, string vc_PhoneExt, string vc_StatusCode, Nullable<int> i_OrganizationContactsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationIdParameter = i_OrganizationId.HasValue ?
                new ObjectParameter("i_OrganizationId", i_OrganizationId) :
                new ObjectParameter("i_OrganizationId", typeof(int));
    
            var i_ContactTypeIdParameter = i_ContactTypeId.HasValue ?
                new ObjectParameter("i_ContactTypeId", i_ContactTypeId) :
                new ObjectParameter("i_ContactTypeId", typeof(int));
    
            var vc_FirstNameParameter = vc_FirstName != null ?
                new ObjectParameter("vc_FirstName", vc_FirstName) :
                new ObjectParameter("vc_FirstName", typeof(string));
    
            var vc_MiddleNameParameter = vc_MiddleName != null ?
                new ObjectParameter("vc_MiddleName", vc_MiddleName) :
                new ObjectParameter("vc_MiddleName", typeof(string));
    
            var vc_LastNameParameter = vc_LastName != null ?
                new ObjectParameter("vc_LastName", vc_LastName) :
                new ObjectParameter("vc_LastName", typeof(string));
    
            var vc_EmailIDParameter = vc_EmailID != null ?
                new ObjectParameter("vc_EmailID", vc_EmailID) :
                new ObjectParameter("vc_EmailID", typeof(string));
    
            var vc_PhoneParameter = vc_Phone != null ?
                new ObjectParameter("vc_Phone", vc_Phone) :
                new ObjectParameter("vc_Phone", typeof(string));
    
            var vc_PhoneExtParameter = vc_PhoneExt != null ?
                new ObjectParameter("vc_PhoneExt", vc_PhoneExt) :
                new ObjectParameter("vc_PhoneExt", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_OrganizationContactsIdParameter = i_OrganizationContactsId.HasValue ?
                new ObjectParameter("i_OrganizationContactsId", i_OrganizationContactsId) :
                new ObjectParameter("i_OrganizationContactsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContacts_Update", i_AppUserIdParameter, i_OrganizationIdParameter, i_ContactTypeIdParameter, vc_FirstNameParameter, vc_MiddleNameParameter, vc_LastNameParameter, vc_EmailIDParameter, vc_PhoneParameter, vc_PhoneExtParameter, vc_StatusCodeParameter, i_OrganizationContactsIdParameter);
        }
    
        public virtual int usp_OrganizationContactsType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContactsType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_OrganizationContactsTypes_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ContactTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ContactTypeIdParameter = i_ContactTypeId.HasValue ?
                new ObjectParameter("i_ContactTypeId", i_ContactTypeId) :
                new ObjectParameter("i_ContactTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContactsTypes_Delete", i_AppUserIdParameter, i_ContactTypeIdParameter);
        }
    
        public virtual int usp_OrganizationContactsTypes_Insert(Nullable<int> i_AppUserId, string v_Name, string v_StatusCode, ObjectParameter o_ContactTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContactsTypes_Insert", i_AppUserIdParameter, v_NameParameter, v_StatusCodeParameter, o_ContactTypeId);
        }
    
        public virtual int usp_OrganizationContactsTypes_Select(Nullable<int> i_AppUserId, Nullable<int> i_ContactTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ContactTypeIdParameter = i_ContactTypeId.HasValue ?
                new ObjectParameter("i_ContactTypeId", i_ContactTypeId) :
                new ObjectParameter("i_ContactTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContactsTypes_Select", i_AppUserIdParameter, i_ContactTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationContactsTypes_Update(Nullable<int> i_AppUserId, Nullable<int> i_ContactTypeId, string v_Name, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ContactTypeIdParameter = i_ContactTypeId.HasValue ?
                new ObjectParameter("i_ContactTypeId", i_ContactTypeId) :
                new ObjectParameter("i_ContactTypeId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationContactsTypes_Update", i_AppUserIdParameter, i_ContactTypeIdParameter, v_NameParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationFacility_Select(Nullable<int> i_AppUserID, Nullable<int> i_OrganizationFacilityID)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_OrganizationFacilityIDParameter = i_OrganizationFacilityID.HasValue ?
                new ObjectParameter("i_OrganizationFacilityID", i_OrganizationFacilityID) :
                new ObjectParameter("i_OrganizationFacilityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationFacility_Select", i_AppUserIDParameter, i_OrganizationFacilityIDParameter);
        }
    
        public virtual int usp_OrganizationStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_OrganizationTree_Select_Result> usp_OrganizationTree_Select(Nullable<int> i_AppUserID, string vc_StatusCode)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrganizationTree_Select_Result>("usp_OrganizationTree_Select", i_AppUserIDParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationType_Delete(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationTypeIdParameter = i_OrganizationTypeId.HasValue ?
                new ObjectParameter("i_OrganizationTypeId", i_OrganizationTypeId) :
                new ObjectParameter("i_OrganizationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationType_Delete", i_AppUserIdParameter, i_OrganizationTypeIdParameter);
        }
    
        public virtual int usp_OrganizationType_Insert(Nullable<int> i_AppUserId, string v_OrganizationType, string v_Description, string v_StatusCode, ObjectParameter o_OrganizationTypeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_OrganizationTypeParameter = v_OrganizationType != null ?
                new ObjectParameter("v_OrganizationType", v_OrganizationType) :
                new ObjectParameter("v_OrganizationType", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationType_Insert", i_AppUserIdParameter, v_OrganizationTypeParameter, v_DescriptionParameter, v_StatusCodeParameter, o_OrganizationTypeID);
        }
    
        public virtual int usp_OrganizationType_Select(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationTypeIdParameter = i_OrganizationTypeId.HasValue ?
                new ObjectParameter("i_OrganizationTypeId", i_OrganizationTypeId) :
                new ObjectParameter("i_OrganizationTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationType_Select", i_AppUserIdParameter, i_OrganizationTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationType_Update(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationTypeId, string v_OrganizationType, string v_Description, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationTypeIdParameter = i_OrganizationTypeId.HasValue ?
                new ObjectParameter("i_OrganizationTypeId", i_OrganizationTypeId) :
                new ObjectParameter("i_OrganizationTypeId", typeof(int));
    
            var v_OrganizationTypeParameter = v_OrganizationType != null ?
                new ObjectParameter("v_OrganizationType", v_OrganizationType) :
                new ObjectParameter("v_OrganizationType", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationType_Update", i_AppUserIdParameter, i_OrganizationTypeIdParameter, v_OrganizationTypeParameter, v_DescriptionParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationUser_Insert(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<bool> i_isPrimary, string vc_Comments, ObjectParameter o_OrganizationUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationIdParameter = i_OrganizationId.HasValue ?
                new ObjectParameter("i_OrganizationId", i_OrganizationId) :
                new ObjectParameter("i_OrganizationId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_isPrimaryParameter = i_isPrimary.HasValue ?
                new ObjectParameter("i_isPrimary", i_isPrimary) :
                new ObjectParameter("i_isPrimary", typeof(bool));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationUser_Insert", i_AppUserIdParameter, i_OrganizationIdParameter, i_UserIdParameter, vc_StatusCodeParameter, i_isPrimaryParameter, vc_CommentsParameter, o_OrganizationUserId);
        }
    
        public virtual int usp_OrganizationUser_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_OrganizationUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_OrganizationUserIdParameter = i_OrganizationUserId.HasValue ?
                new ObjectParameter("i_OrganizationUserId", i_OrganizationUserId) :
                new ObjectParameter("i_OrganizationUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationUser_Select", i_AppUserIdParameter, i_UserIdParameter, i_OrganizationUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_OrganizationUser_Update(Nullable<int> i_AppUserId, Nullable<int> i_OrganizationId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<bool> i_isPrimary, string vc_Comments, Nullable<int> i_OrganizationUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_OrganizationIdParameter = i_OrganizationId.HasValue ?
                new ObjectParameter("i_OrganizationId", i_OrganizationId) :
                new ObjectParameter("i_OrganizationId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_isPrimaryParameter = i_isPrimary.HasValue ?
                new ObjectParameter("i_isPrimary", i_isPrimary) :
                new ObjectParameter("i_isPrimary", typeof(bool));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_OrganizationUserIdParameter = i_OrganizationUserId.HasValue ?
                new ObjectParameter("i_OrganizationUserId", i_OrganizationUserId) :
                new ObjectParameter("i_OrganizationUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OrganizationUser_Update", i_AppUserIdParameter, i_OrganizationIdParameter, i_UserIdParameter, vc_StatusCodeParameter, i_isPrimaryParameter, vc_CommentsParameter, i_OrganizationUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PageAccessed_DD_Result> usp_PageAccessed_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PageAccessed_DD_Result>("usp_PageAccessed_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Patient_ProfileSelect_Result> usp_Patient_ProfileSelect(Nullable<int> i_AppUserId, Nullable<int> i_PatientID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIDParameter = i_PatientID.HasValue ?
                new ObjectParameter("i_PatientID", i_PatientID) :
                new ObjectParameter("i_PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Patient_ProfileSelect_Result>("usp_Patient_ProfileSelect", i_AppUserIdParameter, i_PatientIDParameter);
        }
    
        public virtual int usp_Patient_ProfileUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PatientID, string v_NamePrefix, string v_NameSuffix, string v_FirstName, string v_MiddleName, string v_LastName, string v_PreferredName, string v_SSN, Nullable<int> i_CountryOfBirthID, Nullable<int> i_MaritalStatusID, Nullable<int> i_BloodTypeID, Nullable<int> i_PCPInternalProviderID, Nullable<int> i_PreferedCommunicationTypeID, Nullable<byte> i_NoOfDependents, Nullable<int> i_EmploymentStatusID, Nullable<int> i_ProfessionalTypeID, Nullable<bool> b_IsDeceased, Nullable<System.DateTime> d_DeceasedDate, string v_MedicalRecordNumber, string v_Title, string v_Gender, Nullable<System.DateTime> dt_DateOfBirth, Nullable<int> i_RaceID, Nullable<int> i_EthnicityID, string v_PCPNPI, Nullable<int> i_CallTimePreferenceId, string v_PrimaryAddressContactName, Nullable<int> i_PrimaryAddressContactRelationshipToPatientID, Nullable<int> i_PrimaryAddressTypeID, string v_PrimaryAddressLine1, string v_PrimaryAddressLine2, string v_PrimaryAddressLine3, string v_PrimaryAddressCity, Nullable<int> i_PrimaryAddressStateCodeID, Nullable<int> i_PrimaryAddressCountyID, Nullable<int> i_PrimaryAddressCountryCodeID, string v_PrimaryAddressPostalCode, string v_PrimaryPhoneContactName, Nullable<int> i_PrimaryPhoneContactRelationshipToPatientID, Nullable<int> i_PrimaryPhoneTypeID, string v_PrimaryPhoneNumber, string v_PrimaryPhoneNumberExtension, string v_PrimaryEmailAddressContactName, Nullable<int> i_PrimaryEmailAddressContactRelationshipToPatientID, Nullable<int> i_PrimaryEmailAddressTypeID, string v_PrimaryEmailAddress, Nullable<bool> b_AcceptsFaxCommunications, Nullable<bool> b_AcceptsEmailCommunications, Nullable<bool> b_AcceptsSMSCommunications, Nullable<bool> b_AcceptsMassCommunications, Nullable<bool> b_AcceptsPreventativeCommunications, string v_SecondaryAddressContactName, Nullable<int> i_SecondaryAddressContactRelationshipToPatientID, Nullable<int> i_SecondaryAddressTypeID, string v_SecondaryAddressLine1, string v_SecondaryAddressLine2, string v_SecondaryAddressLine3, string v_SecondaryAddressCity, Nullable<int> i_SecondaryAddressStateCodeID, Nullable<int> i_SecondaryAddressCountyID, Nullable<int> i_SecondaryAddressCountryCodeID, string v_SecondaryAddressPostalCode, string v_SecondaryEmailAddressContactName, Nullable<int> i_SecondaryEmailAddressContactRelationshipToPatientID, Nullable<int> i_SecondaryEmailAddresTypeID, string v_SecondaryEmailAddress, string v_SecondaryPhoneContactName, Nullable<int> i_SecondaryPhoneContactRelationshipToPatient, Nullable<int> i_SecondaryPhoneTypeID, string v_SecondaryPhoneNumber, string v_SecondaryPhoneNumberExtension, string v_TertiaryPhoneContactName, Nullable<int> i_TertiaryPhoneContactRealtionToPatientID, Nullable<int> i_TertiaryPhoneTypeID, string v_TertiaryPhoneNumber, string v_TeritaryPhoneNumberExtension, string v_AccountStatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIDParameter = i_PatientID.HasValue ?
                new ObjectParameter("i_PatientID", i_PatientID) :
                new ObjectParameter("i_PatientID", typeof(int));
    
            var v_NamePrefixParameter = v_NamePrefix != null ?
                new ObjectParameter("v_NamePrefix", v_NamePrefix) :
                new ObjectParameter("v_NamePrefix", typeof(string));
    
            var v_NameSuffixParameter = v_NameSuffix != null ?
                new ObjectParameter("v_NameSuffix", v_NameSuffix) :
                new ObjectParameter("v_NameSuffix", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_MiddleNameParameter = v_MiddleName != null ?
                new ObjectParameter("v_MiddleName", v_MiddleName) :
                new ObjectParameter("v_MiddleName", typeof(string));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var v_PreferredNameParameter = v_PreferredName != null ?
                new ObjectParameter("v_PreferredName", v_PreferredName) :
                new ObjectParameter("v_PreferredName", typeof(string));
    
            var v_SSNParameter = v_SSN != null ?
                new ObjectParameter("v_SSN", v_SSN) :
                new ObjectParameter("v_SSN", typeof(string));
    
            var i_CountryOfBirthIDParameter = i_CountryOfBirthID.HasValue ?
                new ObjectParameter("i_CountryOfBirthID", i_CountryOfBirthID) :
                new ObjectParameter("i_CountryOfBirthID", typeof(int));
    
            var i_MaritalStatusIDParameter = i_MaritalStatusID.HasValue ?
                new ObjectParameter("i_MaritalStatusID", i_MaritalStatusID) :
                new ObjectParameter("i_MaritalStatusID", typeof(int));
    
            var i_BloodTypeIDParameter = i_BloodTypeID.HasValue ?
                new ObjectParameter("i_BloodTypeID", i_BloodTypeID) :
                new ObjectParameter("i_BloodTypeID", typeof(int));
    
            var i_PCPInternalProviderIDParameter = i_PCPInternalProviderID.HasValue ?
                new ObjectParameter("i_PCPInternalProviderID", i_PCPInternalProviderID) :
                new ObjectParameter("i_PCPInternalProviderID", typeof(int));
    
            var i_PreferedCommunicationTypeIDParameter = i_PreferedCommunicationTypeID.HasValue ?
                new ObjectParameter("i_PreferedCommunicationTypeID", i_PreferedCommunicationTypeID) :
                new ObjectParameter("i_PreferedCommunicationTypeID", typeof(int));
    
            var i_NoOfDependentsParameter = i_NoOfDependents.HasValue ?
                new ObjectParameter("i_NoOfDependents", i_NoOfDependents) :
                new ObjectParameter("i_NoOfDependents", typeof(byte));
    
            var i_EmploymentStatusIDParameter = i_EmploymentStatusID.HasValue ?
                new ObjectParameter("i_EmploymentStatusID", i_EmploymentStatusID) :
                new ObjectParameter("i_EmploymentStatusID", typeof(int));
    
            var i_ProfessionalTypeIDParameter = i_ProfessionalTypeID.HasValue ?
                new ObjectParameter("i_ProfessionalTypeID", i_ProfessionalTypeID) :
                new ObjectParameter("i_ProfessionalTypeID", typeof(int));
    
            var b_IsDeceasedParameter = b_IsDeceased.HasValue ?
                new ObjectParameter("b_IsDeceased", b_IsDeceased) :
                new ObjectParameter("b_IsDeceased", typeof(bool));
    
            var d_DeceasedDateParameter = d_DeceasedDate.HasValue ?
                new ObjectParameter("d_DeceasedDate", d_DeceasedDate) :
                new ObjectParameter("d_DeceasedDate", typeof(System.DateTime));
    
            var v_MedicalRecordNumberParameter = v_MedicalRecordNumber != null ?
                new ObjectParameter("v_MedicalRecordNumber", v_MedicalRecordNumber) :
                new ObjectParameter("v_MedicalRecordNumber", typeof(string));
    
            var v_TitleParameter = v_Title != null ?
                new ObjectParameter("v_Title", v_Title) :
                new ObjectParameter("v_Title", typeof(string));
    
            var v_GenderParameter = v_Gender != null ?
                new ObjectParameter("v_Gender", v_Gender) :
                new ObjectParameter("v_Gender", typeof(string));
    
            var dt_DateOfBirthParameter = dt_DateOfBirth.HasValue ?
                new ObjectParameter("dt_DateOfBirth", dt_DateOfBirth) :
                new ObjectParameter("dt_DateOfBirth", typeof(System.DateTime));
    
            var i_RaceIDParameter = i_RaceID.HasValue ?
                new ObjectParameter("i_RaceID", i_RaceID) :
                new ObjectParameter("i_RaceID", typeof(int));
    
            var i_EthnicityIDParameter = i_EthnicityID.HasValue ?
                new ObjectParameter("i_EthnicityID", i_EthnicityID) :
                new ObjectParameter("i_EthnicityID", typeof(int));
    
            var v_PCPNPIParameter = v_PCPNPI != null ?
                new ObjectParameter("v_PCPNPI", v_PCPNPI) :
                new ObjectParameter("v_PCPNPI", typeof(string));
    
            var i_CallTimePreferenceIdParameter = i_CallTimePreferenceId.HasValue ?
                new ObjectParameter("i_CallTimePreferenceId", i_CallTimePreferenceId) :
                new ObjectParameter("i_CallTimePreferenceId", typeof(int));
    
            var v_PrimaryAddressContactNameParameter = v_PrimaryAddressContactName != null ?
                new ObjectParameter("v_PrimaryAddressContactName", v_PrimaryAddressContactName) :
                new ObjectParameter("v_PrimaryAddressContactName", typeof(string));
    
            var i_PrimaryAddressContactRelationshipToPatientIDParameter = i_PrimaryAddressContactRelationshipToPatientID.HasValue ?
                new ObjectParameter("i_PrimaryAddressContactRelationshipToPatientID", i_PrimaryAddressContactRelationshipToPatientID) :
                new ObjectParameter("i_PrimaryAddressContactRelationshipToPatientID", typeof(int));
    
            var i_PrimaryAddressTypeIDParameter = i_PrimaryAddressTypeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressTypeID", i_PrimaryAddressTypeID) :
                new ObjectParameter("i_PrimaryAddressTypeID", typeof(int));
    
            var v_PrimaryAddressLine1Parameter = v_PrimaryAddressLine1 != null ?
                new ObjectParameter("v_PrimaryAddressLine1", v_PrimaryAddressLine1) :
                new ObjectParameter("v_PrimaryAddressLine1", typeof(string));
    
            var v_PrimaryAddressLine2Parameter = v_PrimaryAddressLine2 != null ?
                new ObjectParameter("v_PrimaryAddressLine2", v_PrimaryAddressLine2) :
                new ObjectParameter("v_PrimaryAddressLine2", typeof(string));
    
            var v_PrimaryAddressLine3Parameter = v_PrimaryAddressLine3 != null ?
                new ObjectParameter("v_PrimaryAddressLine3", v_PrimaryAddressLine3) :
                new ObjectParameter("v_PrimaryAddressLine3", typeof(string));
    
            var v_PrimaryAddressCityParameter = v_PrimaryAddressCity != null ?
                new ObjectParameter("v_PrimaryAddressCity", v_PrimaryAddressCity) :
                new ObjectParameter("v_PrimaryAddressCity", typeof(string));
    
            var i_PrimaryAddressStateCodeIDParameter = i_PrimaryAddressStateCodeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressStateCodeID", i_PrimaryAddressStateCodeID) :
                new ObjectParameter("i_PrimaryAddressStateCodeID", typeof(int));
    
            var i_PrimaryAddressCountyIDParameter = i_PrimaryAddressCountyID.HasValue ?
                new ObjectParameter("i_PrimaryAddressCountyID", i_PrimaryAddressCountyID) :
                new ObjectParameter("i_PrimaryAddressCountyID", typeof(int));
    
            var i_PrimaryAddressCountryCodeIDParameter = i_PrimaryAddressCountryCodeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressCountryCodeID", i_PrimaryAddressCountryCodeID) :
                new ObjectParameter("i_PrimaryAddressCountryCodeID", typeof(int));
    
            var v_PrimaryAddressPostalCodeParameter = v_PrimaryAddressPostalCode != null ?
                new ObjectParameter("v_PrimaryAddressPostalCode", v_PrimaryAddressPostalCode) :
                new ObjectParameter("v_PrimaryAddressPostalCode", typeof(string));
    
            var v_PrimaryPhoneContactNameParameter = v_PrimaryPhoneContactName != null ?
                new ObjectParameter("v_PrimaryPhoneContactName", v_PrimaryPhoneContactName) :
                new ObjectParameter("v_PrimaryPhoneContactName", typeof(string));
    
            var i_PrimaryPhoneContactRelationshipToPatientIDParameter = i_PrimaryPhoneContactRelationshipToPatientID.HasValue ?
                new ObjectParameter("i_PrimaryPhoneContactRelationshipToPatientID", i_PrimaryPhoneContactRelationshipToPatientID) :
                new ObjectParameter("i_PrimaryPhoneContactRelationshipToPatientID", typeof(int));
    
            var i_PrimaryPhoneTypeIDParameter = i_PrimaryPhoneTypeID.HasValue ?
                new ObjectParameter("i_PrimaryPhoneTypeID", i_PrimaryPhoneTypeID) :
                new ObjectParameter("i_PrimaryPhoneTypeID", typeof(int));
    
            var v_PrimaryPhoneNumberParameter = v_PrimaryPhoneNumber != null ?
                new ObjectParameter("v_PrimaryPhoneNumber", v_PrimaryPhoneNumber) :
                new ObjectParameter("v_PrimaryPhoneNumber", typeof(string));
    
            var v_PrimaryPhoneNumberExtensionParameter = v_PrimaryPhoneNumberExtension != null ?
                new ObjectParameter("v_PrimaryPhoneNumberExtension", v_PrimaryPhoneNumberExtension) :
                new ObjectParameter("v_PrimaryPhoneNumberExtension", typeof(string));
    
            var v_PrimaryEmailAddressContactNameParameter = v_PrimaryEmailAddressContactName != null ?
                new ObjectParameter("v_PrimaryEmailAddressContactName", v_PrimaryEmailAddressContactName) :
                new ObjectParameter("v_PrimaryEmailAddressContactName", typeof(string));
    
            var i_PrimaryEmailAddressContactRelationshipToPatientIDParameter = i_PrimaryEmailAddressContactRelationshipToPatientID.HasValue ?
                new ObjectParameter("i_PrimaryEmailAddressContactRelationshipToPatientID", i_PrimaryEmailAddressContactRelationshipToPatientID) :
                new ObjectParameter("i_PrimaryEmailAddressContactRelationshipToPatientID", typeof(int));
    
            var i_PrimaryEmailAddressTypeIDParameter = i_PrimaryEmailAddressTypeID.HasValue ?
                new ObjectParameter("i_PrimaryEmailAddressTypeID", i_PrimaryEmailAddressTypeID) :
                new ObjectParameter("i_PrimaryEmailAddressTypeID", typeof(int));
    
            var v_PrimaryEmailAddressParameter = v_PrimaryEmailAddress != null ?
                new ObjectParameter("v_PrimaryEmailAddress", v_PrimaryEmailAddress) :
                new ObjectParameter("v_PrimaryEmailAddress", typeof(string));
    
            var b_AcceptsFaxCommunicationsParameter = b_AcceptsFaxCommunications.HasValue ?
                new ObjectParameter("b_AcceptsFaxCommunications", b_AcceptsFaxCommunications) :
                new ObjectParameter("b_AcceptsFaxCommunications", typeof(bool));
    
            var b_AcceptsEmailCommunicationsParameter = b_AcceptsEmailCommunications.HasValue ?
                new ObjectParameter("b_AcceptsEmailCommunications", b_AcceptsEmailCommunications) :
                new ObjectParameter("b_AcceptsEmailCommunications", typeof(bool));
    
            var b_AcceptsSMSCommunicationsParameter = b_AcceptsSMSCommunications.HasValue ?
                new ObjectParameter("b_AcceptsSMSCommunications", b_AcceptsSMSCommunications) :
                new ObjectParameter("b_AcceptsSMSCommunications", typeof(bool));
    
            var b_AcceptsMassCommunicationsParameter = b_AcceptsMassCommunications.HasValue ?
                new ObjectParameter("b_AcceptsMassCommunications", b_AcceptsMassCommunications) :
                new ObjectParameter("b_AcceptsMassCommunications", typeof(bool));
    
            var b_AcceptsPreventativeCommunicationsParameter = b_AcceptsPreventativeCommunications.HasValue ?
                new ObjectParameter("b_AcceptsPreventativeCommunications", b_AcceptsPreventativeCommunications) :
                new ObjectParameter("b_AcceptsPreventativeCommunications", typeof(bool));
    
            var v_SecondaryAddressContactNameParameter = v_SecondaryAddressContactName != null ?
                new ObjectParameter("v_SecondaryAddressContactName", v_SecondaryAddressContactName) :
                new ObjectParameter("v_SecondaryAddressContactName", typeof(string));
    
            var i_SecondaryAddressContactRelationshipToPatientIDParameter = i_SecondaryAddressContactRelationshipToPatientID.HasValue ?
                new ObjectParameter("i_SecondaryAddressContactRelationshipToPatientID", i_SecondaryAddressContactRelationshipToPatientID) :
                new ObjectParameter("i_SecondaryAddressContactRelationshipToPatientID", typeof(int));
    
            var i_SecondaryAddressTypeIDParameter = i_SecondaryAddressTypeID.HasValue ?
                new ObjectParameter("i_SecondaryAddressTypeID", i_SecondaryAddressTypeID) :
                new ObjectParameter("i_SecondaryAddressTypeID", typeof(int));
    
            var v_SecondaryAddressLine1Parameter = v_SecondaryAddressLine1 != null ?
                new ObjectParameter("v_SecondaryAddressLine1", v_SecondaryAddressLine1) :
                new ObjectParameter("v_SecondaryAddressLine1", typeof(string));
    
            var v_SecondaryAddressLine2Parameter = v_SecondaryAddressLine2 != null ?
                new ObjectParameter("v_SecondaryAddressLine2", v_SecondaryAddressLine2) :
                new ObjectParameter("v_SecondaryAddressLine2", typeof(string));
    
            var v_SecondaryAddressLine3Parameter = v_SecondaryAddressLine3 != null ?
                new ObjectParameter("v_SecondaryAddressLine3", v_SecondaryAddressLine3) :
                new ObjectParameter("v_SecondaryAddressLine3", typeof(string));
    
            var v_SecondaryAddressCityParameter = v_SecondaryAddressCity != null ?
                new ObjectParameter("v_SecondaryAddressCity", v_SecondaryAddressCity) :
                new ObjectParameter("v_SecondaryAddressCity", typeof(string));
    
            var i_SecondaryAddressStateCodeIDParameter = i_SecondaryAddressStateCodeID.HasValue ?
                new ObjectParameter("i_SecondaryAddressStateCodeID", i_SecondaryAddressStateCodeID) :
                new ObjectParameter("i_SecondaryAddressStateCodeID", typeof(int));
    
            var i_SecondaryAddressCountyIDParameter = i_SecondaryAddressCountyID.HasValue ?
                new ObjectParameter("i_SecondaryAddressCountyID", i_SecondaryAddressCountyID) :
                new ObjectParameter("i_SecondaryAddressCountyID", typeof(int));
    
            var i_SecondaryAddressCountryCodeIDParameter = i_SecondaryAddressCountryCodeID.HasValue ?
                new ObjectParameter("i_SecondaryAddressCountryCodeID", i_SecondaryAddressCountryCodeID) :
                new ObjectParameter("i_SecondaryAddressCountryCodeID", typeof(int));
    
            var v_SecondaryAddressPostalCodeParameter = v_SecondaryAddressPostalCode != null ?
                new ObjectParameter("v_SecondaryAddressPostalCode", v_SecondaryAddressPostalCode) :
                new ObjectParameter("v_SecondaryAddressPostalCode", typeof(string));
    
            var v_SecondaryEmailAddressContactNameParameter = v_SecondaryEmailAddressContactName != null ?
                new ObjectParameter("v_SecondaryEmailAddressContactName", v_SecondaryEmailAddressContactName) :
                new ObjectParameter("v_SecondaryEmailAddressContactName", typeof(string));
    
            var i_SecondaryEmailAddressContactRelationshipToPatientIDParameter = i_SecondaryEmailAddressContactRelationshipToPatientID.HasValue ?
                new ObjectParameter("i_SecondaryEmailAddressContactRelationshipToPatientID", i_SecondaryEmailAddressContactRelationshipToPatientID) :
                new ObjectParameter("i_SecondaryEmailAddressContactRelationshipToPatientID", typeof(int));
    
            var i_SecondaryEmailAddresTypeIDParameter = i_SecondaryEmailAddresTypeID.HasValue ?
                new ObjectParameter("i_SecondaryEmailAddresTypeID", i_SecondaryEmailAddresTypeID) :
                new ObjectParameter("i_SecondaryEmailAddresTypeID", typeof(int));
    
            var v_SecondaryEmailAddressParameter = v_SecondaryEmailAddress != null ?
                new ObjectParameter("v_SecondaryEmailAddress", v_SecondaryEmailAddress) :
                new ObjectParameter("v_SecondaryEmailAddress", typeof(string));
    
            var v_SecondaryPhoneContactNameParameter = v_SecondaryPhoneContactName != null ?
                new ObjectParameter("v_SecondaryPhoneContactName", v_SecondaryPhoneContactName) :
                new ObjectParameter("v_SecondaryPhoneContactName", typeof(string));
    
            var i_SecondaryPhoneContactRelationshipToPatientParameter = i_SecondaryPhoneContactRelationshipToPatient.HasValue ?
                new ObjectParameter("i_SecondaryPhoneContactRelationshipToPatient", i_SecondaryPhoneContactRelationshipToPatient) :
                new ObjectParameter("i_SecondaryPhoneContactRelationshipToPatient", typeof(int));
    
            var i_SecondaryPhoneTypeIDParameter = i_SecondaryPhoneTypeID.HasValue ?
                new ObjectParameter("i_SecondaryPhoneTypeID", i_SecondaryPhoneTypeID) :
                new ObjectParameter("i_SecondaryPhoneTypeID", typeof(int));
    
            var v_SecondaryPhoneNumberParameter = v_SecondaryPhoneNumber != null ?
                new ObjectParameter("v_SecondaryPhoneNumber", v_SecondaryPhoneNumber) :
                new ObjectParameter("v_SecondaryPhoneNumber", typeof(string));
    
            var v_SecondaryPhoneNumberExtensionParameter = v_SecondaryPhoneNumberExtension != null ?
                new ObjectParameter("v_SecondaryPhoneNumberExtension", v_SecondaryPhoneNumberExtension) :
                new ObjectParameter("v_SecondaryPhoneNumberExtension", typeof(string));
    
            var v_TertiaryPhoneContactNameParameter = v_TertiaryPhoneContactName != null ?
                new ObjectParameter("v_TertiaryPhoneContactName", v_TertiaryPhoneContactName) :
                new ObjectParameter("v_TertiaryPhoneContactName", typeof(string));
    
            var i_TertiaryPhoneContactRealtionToPatientIDParameter = i_TertiaryPhoneContactRealtionToPatientID.HasValue ?
                new ObjectParameter("i_TertiaryPhoneContactRealtionToPatientID", i_TertiaryPhoneContactRealtionToPatientID) :
                new ObjectParameter("i_TertiaryPhoneContactRealtionToPatientID", typeof(int));
    
            var i_TertiaryPhoneTypeIDParameter = i_TertiaryPhoneTypeID.HasValue ?
                new ObjectParameter("i_TertiaryPhoneTypeID", i_TertiaryPhoneTypeID) :
                new ObjectParameter("i_TertiaryPhoneTypeID", typeof(int));
    
            var v_TertiaryPhoneNumberParameter = v_TertiaryPhoneNumber != null ?
                new ObjectParameter("v_TertiaryPhoneNumber", v_TertiaryPhoneNumber) :
                new ObjectParameter("v_TertiaryPhoneNumber", typeof(string));
    
            var v_TeritaryPhoneNumberExtensionParameter = v_TeritaryPhoneNumberExtension != null ?
                new ObjectParameter("v_TeritaryPhoneNumberExtension", v_TeritaryPhoneNumberExtension) :
                new ObjectParameter("v_TeritaryPhoneNumberExtension", typeof(string));
    
            var v_AccountStatusCodeParameter = v_AccountStatusCode != null ?
                new ObjectParameter("v_AccountStatusCode", v_AccountStatusCode) :
                new ObjectParameter("v_AccountStatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Patient_ProfileUpdate", i_AppUserIdParameter, i_PatientIDParameter, v_NamePrefixParameter, v_NameSuffixParameter, v_FirstNameParameter, v_MiddleNameParameter, v_LastNameParameter, v_PreferredNameParameter, v_SSNParameter, i_CountryOfBirthIDParameter, i_MaritalStatusIDParameter, i_BloodTypeIDParameter, i_PCPInternalProviderIDParameter, i_PreferedCommunicationTypeIDParameter, i_NoOfDependentsParameter, i_EmploymentStatusIDParameter, i_ProfessionalTypeIDParameter, b_IsDeceasedParameter, d_DeceasedDateParameter, v_MedicalRecordNumberParameter, v_TitleParameter, v_GenderParameter, dt_DateOfBirthParameter, i_RaceIDParameter, i_EthnicityIDParameter, v_PCPNPIParameter, i_CallTimePreferenceIdParameter, v_PrimaryAddressContactNameParameter, i_PrimaryAddressContactRelationshipToPatientIDParameter, i_PrimaryAddressTypeIDParameter, v_PrimaryAddressLine1Parameter, v_PrimaryAddressLine2Parameter, v_PrimaryAddressLine3Parameter, v_PrimaryAddressCityParameter, i_PrimaryAddressStateCodeIDParameter, i_PrimaryAddressCountyIDParameter, i_PrimaryAddressCountryCodeIDParameter, v_PrimaryAddressPostalCodeParameter, v_PrimaryPhoneContactNameParameter, i_PrimaryPhoneContactRelationshipToPatientIDParameter, i_PrimaryPhoneTypeIDParameter, v_PrimaryPhoneNumberParameter, v_PrimaryPhoneNumberExtensionParameter, v_PrimaryEmailAddressContactNameParameter, i_PrimaryEmailAddressContactRelationshipToPatientIDParameter, i_PrimaryEmailAddressTypeIDParameter, v_PrimaryEmailAddressParameter, b_AcceptsFaxCommunicationsParameter, b_AcceptsEmailCommunicationsParameter, b_AcceptsSMSCommunicationsParameter, b_AcceptsMassCommunicationsParameter, b_AcceptsPreventativeCommunicationsParameter, v_SecondaryAddressContactNameParameter, i_SecondaryAddressContactRelationshipToPatientIDParameter, i_SecondaryAddressTypeIDParameter, v_SecondaryAddressLine1Parameter, v_SecondaryAddressLine2Parameter, v_SecondaryAddressLine3Parameter, v_SecondaryAddressCityParameter, i_SecondaryAddressStateCodeIDParameter, i_SecondaryAddressCountyIDParameter, i_SecondaryAddressCountryCodeIDParameter, v_SecondaryAddressPostalCodeParameter, v_SecondaryEmailAddressContactNameParameter, i_SecondaryEmailAddressContactRelationshipToPatientIDParameter, i_SecondaryEmailAddresTypeIDParameter, v_SecondaryEmailAddressParameter, v_SecondaryPhoneContactNameParameter, i_SecondaryPhoneContactRelationshipToPatientParameter, i_SecondaryPhoneTypeIDParameter, v_SecondaryPhoneNumberParameter, v_SecondaryPhoneNumberExtensionParameter, v_TertiaryPhoneContactNameParameter, i_TertiaryPhoneContactRealtionToPatientIDParameter, i_TertiaryPhoneTypeIDParameter, v_TertiaryPhoneNumberParameter, v_TeritaryPhoneNumberExtensionParameter, v_AccountStatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Patient_VisitPlan_Result> usp_Patient_VisitPlan(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Patient_VisitPlan_Result>("usp_Patient_VisitPlan", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual ObjectResult<usp_PatientActivity_Select_Result> usp_PatientActivity_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientGoalId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientGoalIdParameter = i_PatientGoalId.HasValue ?
                new ObjectParameter("i_PatientGoalId", i_PatientGoalId) :
                new ObjectParameter("i_PatientGoalId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientActivity_Select_Result>("usp_PatientActivity_Select", i_AppUserIdParameter, i_PatientGoalIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PatientAudit_PatientSearch_Result> usp_PatientAudit_PatientSearch(Nullable<int> i_AppUserID, string vc_PatientName, string vc_MemberNum)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var vc_PatientNameParameter = vc_PatientName != null ?
                new ObjectParameter("vc_PatientName", vc_PatientName) :
                new ObjectParameter("vc_PatientName", typeof(string));
    
            var vc_MemberNumParameter = vc_MemberNum != null ?
                new ObjectParameter("vc_MemberNum", vc_MemberNum) :
                new ObjectParameter("vc_MemberNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientAudit_PatientSearch_Result>("usp_PatientAudit_PatientSearch", i_AppUserIDParameter, vc_PatientNameParameter, vc_MemberNumParameter);
        }
    
        public virtual ObjectResult<usp_PatientCarePlan_DD_Wrapper_Result> usp_PatientCarePlan_DD_Wrapper(Nullable<int> i_AppUserId, Nullable<int> i_ActivityId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ActivityIdParameter = i_ActivityId.HasValue ?
                new ObjectParameter("i_ActivityId", i_ActivityId) :
                new ObjectParameter("i_ActivityId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientCarePlan_DD_Wrapper_Result>("usp_PatientCarePlan_DD_Wrapper", i_AppUserIdParameter, i_ActivityIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PatientCarePlan_Select_Result> usp_PatientCarePlan_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIdParameter = i_PatientId.HasValue ?
                new ObjectParameter("i_PatientId", i_PatientId) :
                new ObjectParameter("i_PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientCarePlan_Select_Result>("usp_PatientCarePlan_Select", i_AppUserIdParameter, i_PatientIdParameter);
        }
    
        public virtual ObjectResult<usp_patientDashbmoard_PDFExcel_Result> usp_patientDashbmoard_PDFExcel(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_patientDashbmoard_PDFExcel_Result>("usp_patientDashbmoard_PDFExcel", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashBoard_CarePlan_Result> usp_PatientDashBoard_CarePlan(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashBoard_CarePlan_Result>("usp_PatientDashBoard_CarePlan", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashBoard_Documents_Result> usp_PatientDashBoard_Documents(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_UserDocumentId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_UserDocumentIdParameter = i_UserDocumentId.HasValue ?
                new ObjectParameter("i_UserDocumentId", i_UserDocumentId) :
                new ObjectParameter("i_UserDocumentId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashBoard_Documents_Result>("usp_PatientDashBoard_Documents", i_AppUserIdParameter, i_UserIdParameter, i_UserDocumentIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashBoard_Home_Result> usp_PatientDashBoard_Home(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashBoard_Home_Result>("usp_PatientDashBoard_Home", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashBoard_OutcomeMetric_Result> usp_PatientDashBoard_OutcomeMetric(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashBoard_OutcomeMetric_Result>("usp_PatientDashBoard_OutcomeMetric", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashBoard_PEM_DD_Result> usp_PatientDashBoard_PEM_DD(Nullable<int> i_AppUserId, string v_MimeType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_MimeTypeParameter = v_MimeType != null ?
                new ObjectParameter("v_MimeType", v_MimeType) :
                new ObjectParameter("v_MimeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashBoard_PEM_DD_Result>("usp_PatientDashBoard_PEM_DD", i_AppUserIdParameter, v_MimeTypeParameter);
        }
    
        public virtual ObjectResult<usp_PatientDashboard_UserAppointments_Wrapper_Result> usp_PatientDashboard_UserAppointments_Wrapper(Nullable<int> i_AppUserID)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientDashboard_UserAppointments_Wrapper_Result>("usp_PatientDashboard_UserAppointments_Wrapper", i_AppUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientEducationMaterial_Select_Result> usp_PatientEducationMaterial_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID, Nullable<int> i_PatientEducationMaterialID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var i_PatientEducationMaterialIDParameter = i_PatientEducationMaterialID.HasValue ?
                new ObjectParameter("i_PatientEducationMaterialID", i_PatientEducationMaterialID) :
                new ObjectParameter("i_PatientEducationMaterialID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientEducationMaterial_Select_Result>("usp_PatientEducationMaterial_Select", i_AppUserIdParameter, i_PatientUserIDParameter, i_PatientEducationMaterialIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PatientEmpStatus_Select_DD_Result> usp_PatientEmpStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientEmpStatus_Select_DD_Result>("usp_PatientEmpStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_PatientGoal_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string vc_DurationUnits, Nullable<short> i_DurationTimeline, string vc_Comments, string vc_StatusCode, Nullable<System.DateTime> dt_StartDate, Nullable<int> i_LifeStyleGoalId, Nullable<System.DateTime> dt_GoalCompletedDate, string v_GoalStatus, Nullable<int> i_ProgramId, ObjectParameter o_PatientGoalId, Nullable<bool> b_IsAdhoc, Nullable<int> i_AssignedCareProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_DurationUnitsParameter = vc_DurationUnits != null ?
                new ObjectParameter("vc_DurationUnits", vc_DurationUnits) :
                new ObjectParameter("vc_DurationUnits", typeof(string));
    
            var i_DurationTimelineParameter = i_DurationTimeline.HasValue ?
                new ObjectParameter("i_DurationTimeline", i_DurationTimeline) :
                new ObjectParameter("i_DurationTimeline", typeof(short));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_StartDateParameter = dt_StartDate.HasValue ?
                new ObjectParameter("dt_StartDate", dt_StartDate) :
                new ObjectParameter("dt_StartDate", typeof(System.DateTime));
    
            var i_LifeStyleGoalIdParameter = i_LifeStyleGoalId.HasValue ?
                new ObjectParameter("i_LifeStyleGoalId", i_LifeStyleGoalId) :
                new ObjectParameter("i_LifeStyleGoalId", typeof(int));
    
            var dt_GoalCompletedDateParameter = dt_GoalCompletedDate.HasValue ?
                new ObjectParameter("dt_GoalCompletedDate", dt_GoalCompletedDate) :
                new ObjectParameter("dt_GoalCompletedDate", typeof(System.DateTime));
    
            var v_GoalStatusParameter = v_GoalStatus != null ?
                new ObjectParameter("v_GoalStatus", v_GoalStatus) :
                new ObjectParameter("v_GoalStatus", typeof(string));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_AssignedCareProviderIdParameter = i_AssignedCareProviderId.HasValue ?
                new ObjectParameter("i_AssignedCareProviderId", i_AssignedCareProviderId) :
                new ObjectParameter("i_AssignedCareProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PatientGoal_Insert", i_AppUserIdParameter, i_UserIdParameter, vc_DurationUnitsParameter, i_DurationTimelineParameter, vc_CommentsParameter, vc_StatusCodeParameter, dt_StartDateParameter, i_LifeStyleGoalIdParameter, dt_GoalCompletedDateParameter, v_GoalStatusParameter, i_ProgramIdParameter, o_PatientGoalId, b_IsAdhocParameter, i_AssignedCareProviderIdParameter);
        }
    
        public virtual ObjectResult<usp_PatientGoal_Select_Result> usp_PatientGoal_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientGoalProgressLogId, Nullable<int> i_PatientGoalId, string v_StatusCode, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientGoalProgressLogIdParameter = i_PatientGoalProgressLogId.HasValue ?
                new ObjectParameter("i_PatientGoalProgressLogId", i_PatientGoalProgressLogId) :
                new ObjectParameter("i_PatientGoalProgressLogId", typeof(int));
    
            var i_PatientGoalIdParameter = i_PatientGoalId.HasValue ?
                new ObjectParameter("i_PatientGoalId", i_PatientGoalId) :
                new ObjectParameter("i_PatientGoalId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientGoal_Select_Result>("usp_PatientGoal_Select", i_AppUserIdParameter, i_PatientGoalProgressLogIdParameter, i_PatientGoalIdParameter, v_StatusCodeParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_PatientGoalProgressLog_Select_Result> usp_PatientGoalProgressLog_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientGoalProgressLogId, Nullable<int> i_PatientActivityId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientGoalProgressLogIdParameter = i_PatientGoalProgressLogId.HasValue ?
                new ObjectParameter("i_PatientGoalProgressLogId", i_PatientGoalProgressLogId) :
                new ObjectParameter("i_PatientGoalProgressLogId", typeof(int));
    
            var i_PatientActivityIdParameter = i_PatientActivityId.HasValue ?
                new ObjectParameter("i_PatientActivityId", i_PatientActivityId) :
                new ObjectParameter("i_PatientActivityId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientGoalProgressLog_Select_Result>("usp_PatientGoalProgressLog_Select", i_AppUserIdParameter, i_PatientGoalProgressLogIdParameter, i_PatientActivityIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PatientGoalProgressLog_Select_ByGoal_Result> usp_PatientGoalProgressLog_Select_ByGoal(Nullable<int> i_AppUserId, Nullable<int> i_PatientGoalId, Nullable<int> i_IsAdhoc)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientGoalIdParameter = i_PatientGoalId.HasValue ?
                new ObjectParameter("i_PatientGoalId", i_PatientGoalId) :
                new ObjectParameter("i_PatientGoalId", typeof(int));
    
            var i_IsAdhocParameter = i_IsAdhoc.HasValue ?
                new ObjectParameter("i_IsAdhoc", i_IsAdhoc) :
                new ObjectParameter("i_IsAdhoc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientGoalProgressLog_Select_ByGoal_Result>("usp_PatientGoalProgressLog_Select_ByGoal", i_AppUserIdParameter, i_PatientGoalIdParameter, i_IsAdhocParameter);
        }
    
        public virtual int usp_PatientGoalProgressLog_Update(Nullable<int> i_AppUserId, Nullable<int> i_PatientGoalProgressLogId, Nullable<int> i_PatientGoalId, Nullable<int> i_PatientActivityId, Nullable<short> i_ProgressPercentage, Nullable<System.DateTime> dt_FollowUpDate, Nullable<System.DateTime> dt_FollowUpCompleteDate, Nullable<System.DateTime> dt_AttemptedContactDate, Nullable<System.DateTime> dt_ActivityCompletedDate, string vc_Comments, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientGoalProgressLogIdParameter = i_PatientGoalProgressLogId.HasValue ?
                new ObjectParameter("i_PatientGoalProgressLogId", i_PatientGoalProgressLogId) :
                new ObjectParameter("i_PatientGoalProgressLogId", typeof(int));
    
            var i_PatientGoalIdParameter = i_PatientGoalId.HasValue ?
                new ObjectParameter("i_PatientGoalId", i_PatientGoalId) :
                new ObjectParameter("i_PatientGoalId", typeof(int));
    
            var i_PatientActivityIdParameter = i_PatientActivityId.HasValue ?
                new ObjectParameter("i_PatientActivityId", i_PatientActivityId) :
                new ObjectParameter("i_PatientActivityId", typeof(int));
    
            var i_ProgressPercentageParameter = i_ProgressPercentage.HasValue ?
                new ObjectParameter("i_ProgressPercentage", i_ProgressPercentage) :
                new ObjectParameter("i_ProgressPercentage", typeof(short));
    
            var dt_FollowUpDateParameter = dt_FollowUpDate.HasValue ?
                new ObjectParameter("dt_FollowUpDate", dt_FollowUpDate) :
                new ObjectParameter("dt_FollowUpDate", typeof(System.DateTime));
    
            var dt_FollowUpCompleteDateParameter = dt_FollowUpCompleteDate.HasValue ?
                new ObjectParameter("dt_FollowUpCompleteDate", dt_FollowUpCompleteDate) :
                new ObjectParameter("dt_FollowUpCompleteDate", typeof(System.DateTime));
    
            var dt_AttemptedContactDateParameter = dt_AttemptedContactDate.HasValue ?
                new ObjectParameter("dt_AttemptedContactDate", dt_AttemptedContactDate) :
                new ObjectParameter("dt_AttemptedContactDate", typeof(System.DateTime));
    
            var dt_ActivityCompletedDateParameter = dt_ActivityCompletedDate.HasValue ?
                new ObjectParameter("dt_ActivityCompletedDate", dt_ActivityCompletedDate) :
                new ObjectParameter("dt_ActivityCompletedDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PatientGoalProgressLog_Update", i_AppUserIdParameter, i_PatientGoalProgressLogIdParameter, i_PatientGoalIdParameter, i_PatientActivityIdParameter, i_ProgressPercentageParameter, dt_FollowUpDateParameter, dt_FollowUpCompleteDateParameter, dt_AttemptedContactDateParameter, dt_ActivityCompletedDateParameter, vc_CommentsParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_PatientMeasure_INSERT(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PatientMeasure_INSERT", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PatientMeasure_Update(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PatientMeasure_Update", i_AppUserIdParameter);
        }
    
        public virtual int usp_PatientProcedureGroupFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PatientId, Nullable<int> i_CodeGroupingID, Nullable<int> i_FrequencyNumber, string v_Frequency, Nullable<System.DateTime> d_EffectiveStartDate, Nullable<int> i_ManagedPopulationID, Nullable<int> i_AssignedCareProviderId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIdParameter = i_PatientId.HasValue ?
                new ObjectParameter("i_PatientId", i_PatientId) :
                new ObjectParameter("i_PatientId", typeof(int));
    
            var i_CodeGroupingIDParameter = i_CodeGroupingID.HasValue ?
                new ObjectParameter("i_CodeGroupingID", i_CodeGroupingID) :
                new ObjectParameter("i_CodeGroupingID", typeof(int));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var v_FrequencyParameter = v_Frequency != null ?
                new ObjectParameter("v_Frequency", v_Frequency) :
                new ObjectParameter("v_Frequency", typeof(string));
    
            var d_EffectiveStartDateParameter = d_EffectiveStartDate.HasValue ?
                new ObjectParameter("d_EffectiveStartDate", d_EffectiveStartDate) :
                new ObjectParameter("d_EffectiveStartDate", typeof(System.DateTime));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var i_AssignedCareProviderIdParameter = i_AssignedCareProviderId.HasValue ?
                new ObjectParameter("i_AssignedCareProviderId", i_AssignedCareProviderId) :
                new ObjectParameter("i_AssignedCareProviderId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PatientProcedureGroupFrequency_InsertUpdate", i_AppUserIdParameter, i_PatientIdParameter, i_CodeGroupingIDParameter, i_FrequencyNumberParameter, v_FrequencyParameter, d_EffectiveStartDateParameter, i_ManagedPopulationIDParameter, i_AssignedCareProviderIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Patients_Search(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, string v_LastName, string v_City, string v_State, string v_ZipCode, string v_MemberNum, string v_FirstName, string v_PhoneNumberPrimary, string v_EmailIdPrimary, string vc_Gender, string v_UserStatusCode, Nullable<int> i_ProviderID, Nullable<int> i_ChildProviderID, Nullable<int> i_HealthPlanID, Nullable<int> i_ProductID, string i_OperatorValue1, Nullable<int> i_AgeFrom1, Nullable<int> i_AgeTo1, string i_OperatorValue2, Nullable<int> i_AgeFrom2, Nullable<int> i_AgeTo2, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateParameter = v_State != null ?
                new ObjectParameter("v_State", v_State) :
                new ObjectParameter("v_State", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_MemberNumParameter = v_MemberNum != null ?
                new ObjectParameter("v_MemberNum", v_MemberNum) :
                new ObjectParameter("v_MemberNum", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_PhoneNumberPrimaryParameter = v_PhoneNumberPrimary != null ?
                new ObjectParameter("v_PhoneNumberPrimary", v_PhoneNumberPrimary) :
                new ObjectParameter("v_PhoneNumberPrimary", typeof(string));
    
            var v_EmailIdPrimaryParameter = v_EmailIdPrimary != null ?
                new ObjectParameter("v_EmailIdPrimary", v_EmailIdPrimary) :
                new ObjectParameter("v_EmailIdPrimary", typeof(string));
    
            var vc_GenderParameter = vc_Gender != null ?
                new ObjectParameter("vc_Gender", vc_Gender) :
                new ObjectParameter("vc_Gender", typeof(string));
    
            var v_UserStatusCodeParameter = v_UserStatusCode != null ?
                new ObjectParameter("v_UserStatusCode", v_UserStatusCode) :
                new ObjectParameter("v_UserStatusCode", typeof(string));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_ChildProviderIDParameter = i_ChildProviderID.HasValue ?
                new ObjectParameter("i_ChildProviderID", i_ChildProviderID) :
                new ObjectParameter("i_ChildProviderID", typeof(int));
    
            var i_HealthPlanIDParameter = i_HealthPlanID.HasValue ?
                new ObjectParameter("i_HealthPlanID", i_HealthPlanID) :
                new ObjectParameter("i_HealthPlanID", typeof(int));
    
            var i_ProductIDParameter = i_ProductID.HasValue ?
                new ObjectParameter("i_ProductID", i_ProductID) :
                new ObjectParameter("i_ProductID", typeof(int));
    
            var i_OperatorValue1Parameter = i_OperatorValue1 != null ?
                new ObjectParameter("i_OperatorValue1", i_OperatorValue1) :
                new ObjectParameter("i_OperatorValue1", typeof(string));
    
            var i_AgeFrom1Parameter = i_AgeFrom1.HasValue ?
                new ObjectParameter("i_AgeFrom1", i_AgeFrom1) :
                new ObjectParameter("i_AgeFrom1", typeof(int));
    
            var i_AgeTo1Parameter = i_AgeTo1.HasValue ?
                new ObjectParameter("i_AgeTo1", i_AgeTo1) :
                new ObjectParameter("i_AgeTo1", typeof(int));
    
            var i_OperatorValue2Parameter = i_OperatorValue2 != null ?
                new ObjectParameter("i_OperatorValue2", i_OperatorValue2) :
                new ObjectParameter("i_OperatorValue2", typeof(string));
    
            var i_AgeFrom2Parameter = i_AgeFrom2.HasValue ?
                new ObjectParameter("i_AgeFrom2", i_AgeFrom2) :
                new ObjectParameter("i_AgeFrom2", typeof(int));
    
            var i_AgeTo2Parameter = i_AgeTo2.HasValue ?
                new ObjectParameter("i_AgeTo2", i_AgeTo2) :
                new ObjectParameter("i_AgeTo2", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Patients_Search", i_AppUserIdParameter, i_UserIDParameter, i_StartIndexParameter, i_EndIndexParameter, v_LastNameParameter, v_CityParameter, v_StateParameter, v_ZipCodeParameter, v_MemberNumParameter, v_FirstNameParameter, v_PhoneNumberPrimaryParameter, v_EmailIdPrimaryParameter, vc_GenderParameter, v_UserStatusCodeParameter, i_ProviderIDParameter, i_ChildProviderIDParameter, i_HealthPlanIDParameter, i_ProductIDParameter, i_OperatorValue1Parameter, i_AgeFrom1Parameter, i_AgeTo1Parameter, i_OperatorValue2Parameter, i_AgeFrom2Parameter, i_AgeTo2Parameter, v_SecurityRoleNameParameter);
        }
    
        public virtual int usp_Patients_Search_Test(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, string v_LastName, string v_City, string v_State, string v_ZipCode, string v_MemberNum, string v_FirstName, string v_PhoneNumberPrimary, string v_EmailIdPrimary, string vc_Gender, string v_UserStatusCode, Nullable<int> i_ProviderID, Nullable<int> i_ChildProviderID, Nullable<int> i_HealthPlanID, Nullable<int> i_ProductID, string i_OperatorValue1, Nullable<int> i_AgeFrom1, Nullable<int> i_AgeTo1, string i_OperatorValue2, Nullable<int> i_AgeFrom2, Nullable<int> i_AgeTo2, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateParameter = v_State != null ?
                new ObjectParameter("v_State", v_State) :
                new ObjectParameter("v_State", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_MemberNumParameter = v_MemberNum != null ?
                new ObjectParameter("v_MemberNum", v_MemberNum) :
                new ObjectParameter("v_MemberNum", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_PhoneNumberPrimaryParameter = v_PhoneNumberPrimary != null ?
                new ObjectParameter("v_PhoneNumberPrimary", v_PhoneNumberPrimary) :
                new ObjectParameter("v_PhoneNumberPrimary", typeof(string));
    
            var v_EmailIdPrimaryParameter = v_EmailIdPrimary != null ?
                new ObjectParameter("v_EmailIdPrimary", v_EmailIdPrimary) :
                new ObjectParameter("v_EmailIdPrimary", typeof(string));
    
            var vc_GenderParameter = vc_Gender != null ?
                new ObjectParameter("vc_Gender", vc_Gender) :
                new ObjectParameter("vc_Gender", typeof(string));
    
            var v_UserStatusCodeParameter = v_UserStatusCode != null ?
                new ObjectParameter("v_UserStatusCode", v_UserStatusCode) :
                new ObjectParameter("v_UserStatusCode", typeof(string));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_ChildProviderIDParameter = i_ChildProviderID.HasValue ?
                new ObjectParameter("i_ChildProviderID", i_ChildProviderID) :
                new ObjectParameter("i_ChildProviderID", typeof(int));
    
            var i_HealthPlanIDParameter = i_HealthPlanID.HasValue ?
                new ObjectParameter("i_HealthPlanID", i_HealthPlanID) :
                new ObjectParameter("i_HealthPlanID", typeof(int));
    
            var i_ProductIDParameter = i_ProductID.HasValue ?
                new ObjectParameter("i_ProductID", i_ProductID) :
                new ObjectParameter("i_ProductID", typeof(int));
    
            var i_OperatorValue1Parameter = i_OperatorValue1 != null ?
                new ObjectParameter("i_OperatorValue1", i_OperatorValue1) :
                new ObjectParameter("i_OperatorValue1", typeof(string));
    
            var i_AgeFrom1Parameter = i_AgeFrom1.HasValue ?
                new ObjectParameter("i_AgeFrom1", i_AgeFrom1) :
                new ObjectParameter("i_AgeFrom1", typeof(int));
    
            var i_AgeTo1Parameter = i_AgeTo1.HasValue ?
                new ObjectParameter("i_AgeTo1", i_AgeTo1) :
                new ObjectParameter("i_AgeTo1", typeof(int));
    
            var i_OperatorValue2Parameter = i_OperatorValue2 != null ?
                new ObjectParameter("i_OperatorValue2", i_OperatorValue2) :
                new ObjectParameter("i_OperatorValue2", typeof(string));
    
            var i_AgeFrom2Parameter = i_AgeFrom2.HasValue ?
                new ObjectParameter("i_AgeFrom2", i_AgeFrom2) :
                new ObjectParameter("i_AgeFrom2", typeof(int));
    
            var i_AgeTo2Parameter = i_AgeTo2.HasValue ?
                new ObjectParameter("i_AgeTo2", i_AgeTo2) :
                new ObjectParameter("i_AgeTo2", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Patients_Search_Test", i_AppUserIdParameter, i_UserIDParameter, i_StartIndexParameter, i_EndIndexParameter, v_LastNameParameter, v_CityParameter, v_StateParameter, v_ZipCodeParameter, v_MemberNumParameter, v_FirstNameParameter, v_PhoneNumberPrimaryParameter, v_EmailIdPrimaryParameter, vc_GenderParameter, v_UserStatusCodeParameter, i_ProviderIDParameter, i_ChildProviderIDParameter, i_HealthPlanIDParameter, i_ProductIDParameter, i_OperatorValue1Parameter, i_AgeFrom1Parameter, i_AgeTo1Parameter, i_OperatorValue2Parameter, i_AgeFrom2Parameter, i_AgeTo2Parameter, v_SecurityRoleNameParameter);
        }
    
        public virtual ObjectResult<usp_Patients_Select_MergeLetters_Result> usp_Patients_Select_MergeLetters(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Patients_Select_MergeLetters_Result>("usp_Patients_Select_MergeLetters", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PatientsName_Search_Result> usp_PatientsName_Search(Nullable<int> i_AppUserId, string vc_PatientSearchText, Nullable<bool> b_IsMemberNum)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_PatientSearchTextParameter = vc_PatientSearchText != null ?
                new ObjectParameter("vc_PatientSearchText", vc_PatientSearchText) :
                new ObjectParameter("vc_PatientSearchText", typeof(string));
    
            var b_IsMemberNumParameter = b_IsMemberNum.HasValue ?
                new ObjectParameter("b_IsMemberNum", b_IsMemberNum) :
                new ObjectParameter("b_IsMemberNum", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientsName_Search_Result>("usp_PatientsName_Search", i_AppUserIdParameter, vc_PatientSearchTextParameter, b_IsMemberNumParameter);
        }
    
        public virtual int usp_PatientTimeStamp_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID, string v_SystemGUID, ObjectParameter o_DashboardTimestampId, string v_DashboardTimestampId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var v_SystemGUIDParameter = v_SystemGUID != null ?
                new ObjectParameter("v_SystemGUID", v_SystemGUID) :
                new ObjectParameter("v_SystemGUID", typeof(string));
    
            var v_DashboardTimestampIdParameter = v_DashboardTimestampId != null ?
                new ObjectParameter("v_DashboardTimestampId", v_DashboardTimestampId) :
                new ObjectParameter("v_DashboardTimestampId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PatientTimeStamp_InsertUpdate", i_AppUserIdParameter, i_PatientUserIDParameter, v_SystemGUIDParameter, o_DashboardTimestampId, v_DashboardTimestampIdParameter);
        }
    
        public virtual ObjectResult<usp_PatientUserSearch_Select_DD_Result> usp_PatientUserSearch_Select_DD(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PatientUserSearch_Select_DD_Result>("usp_PatientUserSearch_Select_DD", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PCP_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PCP_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PCPName_Select_DD_Result> usp_PCPName_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PCPName_Select_DD_Result>("usp_PCPName_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PD_Communications_wrapper_Result> usp_PD_Communications_wrapper(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PD_Communications_wrapper_Result>("usp_PD_Communications_wrapper", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PD_Medications_wrapper_Result> usp_PD_Medications_wrapper(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PD_Medications_wrapper_Result>("usp_PD_Medications_wrapper", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PDCodeGroups_Search_Result> usp_PDCodeGroups_Search(Nullable<int> i_AppUserId, Nullable<int> i_IsPrimary, Nullable<int> i_CodeTypeGroupersID, string vc_CodeGroupingName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_IsPrimaryParameter = i_IsPrimary.HasValue ?
                new ObjectParameter("i_IsPrimary", i_IsPrimary) :
                new ObjectParameter("i_IsPrimary", typeof(int));
    
            var i_CodeTypeGroupersIDParameter = i_CodeTypeGroupersID.HasValue ?
                new ObjectParameter("i_CodeTypeGroupersID", i_CodeTypeGroupersID) :
                new ObjectParameter("i_CodeTypeGroupersID", typeof(int));
    
            var vc_CodeGroupingNameParameter = vc_CodeGroupingName != null ?
                new ObjectParameter("vc_CodeGroupingName", vc_CodeGroupingName) :
                new ObjectParameter("vc_CodeGroupingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PDCodeGroups_Search_Result>("usp_PDCodeGroups_Search", i_AppUserIdParameter, i_IsPrimaryParameter, i_CodeTypeGroupersIDParameter, vc_CodeGroupingNameParameter);
        }
    
        public virtual ObjectResult<usp_PEMDocument_Select_DD_Result> usp_PEMDocument_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PEMDocument_Select_DD_Result>("usp_PEMDocument_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PhoneType_Select_DD_Result> usp_PhoneType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PhoneType_Select_DD_Result>("usp_PhoneType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Physician_DD_Result> usp_Physician_DD(Nullable<int> i_AppUserId, Nullable<int> i_ClinicId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ClinicIdParameter = i_ClinicId.HasValue ?
                new ObjectParameter("i_ClinicId", i_ClinicId) :
                new ObjectParameter("i_ClinicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Physician_DD_Result>("usp_Physician_DD", i_AppUserIdParameter, i_ClinicIdParameter);
        }
    
        public virtual int usp_PopulationDefinition_Insert(Nullable<int> i_AppUserId, string vc_PopulationDefinitionName, string vc_PopulationDefinitionDescription, Nullable<System.DateTime> dt_LastDateListGenerated, string vc_StatusCode, Nullable<bool> b_RefreshPatientListDaily, Nullable<int> i_StandardsId, Nullable<bool> b_NonModifiable, Nullable<bool> b_Private, Nullable<int> i_StandardOrganizationId, string v_ProductionStatus, string vc_DefinitionType, string vc_NumeratorType, Nullable<int> i_ConditionId, ObjectParameter o_PopulationDefinitionID, Nullable<bool> i_IsDisplayInHomePage)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_PopulationDefinitionNameParameter = vc_PopulationDefinitionName != null ?
                new ObjectParameter("vc_PopulationDefinitionName", vc_PopulationDefinitionName) :
                new ObjectParameter("vc_PopulationDefinitionName", typeof(string));
    
            var vc_PopulationDefinitionDescriptionParameter = vc_PopulationDefinitionDescription != null ?
                new ObjectParameter("vc_PopulationDefinitionDescription", vc_PopulationDefinitionDescription) :
                new ObjectParameter("vc_PopulationDefinitionDescription", typeof(string));
    
            var dt_LastDateListGeneratedParameter = dt_LastDateListGenerated.HasValue ?
                new ObjectParameter("dt_LastDateListGenerated", dt_LastDateListGenerated) :
                new ObjectParameter("dt_LastDateListGenerated", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var b_RefreshPatientListDailyParameter = b_RefreshPatientListDaily.HasValue ?
                new ObjectParameter("b_RefreshPatientListDaily", b_RefreshPatientListDaily) :
                new ObjectParameter("b_RefreshPatientListDaily", typeof(bool));
    
            var i_StandardsIdParameter = i_StandardsId.HasValue ?
                new ObjectParameter("i_StandardsId", i_StandardsId) :
                new ObjectParameter("i_StandardsId", typeof(int));
    
            var b_NonModifiableParameter = b_NonModifiable.HasValue ?
                new ObjectParameter("b_NonModifiable", b_NonModifiable) :
                new ObjectParameter("b_NonModifiable", typeof(bool));
    
            var b_PrivateParameter = b_Private.HasValue ?
                new ObjectParameter("b_Private", b_Private) :
                new ObjectParameter("b_Private", typeof(bool));
    
            var i_StandardOrganizationIdParameter = i_StandardOrganizationId.HasValue ?
                new ObjectParameter("i_StandardOrganizationId", i_StandardOrganizationId) :
                new ObjectParameter("i_StandardOrganizationId", typeof(int));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var vc_DefinitionTypeParameter = vc_DefinitionType != null ?
                new ObjectParameter("vc_DefinitionType", vc_DefinitionType) :
                new ObjectParameter("vc_DefinitionType", typeof(string));
    
            var vc_NumeratorTypeParameter = vc_NumeratorType != null ?
                new ObjectParameter("vc_NumeratorType", vc_NumeratorType) :
                new ObjectParameter("vc_NumeratorType", typeof(string));
    
            var i_ConditionIdParameter = i_ConditionId.HasValue ?
                new ObjectParameter("i_ConditionId", i_ConditionId) :
                new ObjectParameter("i_ConditionId", typeof(int));
    
            var i_IsDisplayInHomePageParameter = i_IsDisplayInHomePage.HasValue ?
                new ObjectParameter("i_IsDisplayInHomePage", i_IsDisplayInHomePage) :
                new ObjectParameter("i_IsDisplayInHomePage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinition_Insert", i_AppUserIdParameter, vc_PopulationDefinitionNameParameter, vc_PopulationDefinitionDescriptionParameter, dt_LastDateListGeneratedParameter, vc_StatusCodeParameter, b_RefreshPatientListDailyParameter, i_StandardsIdParameter, b_NonModifiableParameter, b_PrivateParameter, i_StandardOrganizationIdParameter, v_ProductionStatusParameter, vc_DefinitionTypeParameter, vc_NumeratorTypeParameter, i_ConditionIdParameter, o_PopulationDefinitionID, i_IsDisplayInHomePageParameter);
        }
    
        public virtual int usp_PopulationDefinition_SaveAsVersion(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinition_SaveAsVersion", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinition_Search_Result> usp_PopulationDefinition_Search(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string v_StatusCode, string vc_PopulationDefinitionName, string vc_PopulationDefinitionDescription, Nullable<bool> b_NonModifiable, Nullable<int> i_StandardOrganizationId, Nullable<bool> b_Private, Nullable<int> i_StandardsId, string v_ProductionStatus, string v_DefinitionType, Nullable<int> i_ConditionId, Nullable<bool> b_RefreshPatientListDaily)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var vc_PopulationDefinitionNameParameter = vc_PopulationDefinitionName != null ?
                new ObjectParameter("vc_PopulationDefinitionName", vc_PopulationDefinitionName) :
                new ObjectParameter("vc_PopulationDefinitionName", typeof(string));
    
            var vc_PopulationDefinitionDescriptionParameter = vc_PopulationDefinitionDescription != null ?
                new ObjectParameter("vc_PopulationDefinitionDescription", vc_PopulationDefinitionDescription) :
                new ObjectParameter("vc_PopulationDefinitionDescription", typeof(string));
    
            var b_NonModifiableParameter = b_NonModifiable.HasValue ?
                new ObjectParameter("b_NonModifiable", b_NonModifiable) :
                new ObjectParameter("b_NonModifiable", typeof(bool));
    
            var i_StandardOrganizationIdParameter = i_StandardOrganizationId.HasValue ?
                new ObjectParameter("i_StandardOrganizationId", i_StandardOrganizationId) :
                new ObjectParameter("i_StandardOrganizationId", typeof(int));
    
            var b_PrivateParameter = b_Private.HasValue ?
                new ObjectParameter("b_Private", b_Private) :
                new ObjectParameter("b_Private", typeof(bool));
    
            var i_StandardsIdParameter = i_StandardsId.HasValue ?
                new ObjectParameter("i_StandardsId", i_StandardsId) :
                new ObjectParameter("i_StandardsId", typeof(int));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var v_DefinitionTypeParameter = v_DefinitionType != null ?
                new ObjectParameter("v_DefinitionType", v_DefinitionType) :
                new ObjectParameter("v_DefinitionType", typeof(string));
    
            var i_ConditionIdParameter = i_ConditionId.HasValue ?
                new ObjectParameter("i_ConditionId", i_ConditionId) :
                new ObjectParameter("i_ConditionId", typeof(int));
    
            var b_RefreshPatientListDailyParameter = b_RefreshPatientListDaily.HasValue ?
                new ObjectParameter("b_RefreshPatientListDaily", b_RefreshPatientListDaily) :
                new ObjectParameter("b_RefreshPatientListDaily", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinition_Search_Result>("usp_PopulationDefinition_Search", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, v_StatusCodeParameter, vc_PopulationDefinitionNameParameter, vc_PopulationDefinitionDescriptionParameter, b_NonModifiableParameter, i_StandardOrganizationIdParameter, b_PrivateParameter, i_StandardsIdParameter, v_ProductionStatusParameter, v_DefinitionTypeParameter, i_ConditionIdParameter, b_RefreshPatientListDailyParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinition_Search_DD_Result> usp_PopulationDefinition_Search_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinition_Search_DD_Result>("usp_PopulationDefinition_Search_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinition_Select_Result> usp_PopulationDefinition_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinition_Select_Result>("usp_PopulationDefinition_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_PopulationDefinition_Update(Nullable<int> i_AppUserId, string vc_PopulationDefinitionName, string vc_PopulationDefinitionDescription, Nullable<System.DateTime> dt_LastDateListGenerated, string vc_StatusCode, Nullable<bool> b_RefreshPatientListDaily, Nullable<bool> b_NonModifiable, Nullable<int> i_StandardsId, Nullable<bool> b_Private, Nullable<int> i_StandardOrganizationId, string v_ProductionStatus, string vc_DefinitionType, string vc_NumeratorType, Nullable<int> i_ConditionId, Nullable<int> i_PopulationDefinitionID, Nullable<bool> i_IsDisplayInHomePage)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_PopulationDefinitionNameParameter = vc_PopulationDefinitionName != null ?
                new ObjectParameter("vc_PopulationDefinitionName", vc_PopulationDefinitionName) :
                new ObjectParameter("vc_PopulationDefinitionName", typeof(string));
    
            var vc_PopulationDefinitionDescriptionParameter = vc_PopulationDefinitionDescription != null ?
                new ObjectParameter("vc_PopulationDefinitionDescription", vc_PopulationDefinitionDescription) :
                new ObjectParameter("vc_PopulationDefinitionDescription", typeof(string));
    
            var dt_LastDateListGeneratedParameter = dt_LastDateListGenerated.HasValue ?
                new ObjectParameter("dt_LastDateListGenerated", dt_LastDateListGenerated) :
                new ObjectParameter("dt_LastDateListGenerated", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var b_RefreshPatientListDailyParameter = b_RefreshPatientListDaily.HasValue ?
                new ObjectParameter("b_RefreshPatientListDaily", b_RefreshPatientListDaily) :
                new ObjectParameter("b_RefreshPatientListDaily", typeof(bool));
    
            var b_NonModifiableParameter = b_NonModifiable.HasValue ?
                new ObjectParameter("b_NonModifiable", b_NonModifiable) :
                new ObjectParameter("b_NonModifiable", typeof(bool));
    
            var i_StandardsIdParameter = i_StandardsId.HasValue ?
                new ObjectParameter("i_StandardsId", i_StandardsId) :
                new ObjectParameter("i_StandardsId", typeof(int));
    
            var b_PrivateParameter = b_Private.HasValue ?
                new ObjectParameter("b_Private", b_Private) :
                new ObjectParameter("b_Private", typeof(bool));
    
            var i_StandardOrganizationIdParameter = i_StandardOrganizationId.HasValue ?
                new ObjectParameter("i_StandardOrganizationId", i_StandardOrganizationId) :
                new ObjectParameter("i_StandardOrganizationId", typeof(int));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var vc_DefinitionTypeParameter = vc_DefinitionType != null ?
                new ObjectParameter("vc_DefinitionType", vc_DefinitionType) :
                new ObjectParameter("vc_DefinitionType", typeof(string));
    
            var vc_NumeratorTypeParameter = vc_NumeratorType != null ?
                new ObjectParameter("vc_NumeratorType", vc_NumeratorType) :
                new ObjectParameter("vc_NumeratorType", typeof(string));
    
            var i_ConditionIdParameter = i_ConditionId.HasValue ?
                new ObjectParameter("i_ConditionId", i_ConditionId) :
                new ObjectParameter("i_ConditionId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_IsDisplayInHomePageParameter = i_IsDisplayInHomePage.HasValue ?
                new ObjectParameter("i_IsDisplayInHomePage", i_IsDisplayInHomePage) :
                new ObjectParameter("i_IsDisplayInHomePage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinition_Update", i_AppUserIdParameter, vc_PopulationDefinitionNameParameter, vc_PopulationDefinitionDescriptionParameter, dt_LastDateListGeneratedParameter, vc_StatusCodeParameter, b_RefreshPatientListDailyParameter, b_NonModifiableParameter, i_StandardsIdParameter, b_PrivateParameter, i_StandardOrganizationIdParameter, v_ProductionStatusParameter, vc_DefinitionTypeParameter, vc_NumeratorTypeParameter, i_ConditionIdParameter, i_PopulationDefinitionIDParameter, i_IsDisplayInHomePageParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinition_Usage_Result> usp_PopulationDefinition_Usage(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIdParameter = i_PopulationDefinitionId.HasValue ?
                new ObjectParameter("i_PopulationDefinitionId", i_PopulationDefinitionId) :
                new ObjectParameter("i_PopulationDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinition_Usage_Result>("usp_PopulationDefinition_Usage", i_AppUserIdParameter, i_PopulationDefinitionIdParameter);
        }
    
        public virtual int usp_PopulationDefinitionByStatus_Update(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionId, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIdParameter = i_PopulationDefinitionId.HasValue ?
                new ObjectParameter("i_PopulationDefinitionId", i_PopulationDefinitionId) :
                new ObjectParameter("i_PopulationDefinitionId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionByStatus_Update", i_AppUserIdParameter, i_PopulationDefinitionIdParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_PopulationDefinitionCopyInclude_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionCopyInclude_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual int usp_PopulationDefinitionCriteria_Delete(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionCriteria_Delete", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual int usp_PopulationDefinitionCriteria_Insert(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string vc_PopulationDefinitionCriteriaText, Nullable<int> i_PopulationDefPanelConfigurationID, string vc_PopulationDefinitionCriteriaSQL, string vc_CohortGeneralizedIdList, Nullable<int> i_PopulationDefinitionCriteriaID, string xml_XMLDefenition, Nullable<bool> b_IsBuildDraft)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var vc_PopulationDefinitionCriteriaTextParameter = vc_PopulationDefinitionCriteriaText != null ?
                new ObjectParameter("vc_PopulationDefinitionCriteriaText", vc_PopulationDefinitionCriteriaText) :
                new ObjectParameter("vc_PopulationDefinitionCriteriaText", typeof(string));
    
            var i_PopulationDefPanelConfigurationIDParameter = i_PopulationDefPanelConfigurationID.HasValue ?
                new ObjectParameter("i_PopulationDefPanelConfigurationID", i_PopulationDefPanelConfigurationID) :
                new ObjectParameter("i_PopulationDefPanelConfigurationID", typeof(int));
    
            var vc_PopulationDefinitionCriteriaSQLParameter = vc_PopulationDefinitionCriteriaSQL != null ?
                new ObjectParameter("vc_PopulationDefinitionCriteriaSQL", vc_PopulationDefinitionCriteriaSQL) :
                new ObjectParameter("vc_PopulationDefinitionCriteriaSQL", typeof(string));
    
            var vc_CohortGeneralizedIdListParameter = vc_CohortGeneralizedIdList != null ?
                new ObjectParameter("vc_CohortGeneralizedIdList", vc_CohortGeneralizedIdList) :
                new ObjectParameter("vc_CohortGeneralizedIdList", typeof(string));
    
            var i_PopulationDefinitionCriteriaIDParameter = i_PopulationDefinitionCriteriaID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionCriteriaID", i_PopulationDefinitionCriteriaID) :
                new ObjectParameter("i_PopulationDefinitionCriteriaID", typeof(int));
    
            var xml_XMLDefenitionParameter = xml_XMLDefenition != null ?
                new ObjectParameter("xml_XMLDefenition", xml_XMLDefenition) :
                new ObjectParameter("xml_XMLDefenition", typeof(string));
    
            var b_IsBuildDraftParameter = b_IsBuildDraft.HasValue ?
                new ObjectParameter("b_IsBuildDraft", b_IsBuildDraft) :
                new ObjectParameter("b_IsBuildDraft", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionCriteria_Insert", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, vc_PopulationDefinitionCriteriaTextParameter, i_PopulationDefPanelConfigurationIDParameter, vc_PopulationDefinitionCriteriaSQLParameter, vc_CohortGeneralizedIdListParameter, i_PopulationDefinitionCriteriaIDParameter, xml_XMLDefenitionParameter, b_IsBuildDraftParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinitionCriteria_Select_Result> usp_PopulationDefinitionCriteria_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinitionCriteria_Select_Result>("usp_PopulationDefinitionCriteria_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual int usp_PopulationDefinitionCriteria_Update(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionCriteriaID, Nullable<int> i_PopulationDefinitionID, string vc_PopulationDefinitionCriteriaText, string vc_CriteriaTypeName, string vc_PopulationDefinitionCriteriaSQL, string vc_CohortGeneralizedIdList)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionCriteriaIDParameter = i_PopulationDefinitionCriteriaID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionCriteriaID", i_PopulationDefinitionCriteriaID) :
                new ObjectParameter("i_PopulationDefinitionCriteriaID", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var vc_PopulationDefinitionCriteriaTextParameter = vc_PopulationDefinitionCriteriaText != null ?
                new ObjectParameter("vc_PopulationDefinitionCriteriaText", vc_PopulationDefinitionCriteriaText) :
                new ObjectParameter("vc_PopulationDefinitionCriteriaText", typeof(string));
    
            var vc_CriteriaTypeNameParameter = vc_CriteriaTypeName != null ?
                new ObjectParameter("vc_CriteriaTypeName", vc_CriteriaTypeName) :
                new ObjectParameter("vc_CriteriaTypeName", typeof(string));
    
            var vc_PopulationDefinitionCriteriaSQLParameter = vc_PopulationDefinitionCriteriaSQL != null ?
                new ObjectParameter("vc_PopulationDefinitionCriteriaSQL", vc_PopulationDefinitionCriteriaSQL) :
                new ObjectParameter("vc_PopulationDefinitionCriteriaSQL", typeof(string));
    
            var vc_CohortGeneralizedIdListParameter = vc_CohortGeneralizedIdList != null ?
                new ObjectParameter("vc_CohortGeneralizedIdList", vc_CohortGeneralizedIdList) :
                new ObjectParameter("vc_CohortGeneralizedIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionCriteria_Update", i_AppUserIdParameter, i_PopulationDefinitionCriteriaIDParameter, i_PopulationDefinitionIDParameter, vc_PopulationDefinitionCriteriaTextParameter, vc_CriteriaTypeNameParameter, vc_PopulationDefinitionCriteriaSQLParameter, vc_CohortGeneralizedIdListParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinitionCriteriaByDefinitionID_Select_Result> usp_PopulationDefinitionCriteriaByDefinitionID_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinitionCriteriaByDefinitionID_Select_Result>("usp_PopulationDefinitionCriteriaByDefinitionID_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinitionDependencies_Select_Result> usp_PopulationDefinitionDependencies_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinitionDependencies_Select_Result>("usp_PopulationDefinitionDependencies_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinitionFilter_Select_Result> usp_PopulationDefinitionFilter_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string v_PopulationDefinitionName, Nullable<int> i_ConditionDefinitionID, string v_DefinitionType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_PopulationDefinitionNameParameter = v_PopulationDefinitionName != null ?
                new ObjectParameter("v_PopulationDefinitionName", v_PopulationDefinitionName) :
                new ObjectParameter("v_PopulationDefinitionName", typeof(string));
    
            var i_ConditionDefinitionIDParameter = i_ConditionDefinitionID.HasValue ?
                new ObjectParameter("i_ConditionDefinitionID", i_ConditionDefinitionID) :
                new ObjectParameter("i_ConditionDefinitionID", typeof(int));
    
            var v_DefinitionTypeParameter = v_DefinitionType != null ?
                new ObjectParameter("v_DefinitionType", v_DefinitionType) :
                new ObjectParameter("v_DefinitionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinitionFilter_Select_Result>("usp_PopulationDefinitionFilter_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, v_PopulationDefinitionNameParameter, i_ConditionDefinitionIDParameter, v_DefinitionTypeParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefinitionUserCount_Select_Result> usp_PopulationDefinitionUserCount_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefinitionUserCount_Select_Result>("usp_PopulationDefinitionUserCount_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_PopulationDefinitionUsers_InsertByCriteria(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_CareTeamID, string c_CareTeamOption, string v_SubjectText, string v_CommunicationText)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_CareTeamIDParameter = i_CareTeamID.HasValue ?
                new ObjectParameter("i_CareTeamID", i_CareTeamID) :
                new ObjectParameter("i_CareTeamID", typeof(int));
    
            var c_CareTeamOptionParameter = c_CareTeamOption != null ?
                new ObjectParameter("c_CareTeamOption", c_CareTeamOption) :
                new ObjectParameter("c_CareTeamOption", typeof(string));
    
            var v_SubjectTextParameter = v_SubjectText != null ?
                new ObjectParameter("v_SubjectText", v_SubjectText) :
                new ObjectParameter("v_SubjectText", typeof(string));
    
            var v_CommunicationTextParameter = v_CommunicationText != null ?
                new ObjectParameter("v_CommunicationText", v_CommunicationText) :
                new ObjectParameter("v_CommunicationText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PopulationDefinitionUsers_InsertByCriteria", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, i_CareTeamIDParameter, c_CareTeamOptionParameter, v_SubjectTextParameter, v_CommunicationTextParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefPanelConfiguration_Select_DD_Result> usp_PopulationDefPanelConfiguration_Select_DD(Nullable<int> i_AppUserId, string v_PopulationType, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_PopulationTypeParameter = v_PopulationType != null ?
                new ObjectParameter("v_PopulationType", v_PopulationType) :
                new ObjectParameter("v_PopulationType", typeof(string));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefPanelConfiguration_Select_DD_Result>("usp_PopulationDefPanelConfiguration_Select_DD", i_AppUserIdParameter, v_PopulationTypeParameter, i_ProgramIDParameter);
        }
    
        public virtual ObjectResult<usp_PopulationDefPanelConfigurationByPopulationDefinitionID_Select_Result> usp_PopulationDefPanelConfigurationByPopulationDefinitionID_Select(Nullable<int> i_AppUserId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_PopulationDefPanelConfigurationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_PopulationDefPanelConfigurationIDParameter = i_PopulationDefPanelConfigurationID.HasValue ?
                new ObjectParameter("i_PopulationDefPanelConfigurationID", i_PopulationDefPanelConfigurationID) :
                new ObjectParameter("i_PopulationDefPanelConfigurationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationDefPanelConfigurationByPopulationDefinitionID_Select_Result>("usp_PopulationDefPanelConfigurationByPopulationDefinitionID_Select", i_AppUserIdParameter, i_PopulationDefinitionIDParameter, i_PopulationDefPanelConfigurationIDParameter);
        }
    
        public virtual ObjectResult<usp_PopulationMetricsReports_Select_DD_Result> usp_PopulationMetricsReports_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationMetricsReports_Select_DD_Result>("usp_PopulationMetricsReports_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_PopulationOrConditionDefinitions_Select_Result> usp_PopulationOrConditionDefinitions_Select(Nullable<int> i_AppUserId, Nullable<bool> b_Filter)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_FilterParameter = b_Filter.HasValue ?
                new ObjectParameter("b_Filter", b_Filter) :
                new ObjectParameter("b_Filter", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PopulationOrConditionDefinitions_Select_Result>("usp_PopulationOrConditionDefinitions_Select", i_AppUserIdParameter, b_FilterParameter);
        }
    
        public virtual ObjectResult<usp_Portals_Select_DD_Result> usp_Portals_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Portals_Select_DD_Result>("usp_Portals_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_PQRIProviderPersonalization_HomePage(Nullable<int> i_AppUserId, Nullable<int> i_ProviderUserID, Nullable<short> i_ReportingYear, string v_EncounterStatus, Nullable<System.DateTime> d_DateOfServiceTo, Nullable<System.DateTime> d_DateOfServiceFrom, string v_PatientName, string v_MemberNum)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderUserIDParameter = i_ProviderUserID.HasValue ?
                new ObjectParameter("i_ProviderUserID", i_ProviderUserID) :
                new ObjectParameter("i_ProviderUserID", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var v_EncounterStatusParameter = v_EncounterStatus != null ?
                new ObjectParameter("v_EncounterStatus", v_EncounterStatus) :
                new ObjectParameter("v_EncounterStatus", typeof(string));
    
            var d_DateOfServiceToParameter = d_DateOfServiceTo.HasValue ?
                new ObjectParameter("d_DateOfServiceTo", d_DateOfServiceTo) :
                new ObjectParameter("d_DateOfServiceTo", typeof(System.DateTime));
    
            var d_DateOfServiceFromParameter = d_DateOfServiceFrom.HasValue ?
                new ObjectParameter("d_DateOfServiceFrom", d_DateOfServiceFrom) :
                new ObjectParameter("d_DateOfServiceFrom", typeof(System.DateTime));
    
            var v_PatientNameParameter = v_PatientName != null ?
                new ObjectParameter("v_PatientName", v_PatientName) :
                new ObjectParameter("v_PatientName", typeof(string));
    
            var v_MemberNumParameter = v_MemberNum != null ?
                new ObjectParameter("v_MemberNum", v_MemberNum) :
                new ObjectParameter("v_MemberNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIProviderPersonalization_HomePage", i_AppUserIdParameter, i_ProviderUserIDParameter, i_ReportingYearParameter, v_EncounterStatusParameter, d_DateOfServiceToParameter, d_DateOfServiceFromParameter, v_PatientNameParameter, v_MemberNumParameter);
        }
    
        public virtual ObjectResult<usp_PQRIProviderPersonalization_Select_Result> usp_PQRIProviderPersonalization_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIProviderPersonalizationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIProviderPersonalizationIDParameter = i_PQRIProviderPersonalizationID.HasValue ?
                new ObjectParameter("i_PQRIProviderPersonalizationID", i_PQRIProviderPersonalizationID) :
                new ObjectParameter("i_PQRIProviderPersonalizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIProviderPersonalization_Select_Result>("usp_PQRIProviderPersonalization_Select", i_AppUserIdParameter, i_PQRIProviderPersonalizationIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIProviderPersonalizationByProvider_Select_Result> usp_PQRIProviderPersonalizationByProvider_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIProviderPersonalizationByProvider_Select_Result>("usp_PQRIProviderPersonalizationByProvider_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_PQRIProviderQualityMeasureAndGroup_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProviderUserID, Nullable<short> i_ReportingYear, Nullable<int> i_PQRIQualityMeasureID, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderUserIDParameter = i_ProviderUserID.HasValue ?
                new ObjectParameter("i_ProviderUserID", i_ProviderUserID) :
                new ObjectParameter("i_ProviderUserID", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIProviderQualityMeasureAndGroup_Delete", i_AppUserIdParameter, i_ProviderUserIDParameter, i_ReportingYearParameter, i_PQRIQualityMeasureIDParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual int usp_PQRIProviderUser_Popups(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID, string v_TypeIDList, string v_PopUpType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var v_TypeIDListParameter = v_TypeIDList != null ?
                new ObjectParameter("v_TypeIDList", v_TypeIDList) :
                new ObjectParameter("v_TypeIDList", typeof(string));
    
            var v_PopUpTypeParameter = v_PopUpType != null ?
                new ObjectParameter("v_PopUpType", v_PopUpType) :
                new ObjectParameter("v_PopUpType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIProviderUser_Popups", i_AppUserIdParameter, i_PatientUserIDParameter, v_TypeIDListParameter, v_PopUpTypeParameter);
        }
    
        public virtual int usp_PQRIProviderUserEncounter_Update(Nullable<int> i_AppUserId, Nullable<int> i_PQRIProviderUserEncounterID, string v_TransactionStatus)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIProviderUserEncounterIDParameter = i_PQRIProviderUserEncounterID.HasValue ?
                new ObjectParameter("i_PQRIProviderUserEncounterID", i_PQRIProviderUserEncounterID) :
                new ObjectParameter("i_PQRIProviderUserEncounterID", typeof(int));
    
            var v_TransactionStatusParameter = v_TransactionStatus != null ?
                new ObjectParameter("v_TransactionStatus", v_TransactionStatus) :
                new ObjectParameter("v_TransactionStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIProviderUserEncounter_Update", i_AppUserIdParameter, i_PQRIProviderUserEncounterIDParameter, v_TransactionStatusParameter);
        }
    
        public virtual int usp_PQRIProviderUserEncounterNumeratorMatchedClaimData_Wrapper(Nullable<int> i_AppUserId, Nullable<int> i_PQRIProviderUserEncounterID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIProviderUserEncounterIDParameter = i_PQRIProviderUserEncounterID.HasValue ?
                new ObjectParameter("i_PQRIProviderUserEncounterID", i_PQRIProviderUserEncounterID) :
                new ObjectParameter("i_PQRIProviderUserEncounterID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIProviderUserEncounterNumeratorMatchedClaimData_Wrapper", i_AppUserIdParameter, i_PQRIProviderUserEncounterIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasure_DD_Result> usp_PQRIQualityMeasure_DD(Nullable<int> i_AppUserId, Nullable<short> i_ReportingYear, string vc_MeasureIdORDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var vc_MeasureIdORDescriptionParameter = vc_MeasureIdORDescription != null ?
                new ObjectParameter("vc_MeasureIdORDescription", vc_MeasureIdORDescription) :
                new ObjectParameter("vc_MeasureIdORDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasure_DD_Result>("usp_PQRIQualityMeasure_DD", i_AppUserIdParameter, i_ReportingYearParameter, vc_MeasureIdORDescriptionParameter);
        }
    
        public virtual int usp_PQRIQualityMeasure_Delete(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasure_Delete", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasure_Search_Result> usp_PQRIQualityMeasure_Search(Nullable<int> i_AppUserId, Nullable<short> i_ReportingYear, string v_StatusCode, Nullable<int> i_PQRIMeasureID, string v_MeasureName, Nullable<bool> b_IsMigrated)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_PQRIMeasureIDParameter = i_PQRIMeasureID.HasValue ?
                new ObjectParameter("i_PQRIMeasureID", i_PQRIMeasureID) :
                new ObjectParameter("i_PQRIMeasureID", typeof(int));
    
            var v_MeasureNameParameter = v_MeasureName != null ?
                new ObjectParameter("v_MeasureName", v_MeasureName) :
                new ObjectParameter("v_MeasureName", typeof(string));
    
            var b_IsMigratedParameter = b_IsMigrated.HasValue ?
                new ObjectParameter("b_IsMigrated", b_IsMigrated) :
                new ObjectParameter("b_IsMigrated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasure_Search_Result>("usp_PQRIQualityMeasure_Search", i_AppUserIdParameter, i_ReportingYearParameter, v_StatusCodeParameter, i_PQRIMeasureIDParameter, v_MeasureNameParameter, b_IsMigratedParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasure_Select_DD_Result> usp_PQRIQualityMeasure_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_ReportingYear)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasure_Select_DD_Result>("usp_PQRIQualityMeasure_Select_DD", i_AppUserIdParameter, i_ReportingYearParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasure_SelectByMeasureID_Result> usp_PQRIQualityMeasure_SelectByMeasureID(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasure_SelectByMeasureID_Result>("usp_PQRIQualityMeasure_SelectByMeasureID", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasure_SelectByProviderID_Result> usp_PQRIQualityMeasure_SelectByProviderID(Nullable<int> i_AppUserId, Nullable<short> i_ReportingYear)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasure_SelectByProviderID_Result>("usp_PQRIQualityMeasure_SelectByProviderID", i_AppUserIdParameter, i_ReportingYearParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureDenominator_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID, Nullable<short> i_AgeFrom, Nullable<short> i_AgeTo, string c_Gender, string vc_Operator1, string vc_ICDCodeList, string vc_Operator2, string vc_CPTCodeList, string vc_CriteriaSQL, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            var i_AgeFromParameter = i_AgeFrom.HasValue ?
                new ObjectParameter("i_AgeFrom", i_AgeFrom) :
                new ObjectParameter("i_AgeFrom", typeof(short));
    
            var i_AgeToParameter = i_AgeTo.HasValue ?
                new ObjectParameter("i_AgeTo", i_AgeTo) :
                new ObjectParameter("i_AgeTo", typeof(short));
    
            var c_GenderParameter = c_Gender != null ?
                new ObjectParameter("c_Gender", c_Gender) :
                new ObjectParameter("c_Gender", typeof(string));
    
            var vc_Operator1Parameter = vc_Operator1 != null ?
                new ObjectParameter("vc_Operator1", vc_Operator1) :
                new ObjectParameter("vc_Operator1", typeof(string));
    
            var vc_ICDCodeListParameter = vc_ICDCodeList != null ?
                new ObjectParameter("vc_ICDCodeList", vc_ICDCodeList) :
                new ObjectParameter("vc_ICDCodeList", typeof(string));
    
            var vc_Operator2Parameter = vc_Operator2 != null ?
                new ObjectParameter("vc_Operator2", vc_Operator2) :
                new ObjectParameter("vc_Operator2", typeof(string));
    
            var vc_CPTCodeListParameter = vc_CPTCodeList != null ?
                new ObjectParameter("vc_CPTCodeList", vc_CPTCodeList) :
                new ObjectParameter("vc_CPTCodeList", typeof(string));
    
            var vc_CriteriaSQLParameter = vc_CriteriaSQL != null ?
                new ObjectParameter("vc_CriteriaSQL", vc_CriteriaSQL) :
                new ObjectParameter("vc_CriteriaSQL", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureDenominator_InsertUpdate", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter, i_AgeFromParameter, i_AgeToParameter, c_GenderParameter, vc_Operator1Parameter, vc_ICDCodeListParameter, vc_Operator2Parameter, vc_CPTCodeListParameter, vc_CriteriaSQLParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureDenominator_Select_Result> usp_PQRIQualityMeasureDenominator_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureDenominator_Select_Result>("usp_PQRIQualityMeasureDenominator_Select", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroup_DD_Result> usp_PQRIQualityMeasureGroup_DD(Nullable<int> i_AppUserId, Nullable<short> i_ReportingYear, string vc_MeasureIdORDescription)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var vc_MeasureIdORDescriptionParameter = vc_MeasureIdORDescription != null ?
                new ObjectParameter("vc_MeasureIdORDescription", vc_MeasureIdORDescription) :
                new ObjectParameter("vc_MeasureIdORDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroup_DD_Result>("usp_PQRIQualityMeasureGroup_DD", i_AppUserIdParameter, i_ReportingYearParameter, vc_MeasureIdORDescriptionParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureGroup_Delete_(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureGroup_Delete_", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroup_Search_Result> usp_PQRIQualityMeasureGroup_Search(Nullable<int> i_AppUserId, Nullable<short> i_ReportingYear, string v_StatusCode, string v_PQRIMeasureGroupID, string v_MeasureGroupName, Nullable<bool> b_IsMigrated)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(short));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_PQRIMeasureGroupIDParameter = v_PQRIMeasureGroupID != null ?
                new ObjectParameter("v_PQRIMeasureGroupID", v_PQRIMeasureGroupID) :
                new ObjectParameter("v_PQRIMeasureGroupID", typeof(string));
    
            var v_MeasureGroupNameParameter = v_MeasureGroupName != null ?
                new ObjectParameter("v_MeasureGroupName", v_MeasureGroupName) :
                new ObjectParameter("v_MeasureGroupName", typeof(string));
    
            var b_IsMigratedParameter = b_IsMigrated.HasValue ?
                new ObjectParameter("b_IsMigrated", b_IsMigrated) :
                new ObjectParameter("b_IsMigrated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroup_Search_Result>("usp_PQRIQualityMeasureGroup_Search", i_AppUserIdParameter, i_ReportingYearParameter, v_StatusCodeParameter, v_PQRIMeasureGroupIDParameter, v_MeasureGroupNameParameter, b_IsMigratedParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroup_Select_Result> usp_PQRIQualityMeasureGroup_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroup_Select_Result>("usp_PQRIQualityMeasureGroup_Select", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroup_Select_DD_Result> usp_PQRIQualityMeasureGroup_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID, Nullable<int> i_ReportingYear)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            var i_ReportingYearParameter = i_ReportingYear.HasValue ?
                new ObjectParameter("i_ReportingYear", i_ReportingYear) :
                new ObjectParameter("i_ReportingYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroup_Select_DD_Result>("usp_PQRIQualityMeasureGroup_Select_DD", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter, i_ReportingYearParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroupCorrelate_SelectGender_Result> usp_PQRIQualityMeasureGroupCorrelate_SelectGender(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroupCorrelate_SelectGender_Result>("usp_PQRIQualityMeasureGroupCorrelate_SelectGender", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureGroupCorrelate_Update(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupCorrelateID, Nullable<int> i_PQRIQualityMeasureGroupID, string vc_PQRIQualityMeasureCorrelateIDList, Nullable<short> i_AgeFrom, Nullable<short> i_AgeTo, string c_Gender, Nullable<decimal> d_BMIFrom, Nullable<decimal> d_BMITo)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupCorrelateIDParameter = i_PQRIQualityMeasureGroupCorrelateID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupCorrelateID", i_PQRIQualityMeasureGroupCorrelateID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupCorrelateID", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            var vc_PQRIQualityMeasureCorrelateIDListParameter = vc_PQRIQualityMeasureCorrelateIDList != null ?
                new ObjectParameter("vc_PQRIQualityMeasureCorrelateIDList", vc_PQRIQualityMeasureCorrelateIDList) :
                new ObjectParameter("vc_PQRIQualityMeasureCorrelateIDList", typeof(string));
    
            var i_AgeFromParameter = i_AgeFrom.HasValue ?
                new ObjectParameter("i_AgeFrom", i_AgeFrom) :
                new ObjectParameter("i_AgeFrom", typeof(short));
    
            var i_AgeToParameter = i_AgeTo.HasValue ?
                new ObjectParameter("i_AgeTo", i_AgeTo) :
                new ObjectParameter("i_AgeTo", typeof(short));
    
            var c_GenderParameter = c_Gender != null ?
                new ObjectParameter("c_Gender", c_Gender) :
                new ObjectParameter("c_Gender", typeof(string));
    
            var d_BMIFromParameter = d_BMIFrom.HasValue ?
                new ObjectParameter("d_BMIFrom", d_BMIFrom) :
                new ObjectParameter("d_BMIFrom", typeof(decimal));
    
            var d_BMIToParameter = d_BMITo.HasValue ?
                new ObjectParameter("d_BMITo", d_BMITo) :
                new ObjectParameter("d_BMITo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureGroupCorrelate_Update", i_AppUserIdParameter, i_PQRIQualityMeasureGroupCorrelateIDParameter, i_PQRIQualityMeasureGroupIDParameter, vc_PQRIQualityMeasureCorrelateIDListParameter, i_AgeFromParameter, i_AgeToParameter, c_GenderParameter, d_BMIFromParameter, d_BMIToParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureGroupDenominator_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID, Nullable<short> i_AgeFrom, Nullable<short> i_AgeTo, string c_Gender, string vc_Operator1, string vc_ICDCodeList, string vc_Operator2, string vc_CPTCodeList, string vc_CriteriaSQL, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            var i_AgeFromParameter = i_AgeFrom.HasValue ?
                new ObjectParameter("i_AgeFrom", i_AgeFrom) :
                new ObjectParameter("i_AgeFrom", typeof(short));
    
            var i_AgeToParameter = i_AgeTo.HasValue ?
                new ObjectParameter("i_AgeTo", i_AgeTo) :
                new ObjectParameter("i_AgeTo", typeof(short));
    
            var c_GenderParameter = c_Gender != null ?
                new ObjectParameter("c_Gender", c_Gender) :
                new ObjectParameter("c_Gender", typeof(string));
    
            var vc_Operator1Parameter = vc_Operator1 != null ?
                new ObjectParameter("vc_Operator1", vc_Operator1) :
                new ObjectParameter("vc_Operator1", typeof(string));
    
            var vc_ICDCodeListParameter = vc_ICDCodeList != null ?
                new ObjectParameter("vc_ICDCodeList", vc_ICDCodeList) :
                new ObjectParameter("vc_ICDCodeList", typeof(string));
    
            var vc_Operator2Parameter = vc_Operator2 != null ?
                new ObjectParameter("vc_Operator2", vc_Operator2) :
                new ObjectParameter("vc_Operator2", typeof(string));
    
            var vc_CPTCodeListParameter = vc_CPTCodeList != null ?
                new ObjectParameter("vc_CPTCodeList", vc_CPTCodeList) :
                new ObjectParameter("vc_CPTCodeList", typeof(string));
    
            var vc_CriteriaSQLParameter = vc_CriteriaSQL != null ?
                new ObjectParameter("vc_CriteriaSQL", vc_CriteriaSQL) :
                new ObjectParameter("vc_CriteriaSQL", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureGroupDenominator_InsertUpdate", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter, i_AgeFromParameter, i_AgeToParameter, c_GenderParameter, vc_Operator1Parameter, vc_ICDCodeListParameter, vc_Operator2Parameter, vc_CPTCodeListParameter, vc_CriteriaSQLParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroupDenominator_Select_Result> usp_PQRIQualityMeasureGroupDenominator_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroupDenominator_Select_Result>("usp_PQRIQualityMeasureGroupDenominator_Select", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureGroupNumerator_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIDParameter = i_PQRIQualityMeasureGroupID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupID", i_PQRIQualityMeasureGroupID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureGroupNumerator_Select", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureGroupToMeasure_Select_Result> usp_PQRIQualityMeasureGroupToMeasure_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureGroupId, Nullable<int> i_PQRIQualityMeasureGroupCorrelateID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureGroupIdParameter = i_PQRIQualityMeasureGroupId.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupId", i_PQRIQualityMeasureGroupId) :
                new ObjectParameter("i_PQRIQualityMeasureGroupId", typeof(int));
    
            var i_PQRIQualityMeasureGroupCorrelateIDParameter = i_PQRIQualityMeasureGroupCorrelateID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureGroupCorrelateID", i_PQRIQualityMeasureGroupCorrelateID) :
                new ObjectParameter("i_PQRIQualityMeasureGroupCorrelateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureGroupToMeasure_Select_Result>("usp_PQRIQualityMeasureGroupToMeasure_Select", i_AppUserIdParameter, i_PQRIQualityMeasureGroupIdParameter, i_PQRIQualityMeasureGroupCorrelateIDParameter);
        }
    
        public virtual int usp_PQRIQualityMeasureNumerator_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID, string vc_PerformanceType, string vc_CriteriaText, string vc_CriteriaSQL, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            var vc_PerformanceTypeParameter = vc_PerformanceType != null ?
                new ObjectParameter("vc_PerformanceType", vc_PerformanceType) :
                new ObjectParameter("vc_PerformanceType", typeof(string));
    
            var vc_CriteriaTextParameter = vc_CriteriaText != null ?
                new ObjectParameter("vc_CriteriaText", vc_CriteriaText) :
                new ObjectParameter("vc_CriteriaText", typeof(string));
    
            var vc_CriteriaSQLParameter = vc_CriteriaSQL != null ?
                new ObjectParameter("vc_CriteriaSQL", vc_CriteriaSQL) :
                new ObjectParameter("vc_CriteriaSQL", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PQRIQualityMeasureNumerator_InsertUpdate", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter, vc_PerformanceTypeParameter, vc_CriteriaTextParameter, vc_CriteriaSQLParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureNumerator_MultiSelect_Result> usp_PQRIQualityMeasureNumerator_MultiSelect(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureNumerator_MultiSelect_Result>("usp_PQRIQualityMeasureNumerator_MultiSelect", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter);
        }
    
        public virtual ObjectResult<usp_PQRIQualityMeasureNumerator_Select_Result> usp_PQRIQualityMeasureNumerator_Select(Nullable<int> i_AppUserId, Nullable<int> i_PQRIQualityMeasureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PQRIQualityMeasureIDParameter = i_PQRIQualityMeasureID.HasValue ?
                new ObjectParameter("i_PQRIQualityMeasureID", i_PQRIQualityMeasureID) :
                new ObjectParameter("i_PQRIQualityMeasureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PQRIQualityMeasureNumerator_Select_Result>("usp_PQRIQualityMeasureNumerator_Select", i_AppUserIdParameter, i_PQRIQualityMeasureIDParameter);
        }
    
        public virtual int usp_ProcedureFrequency_Insert(Nullable<int> i_AppUserId, string vc_StatusCode, Nullable<int> i_FrequencyNumber, string vc_Frequency, string vc_GenderSpecific, Nullable<int> i_ProcedureId, Nullable<bool> b_NeverSchedule, string vc_ExclusionReason, Nullable<int> i_LabTestId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var vc_GenderSpecificParameter = vc_GenderSpecific != null ?
                new ObjectParameter("vc_GenderSpecific", vc_GenderSpecific) :
                new ObjectParameter("vc_GenderSpecific", typeof(string));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var b_NeverScheduleParameter = b_NeverSchedule.HasValue ?
                new ObjectParameter("b_NeverSchedule", b_NeverSchedule) :
                new ObjectParameter("b_NeverSchedule", typeof(bool));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcedureFrequency_Insert", i_AppUserIdParameter, vc_StatusCodeParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, vc_GenderSpecificParameter, i_ProcedureIdParameter, b_NeverScheduleParameter, vc_ExclusionReasonParameter, i_LabTestIdParameter);
        }
    
        public virtual int usp_ProcedureFrequency_Update(Nullable<int> i_AppUserId, string vc_StatusCode, Nullable<int> i_FrequencyNumber, string vc_Frequency, string vc_GenderSpecific, Nullable<int> i_ProcedureId, Nullable<bool> b_NeverSchedule, string vc_ExclusionReason, Nullable<int> i_LabTestId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var vc_GenderSpecificParameter = vc_GenderSpecific != null ?
                new ObjectParameter("vc_GenderSpecific", vc_GenderSpecific) :
                new ObjectParameter("vc_GenderSpecific", typeof(string));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var b_NeverScheduleParameter = b_NeverSchedule.HasValue ?
                new ObjectParameter("b_NeverSchedule", b_NeverSchedule) :
                new ObjectParameter("b_NeverSchedule", typeof(bool));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcedureFrequency_Update", i_AppUserIdParameter, vc_StatusCodeParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, vc_GenderSpecificParameter, i_ProcedureIdParameter, b_NeverScheduleParameter, vc_ExclusionReasonParameter, i_LabTestIdParameter);
        }
    
        public virtual int usp_ProcedureMeasure_Insert(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, Nullable<int> i_ProcedureId, string v_StatusCode, ObjectParameter o_ProcedureMeasureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcedureMeasure_Insert", i_AppUserIdParameter, i_MeasureIdParameter, i_ProcedureIdParameter, v_StatusCodeParameter, o_ProcedureMeasureId);
        }
    
        public virtual ObjectResult<usp_ProcedureMeasure_Select_Result> usp_ProcedureMeasure_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProcedureMeasureId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProcedureMeasureIdParameter = i_ProcedureMeasureId.HasValue ?
                new ObjectParameter("i_ProcedureMeasureId", i_ProcedureMeasureId) :
                new ObjectParameter("i_ProcedureMeasureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProcedureMeasure_Select_Result>("usp_ProcedureMeasure_Select", i_AppUserIdParameter, i_ProcedureMeasureIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ProcedureMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, Nullable<int> i_ProcedureId, string v_StatusCode, Nullable<int> i_ProcedureMeasureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ProcedureMeasureIdParameter = i_ProcedureMeasureId.HasValue ?
                new ObjectParameter("i_ProcedureMeasureId", i_ProcedureMeasureId) :
                new ObjectParameter("i_ProcedureMeasureId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcedureMeasure_Update", i_AppUserIdParameter, i_MeasureIdParameter, i_ProcedureIdParameter, v_StatusCodeParameter, i_ProcedureMeasureIdParameter);
        }
    
        public virtual int usp_ProfessionalType_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProfessionalTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProfessionalTypeIdParameter = i_ProfessionalTypeId.HasValue ?
                new ObjectParameter("i_ProfessionalTypeId", i_ProfessionalTypeId) :
                new ObjectParameter("i_ProfessionalTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProfessionalType_Delete", i_AppUserIdParameter, i_ProfessionalTypeIdParameter);
        }
    
        public virtual int usp_ProfessionalType_Insert(Nullable<int> i_AppUserId, string v_Name, string v_Description, string v_StatusCode, ObjectParameter o_ProfessionalTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProfessionalType_Insert", i_AppUserIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter, o_ProfessionalTypeId);
        }
    
        public virtual ObjectResult<usp_ProfessionalType_Select_Result> usp_ProfessionalType_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProfessionalTypeID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProfessionalTypeIDParameter = i_ProfessionalTypeID.HasValue ?
                new ObjectParameter("i_ProfessionalTypeID", i_ProfessionalTypeID) :
                new ObjectParameter("i_ProfessionalTypeID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProfessionalType_Select_Result>("usp_ProfessionalType_Select", i_AppUserIdParameter, i_ProfessionalTypeIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProfessionalType_Select_DD_Result> usp_ProfessionalType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProfessionalType_Select_DD_Result>("usp_ProfessionalType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_ProfessionalType_Update(Nullable<int> i_AppUserId, Nullable<int> i_ProfessionalTypeId, string v_Name, string v_Description, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProfessionalTypeIdParameter = i_ProfessionalTypeId.HasValue ?
                new ObjectParameter("i_ProfessionalTypeId", i_ProfessionalTypeId) :
                new ObjectParameter("i_ProfessionalTypeId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProfessionalType_Update", i_AppUserIdParameter, i_ProfessionalTypeIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Program_ByProviderID_Result> usp_Program_ByProviderID(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Program_ByProviderID_Result>("usp_Program_ByProviderID", i_AppUserIdParameter);
        }
    
        public virtual int usp_Program_Insert(Nullable<int> i_AppUserId, string vc_ProgramName, string vc_Description, string vc_StatusCode, Nullable<bool> vc_AllowAutoEnrollment, string v_ConflictType, Nullable<bool> b_IsAutomaticTermination, ObjectParameter o_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProgramNameParameter = vc_ProgramName != null ?
                new ObjectParameter("vc_ProgramName", vc_ProgramName) :
                new ObjectParameter("vc_ProgramName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_AllowAutoEnrollmentParameter = vc_AllowAutoEnrollment.HasValue ?
                new ObjectParameter("vc_AllowAutoEnrollment", vc_AllowAutoEnrollment) :
                new ObjectParameter("vc_AllowAutoEnrollment", typeof(bool));
    
            var v_ConflictTypeParameter = v_ConflictType != null ?
                new ObjectParameter("v_ConflictType", v_ConflictType) :
                new ObjectParameter("v_ConflictType", typeof(string));
    
            var b_IsAutomaticTerminationParameter = b_IsAutomaticTermination.HasValue ?
                new ObjectParameter("b_IsAutomaticTermination", b_IsAutomaticTermination) :
                new ObjectParameter("b_IsAutomaticTermination", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Program_Insert", i_AppUserIdParameter, vc_ProgramNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, vc_AllowAutoEnrollmentParameter, v_ConflictTypeParameter, b_IsAutomaticTerminationParameter, o_ProgramId);
        }
    
        public virtual ObjectResult<usp_Program_Search_Result> usp_Program_Search(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, string v_StatusCode, string v_ProgramName, string vc_DiseaseName, string v_Description, string vc_CareTeamName, string vc_TaskBundleName, string vc_CohortListName, Nullable<bool> b_AllowAutoEnrollment)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_ProgramNameParameter = v_ProgramName != null ?
                new ObjectParameter("v_ProgramName", v_ProgramName) :
                new ObjectParameter("v_ProgramName", typeof(string));
    
            var vc_DiseaseNameParameter = vc_DiseaseName != null ?
                new ObjectParameter("vc_DiseaseName", vc_DiseaseName) :
                new ObjectParameter("vc_DiseaseName", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var vc_CareTeamNameParameter = vc_CareTeamName != null ?
                new ObjectParameter("vc_CareTeamName", vc_CareTeamName) :
                new ObjectParameter("vc_CareTeamName", typeof(string));
    
            var vc_TaskBundleNameParameter = vc_TaskBundleName != null ?
                new ObjectParameter("vc_TaskBundleName", vc_TaskBundleName) :
                new ObjectParameter("vc_TaskBundleName", typeof(string));
    
            var vc_CohortListNameParameter = vc_CohortListName != null ?
                new ObjectParameter("vc_CohortListName", vc_CohortListName) :
                new ObjectParameter("vc_CohortListName", typeof(string));
    
            var b_AllowAutoEnrollmentParameter = b_AllowAutoEnrollment.HasValue ?
                new ObjectParameter("b_AllowAutoEnrollment", b_AllowAutoEnrollment) :
                new ObjectParameter("b_AllowAutoEnrollment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Program_Search_Result>("usp_Program_Search", i_AppUserIdParameter, i_ProgramIdParameter, v_StatusCodeParameter, v_ProgramNameParameter, vc_DiseaseNameParameter, v_DescriptionParameter, vc_CareTeamNameParameter, vc_TaskBundleNameParameter, vc_CohortListNameParameter, b_AllowAutoEnrollmentParameter);
        }
    
        public virtual ObjectResult<usp_Program_Select_Result> usp_Program_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Program_Select_Result>("usp_Program_Select", i_AppUserIdParameter, i_ProgramIdParameter);
        }
    
        public virtual ObjectResult<usp_Program_Select_DD_Result> usp_Program_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Program_Select_DD_Result>("usp_Program_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Program_update(Nullable<int> i_AppUserId, string vc_ProgramName, string vc_Description, string vc_StatusCode, Nullable<bool> vc_AllowAutoEnrollment, Nullable<int> i_ProgramId, string v_ConflictType, Nullable<bool> b_IsAutomaticTermination)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_ProgramNameParameter = vc_ProgramName != null ?
                new ObjectParameter("vc_ProgramName", vc_ProgramName) :
                new ObjectParameter("vc_ProgramName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_AllowAutoEnrollmentParameter = vc_AllowAutoEnrollment.HasValue ?
                new ObjectParameter("vc_AllowAutoEnrollment", vc_AllowAutoEnrollment) :
                new ObjectParameter("vc_AllowAutoEnrollment", typeof(bool));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var v_ConflictTypeParameter = v_ConflictType != null ?
                new ObjectParameter("v_ConflictType", v_ConflictType) :
                new ObjectParameter("v_ConflictType", typeof(string));
    
            var b_IsAutomaticTerminationParameter = b_IsAutomaticTermination.HasValue ?
                new ObjectParameter("b_IsAutomaticTermination", b_IsAutomaticTermination) :
                new ObjectParameter("b_IsAutomaticTermination", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Program_update", i_AppUserIdParameter, vc_ProgramNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, vc_AllowAutoEnrollmentParameter, i_ProgramIdParameter, v_ConflictTypeParameter, b_IsAutomaticTerminationParameter);
        }
    
        public virtual int usp_ProgramDisease_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProgramDiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramDiseaseIdParameter = i_ProgramDiseaseId.HasValue ?
                new ObjectParameter("i_ProgramDiseaseId", i_ProgramDiseaseId) :
                new ObjectParameter("i_ProgramDiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramDisease_Delete", i_AppUserIdParameter, i_ProgramDiseaseIdParameter);
        }
    
        public virtual int usp_ProgramDisease_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_DiseaseId, string v_StatusCode, ObjectParameter o_ProgramDiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramDisease_Insert", i_AppUserIdParameter, i_ProgramIdParameter, i_DiseaseIdParameter, v_StatusCodeParameter, o_ProgramDiseaseId);
        }
    
        public virtual ObjectResult<usp_ProgramDisease_Select_Result> usp_ProgramDisease_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_ProgramDiseaseId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_ProgramDiseaseIdParameter = i_ProgramDiseaseId.HasValue ?
                new ObjectParameter("i_ProgramDiseaseId", i_ProgramDiseaseId) :
                new ObjectParameter("i_ProgramDiseaseId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramDisease_Select_Result>("usp_ProgramDisease_Select", i_AppUserIdParameter, i_ProgramIdParameter, i_ProgramDiseaseIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ProgramDisease_Update(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_DiseaseId, string v_StatusCode, Nullable<int> i_ProgramDiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_ProgramDiseaseIdParameter = i_ProgramDiseaseId.HasValue ?
                new ObjectParameter("i_ProgramDiseaseId", i_ProgramDiseaseId) :
                new ObjectParameter("i_ProgramDiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramDisease_Update", i_AppUserIdParameter, i_ProgramIdParameter, i_DiseaseIdParameter, v_StatusCodeParameter, i_ProgramDiseaseIdParameter);
        }
    
        public virtual int usp_ProgramExclusionReasons_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeID, string vc_ExclusionReason, string vc_Description, string vc_StatusCode, ObjectParameter o_ProgramExcludeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIDParameter = i_ProgramTypeID.HasValue ?
                new ObjectParameter("i_ProgramTypeID", i_ProgramTypeID) :
                new ObjectParameter("i_ProgramTypeID", typeof(int));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramExclusionReasons_Insert", i_AppUserIdParameter, i_ProgramTypeIDParameter, vc_ExclusionReasonParameter, vc_DescriptionParameter, vc_StatusCodeParameter, o_ProgramExcludeID);
        }
    
        public virtual ObjectResult<usp_ProgramExclusionReasons_Select_Result> usp_ProgramExclusionReasons_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIdParameter = i_ProgramTypeId.HasValue ?
                new ObjectParameter("i_ProgramTypeId", i_ProgramTypeId) :
                new ObjectParameter("i_ProgramTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramExclusionReasons_Select_Result>("usp_ProgramExclusionReasons_Select", i_AppUserIdParameter, i_ProgramTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProgramExclusionReasons_Select_DD_Result> usp_ProgramExclusionReasons_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramExclusionReasons_Select_DD_Result>("usp_ProgramExclusionReasons_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_ProgramExclusionReasons_Update(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeID, string vc_ExclusionReason, string vc_Description, string vc_StatusCode, Nullable<int> i_ProgramExcludeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIDParameter = i_ProgramTypeID.HasValue ?
                new ObjectParameter("i_ProgramTypeID", i_ProgramTypeID) :
                new ObjectParameter("i_ProgramTypeID", typeof(int));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ProgramExcludeIDParameter = i_ProgramExcludeID.HasValue ?
                new ObjectParameter("i_ProgramExcludeID", i_ProgramExcludeID) :
                new ObjectParameter("i_ProgramExcludeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramExclusionReasons_Update", i_AppUserIdParameter, i_ProgramTypeIDParameter, vc_ExclusionReasonParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_ProgramExcludeIDParameter);
        }
    
        public virtual ObjectResult<usp_ProgramMappings_Select_Result> usp_ProgramMappings_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramMappings_Select_Result>("usp_ProgramMappings_Select", i_AppUserIdParameter, i_ProgramIdParameter);
        }
    
        public virtual int usp_ProgramName_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramName_Select", i_AppUserIdParameter, i_ProgramIdParameter);
        }
    
        public virtual ObjectResult<usp_ProgramProcedureConditionalFrequency_Select_Result> usp_ProgramProcedureConditionalFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_ProcedureID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_ProcedureIDParameter = i_ProcedureID.HasValue ?
                new ObjectParameter("i_ProcedureID", i_ProcedureID) :
                new ObjectParameter("i_ProcedureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramProcedureConditionalFrequency_Select_Result>("usp_ProgramProcedureConditionalFrequency_Select", i_AppUserIdParameter, i_ProgramIdParameter, i_ProcedureIDParameter);
        }
    
        public virtual int usp_ProgramProcedureFrequency_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_ProcedureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramProcedureFrequency_Delete", i_AppUserIdParameter, i_ProgramIdParameter, i_ProcedureIdParameter);
        }
    
        public virtual ObjectResult<usp_ProgramProcedureFrequency_Select_Result> usp_ProgramProcedureFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_ProcedureId, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramProcedureFrequency_Select_Result>("usp_ProgramProcedureFrequency_Select", i_AppUserIdParameter, i_ProgramIdParameter, i_ProcedureIdParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_ProgramProcedureFrequency_UserProcedureFrequency_Override(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramProcedureFrequency_UserProcedureFrequency_Override", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_ProgramProcedureTherapeuticDrugFrequency_Select_Result> usp_ProgramProcedureTherapeuticDrugFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<int> i_ProcedureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramProcedureTherapeuticDrugFrequency_Select_Result>("usp_ProgramProcedureTherapeuticDrugFrequency_Select", i_AppUserIdParameter, i_ProgramIdParameter, i_ProcedureIdParameter);
        }
    
        public virtual int usp_ProgramType_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIdParameter = i_ProgramTypeId.HasValue ?
                new ObjectParameter("i_ProgramTypeId", i_ProgramTypeId) :
                new ObjectParameter("i_ProgramTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramType_Delete", i_AppUserIdParameter, i_ProgramTypeIdParameter);
        }
    
        public virtual int usp_ProgramType_Insert(Nullable<int> i_AppUserId, string v_ProgramTypeName, string v_Description, string v_StatusCode, ObjectParameter o_ProgramTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ProgramTypeNameParameter = v_ProgramTypeName != null ?
                new ObjectParameter("v_ProgramTypeName", v_ProgramTypeName) :
                new ObjectParameter("v_ProgramTypeName", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramType_Insert", i_AppUserIdParameter, v_ProgramTypeNameParameter, v_DescriptionParameter, v_StatusCodeParameter, o_ProgramTypeId);
        }
    
        public virtual ObjectResult<usp_ProgramType_Select_Result> usp_ProgramType_Select(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIdParameter = i_ProgramTypeId.HasValue ?
                new ObjectParameter("i_ProgramTypeId", i_ProgramTypeId) :
                new ObjectParameter("i_ProgramTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProgramType_Select_Result>("usp_ProgramType_Select", i_AppUserIdParameter, i_ProgramTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_ProgramType_Update(Nullable<int> i_AppUserId, Nullable<int> i_ProgramTypeId, string v_Name, string v_Description, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramTypeIdParameter = i_ProgramTypeId.HasValue ?
                new ObjectParameter("i_ProgramTypeId", i_ProgramTypeId) :
                new ObjectParameter("i_ProgramTypeId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProgramType_Update", i_AppUserIdParameter, i_ProgramTypeIdParameter, v_NameParameter, v_DescriptionParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Provider_ProfileSelect_Result> usp_Provider_ProfileSelect(Nullable<int> i_AppUserId, Nullable<int> i_ProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Provider_ProfileSelect_Result>("usp_Provider_ProfileSelect", i_AppUserIdParameter, i_ProviderIDParameter);
        }
    
        public virtual int usp_Provider_ProfileUpdate(Nullable<int> i_AppUserId, Nullable<int> i_ProviderID, string v_NamePrefix, string v_NameSuffix, string v_FirstName, string v_MiddleName, string v_LastName, Nullable<int> i_ProviderTypeID, string v_OrganizationName, Nullable<bool> v_IsCareProvider, string v_InsuranceLicenseNumber, string v_SecondaryAlternativeProviderID, string v_Gender, string v_NPINumber, string v_ProviderURL, string v_DEANumber, string v_TaxID_EIN_SSN, string v_PrimaryAddressContactName, string v_PrimaryAddressContactTitle, Nullable<int> i_PrimaryAddressTypeID, string v_PrimaryAddressLine1, string v_PrimaryAddressLine2, string v_PrimaryAddressLine3, string v_PrimaryAddressCity, Nullable<int> i_PrimaryAddressStateCodeID, Nullable<int> i_PrimaryAddressCountyID, Nullable<int> i_PrimaryAddressCountryCodeID, string v_PrimaryAddressPostalCode, string v_PrimaryPhoneContactName, string v_PrimaryPhoneContactTitle, Nullable<int> i_PrimaryPhoneTypeID, string v_PrimaryPhoneNumber, string v_PrimaryPhoneNumberExtension, string v_PrimaryEmailAddressContactName, string v_PrimaryEmailAddressContactTilte, Nullable<int> i_PrimaryEmailAddressTypeID, string v_PrimaryEmailAddress, string v_UserStatusCode, string v_SecondaryAddressContactName, string v_SecondaryAddressContactTitle, Nullable<int> i_SecondaryAddressTypeID, string v_SecondaryAddressLine1, string v_SecondaryAddressLine2, string v_SecondaryAddressLine3, string v_SecondaryAddressCity, Nullable<int> v_SecondaryAddressStateCodeID, Nullable<int> i_SecondaryAddressCountyID, Nullable<int> i_SecondaryAddressCountryCodeID, string v_SecondaryAddressPostalCode, string v_SecondaryPhoneContactName, string v_SecondaryPhoneContactTitle, Nullable<int> i_SecondaryPhoneTypeID, string v_SecondaryPhoneNumber, string v_SecondaryPhoneNumberExtension, string v_TertiaryPhoneContactName, string v_TertiaryPhoneContactTitle, Nullable<int> v_TertiaryPhoneTypeID, string v_TertiaryPhoneNumber, string v_TertiaryPhoneNumberExtension, string v_SecondaryEmailAddressContactName, string v_SecondaryEmailAddressContactTitle, Nullable<int> i_SecondaryEmailAddresTypeID, string v_SecondaryEmailAddress)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var v_NamePrefixParameter = v_NamePrefix != null ?
                new ObjectParameter("v_NamePrefix", v_NamePrefix) :
                new ObjectParameter("v_NamePrefix", typeof(string));
    
            var v_NameSuffixParameter = v_NameSuffix != null ?
                new ObjectParameter("v_NameSuffix", v_NameSuffix) :
                new ObjectParameter("v_NameSuffix", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_MiddleNameParameter = v_MiddleName != null ?
                new ObjectParameter("v_MiddleName", v_MiddleName) :
                new ObjectParameter("v_MiddleName", typeof(string));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var i_ProviderTypeIDParameter = i_ProviderTypeID.HasValue ?
                new ObjectParameter("i_ProviderTypeID", i_ProviderTypeID) :
                new ObjectParameter("i_ProviderTypeID", typeof(int));
    
            var v_OrganizationNameParameter = v_OrganizationName != null ?
                new ObjectParameter("v_OrganizationName", v_OrganizationName) :
                new ObjectParameter("v_OrganizationName", typeof(string));
    
            var v_IsCareProviderParameter = v_IsCareProvider.HasValue ?
                new ObjectParameter("v_IsCareProvider", v_IsCareProvider) :
                new ObjectParameter("v_IsCareProvider", typeof(bool));
    
            var v_InsuranceLicenseNumberParameter = v_InsuranceLicenseNumber != null ?
                new ObjectParameter("v_InsuranceLicenseNumber", v_InsuranceLicenseNumber) :
                new ObjectParameter("v_InsuranceLicenseNumber", typeof(string));
    
            var v_SecondaryAlternativeProviderIDParameter = v_SecondaryAlternativeProviderID != null ?
                new ObjectParameter("v_SecondaryAlternativeProviderID", v_SecondaryAlternativeProviderID) :
                new ObjectParameter("v_SecondaryAlternativeProviderID", typeof(string));
    
            var v_GenderParameter = v_Gender != null ?
                new ObjectParameter("v_Gender", v_Gender) :
                new ObjectParameter("v_Gender", typeof(string));
    
            var v_NPINumberParameter = v_NPINumber != null ?
                new ObjectParameter("v_NPINumber", v_NPINumber) :
                new ObjectParameter("v_NPINumber", typeof(string));
    
            var v_ProviderURLParameter = v_ProviderURL != null ?
                new ObjectParameter("v_ProviderURL", v_ProviderURL) :
                new ObjectParameter("v_ProviderURL", typeof(string));
    
            var v_DEANumberParameter = v_DEANumber != null ?
                new ObjectParameter("v_DEANumber", v_DEANumber) :
                new ObjectParameter("v_DEANumber", typeof(string));
    
            var v_TaxID_EIN_SSNParameter = v_TaxID_EIN_SSN != null ?
                new ObjectParameter("v_TaxID_EIN_SSN", v_TaxID_EIN_SSN) :
                new ObjectParameter("v_TaxID_EIN_SSN", typeof(string));
    
            var v_PrimaryAddressContactNameParameter = v_PrimaryAddressContactName != null ?
                new ObjectParameter("v_PrimaryAddressContactName", v_PrimaryAddressContactName) :
                new ObjectParameter("v_PrimaryAddressContactName", typeof(string));
    
            var v_PrimaryAddressContactTitleParameter = v_PrimaryAddressContactTitle != null ?
                new ObjectParameter("v_PrimaryAddressContactTitle", v_PrimaryAddressContactTitle) :
                new ObjectParameter("v_PrimaryAddressContactTitle", typeof(string));
    
            var i_PrimaryAddressTypeIDParameter = i_PrimaryAddressTypeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressTypeID", i_PrimaryAddressTypeID) :
                new ObjectParameter("i_PrimaryAddressTypeID", typeof(int));
    
            var v_PrimaryAddressLine1Parameter = v_PrimaryAddressLine1 != null ?
                new ObjectParameter("v_PrimaryAddressLine1", v_PrimaryAddressLine1) :
                new ObjectParameter("v_PrimaryAddressLine1", typeof(string));
    
            var v_PrimaryAddressLine2Parameter = v_PrimaryAddressLine2 != null ?
                new ObjectParameter("v_PrimaryAddressLine2", v_PrimaryAddressLine2) :
                new ObjectParameter("v_PrimaryAddressLine2", typeof(string));
    
            var v_PrimaryAddressLine3Parameter = v_PrimaryAddressLine3 != null ?
                new ObjectParameter("v_PrimaryAddressLine3", v_PrimaryAddressLine3) :
                new ObjectParameter("v_PrimaryAddressLine3", typeof(string));
    
            var v_PrimaryAddressCityParameter = v_PrimaryAddressCity != null ?
                new ObjectParameter("v_PrimaryAddressCity", v_PrimaryAddressCity) :
                new ObjectParameter("v_PrimaryAddressCity", typeof(string));
    
            var i_PrimaryAddressStateCodeIDParameter = i_PrimaryAddressStateCodeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressStateCodeID", i_PrimaryAddressStateCodeID) :
                new ObjectParameter("i_PrimaryAddressStateCodeID", typeof(int));
    
            var i_PrimaryAddressCountyIDParameter = i_PrimaryAddressCountyID.HasValue ?
                new ObjectParameter("i_PrimaryAddressCountyID", i_PrimaryAddressCountyID) :
                new ObjectParameter("i_PrimaryAddressCountyID", typeof(int));
    
            var i_PrimaryAddressCountryCodeIDParameter = i_PrimaryAddressCountryCodeID.HasValue ?
                new ObjectParameter("i_PrimaryAddressCountryCodeID", i_PrimaryAddressCountryCodeID) :
                new ObjectParameter("i_PrimaryAddressCountryCodeID", typeof(int));
    
            var v_PrimaryAddressPostalCodeParameter = v_PrimaryAddressPostalCode != null ?
                new ObjectParameter("v_PrimaryAddressPostalCode", v_PrimaryAddressPostalCode) :
                new ObjectParameter("v_PrimaryAddressPostalCode", typeof(string));
    
            var v_PrimaryPhoneContactNameParameter = v_PrimaryPhoneContactName != null ?
                new ObjectParameter("v_PrimaryPhoneContactName", v_PrimaryPhoneContactName) :
                new ObjectParameter("v_PrimaryPhoneContactName", typeof(string));
    
            var v_PrimaryPhoneContactTitleParameter = v_PrimaryPhoneContactTitle != null ?
                new ObjectParameter("v_PrimaryPhoneContactTitle", v_PrimaryPhoneContactTitle) :
                new ObjectParameter("v_PrimaryPhoneContactTitle", typeof(string));
    
            var i_PrimaryPhoneTypeIDParameter = i_PrimaryPhoneTypeID.HasValue ?
                new ObjectParameter("i_PrimaryPhoneTypeID", i_PrimaryPhoneTypeID) :
                new ObjectParameter("i_PrimaryPhoneTypeID", typeof(int));
    
            var v_PrimaryPhoneNumberParameter = v_PrimaryPhoneNumber != null ?
                new ObjectParameter("v_PrimaryPhoneNumber", v_PrimaryPhoneNumber) :
                new ObjectParameter("v_PrimaryPhoneNumber", typeof(string));
    
            var v_PrimaryPhoneNumberExtensionParameter = v_PrimaryPhoneNumberExtension != null ?
                new ObjectParameter("v_PrimaryPhoneNumberExtension", v_PrimaryPhoneNumberExtension) :
                new ObjectParameter("v_PrimaryPhoneNumberExtension", typeof(string));
    
            var v_PrimaryEmailAddressContactNameParameter = v_PrimaryEmailAddressContactName != null ?
                new ObjectParameter("v_PrimaryEmailAddressContactName", v_PrimaryEmailAddressContactName) :
                new ObjectParameter("v_PrimaryEmailAddressContactName", typeof(string));
    
            var v_PrimaryEmailAddressContactTilteParameter = v_PrimaryEmailAddressContactTilte != null ?
                new ObjectParameter("v_PrimaryEmailAddressContactTilte", v_PrimaryEmailAddressContactTilte) :
                new ObjectParameter("v_PrimaryEmailAddressContactTilte", typeof(string));
    
            var i_PrimaryEmailAddressTypeIDParameter = i_PrimaryEmailAddressTypeID.HasValue ?
                new ObjectParameter("i_PrimaryEmailAddressTypeID", i_PrimaryEmailAddressTypeID) :
                new ObjectParameter("i_PrimaryEmailAddressTypeID", typeof(int));
    
            var v_PrimaryEmailAddressParameter = v_PrimaryEmailAddress != null ?
                new ObjectParameter("v_PrimaryEmailAddress", v_PrimaryEmailAddress) :
                new ObjectParameter("v_PrimaryEmailAddress", typeof(string));
    
            var v_UserStatusCodeParameter = v_UserStatusCode != null ?
                new ObjectParameter("v_UserStatusCode", v_UserStatusCode) :
                new ObjectParameter("v_UserStatusCode", typeof(string));
    
            var v_SecondaryAddressContactNameParameter = v_SecondaryAddressContactName != null ?
                new ObjectParameter("v_SecondaryAddressContactName", v_SecondaryAddressContactName) :
                new ObjectParameter("v_SecondaryAddressContactName", typeof(string));
    
            var v_SecondaryAddressContactTitleParameter = v_SecondaryAddressContactTitle != null ?
                new ObjectParameter("v_SecondaryAddressContactTitle", v_SecondaryAddressContactTitle) :
                new ObjectParameter("v_SecondaryAddressContactTitle", typeof(string));
    
            var i_SecondaryAddressTypeIDParameter = i_SecondaryAddressTypeID.HasValue ?
                new ObjectParameter("i_SecondaryAddressTypeID", i_SecondaryAddressTypeID) :
                new ObjectParameter("i_SecondaryAddressTypeID", typeof(int));
    
            var v_SecondaryAddressLine1Parameter = v_SecondaryAddressLine1 != null ?
                new ObjectParameter("v_SecondaryAddressLine1", v_SecondaryAddressLine1) :
                new ObjectParameter("v_SecondaryAddressLine1", typeof(string));
    
            var v_SecondaryAddressLine2Parameter = v_SecondaryAddressLine2 != null ?
                new ObjectParameter("v_SecondaryAddressLine2", v_SecondaryAddressLine2) :
                new ObjectParameter("v_SecondaryAddressLine2", typeof(string));
    
            var v_SecondaryAddressLine3Parameter = v_SecondaryAddressLine3 != null ?
                new ObjectParameter("v_SecondaryAddressLine3", v_SecondaryAddressLine3) :
                new ObjectParameter("v_SecondaryAddressLine3", typeof(string));
    
            var v_SecondaryAddressCityParameter = v_SecondaryAddressCity != null ?
                new ObjectParameter("v_SecondaryAddressCity", v_SecondaryAddressCity) :
                new ObjectParameter("v_SecondaryAddressCity", typeof(string));
    
            var v_SecondaryAddressStateCodeIDParameter = v_SecondaryAddressStateCodeID.HasValue ?
                new ObjectParameter("v_SecondaryAddressStateCodeID", v_SecondaryAddressStateCodeID) :
                new ObjectParameter("v_SecondaryAddressStateCodeID", typeof(int));
    
            var i_SecondaryAddressCountyIDParameter = i_SecondaryAddressCountyID.HasValue ?
                new ObjectParameter("i_SecondaryAddressCountyID", i_SecondaryAddressCountyID) :
                new ObjectParameter("i_SecondaryAddressCountyID", typeof(int));
    
            var i_SecondaryAddressCountryCodeIDParameter = i_SecondaryAddressCountryCodeID.HasValue ?
                new ObjectParameter("i_SecondaryAddressCountryCodeID", i_SecondaryAddressCountryCodeID) :
                new ObjectParameter("i_SecondaryAddressCountryCodeID", typeof(int));
    
            var v_SecondaryAddressPostalCodeParameter = v_SecondaryAddressPostalCode != null ?
                new ObjectParameter("v_SecondaryAddressPostalCode", v_SecondaryAddressPostalCode) :
                new ObjectParameter("v_SecondaryAddressPostalCode", typeof(string));
    
            var v_SecondaryPhoneContactNameParameter = v_SecondaryPhoneContactName != null ?
                new ObjectParameter("v_SecondaryPhoneContactName", v_SecondaryPhoneContactName) :
                new ObjectParameter("v_SecondaryPhoneContactName", typeof(string));
    
            var v_SecondaryPhoneContactTitleParameter = v_SecondaryPhoneContactTitle != null ?
                new ObjectParameter("v_SecondaryPhoneContactTitle", v_SecondaryPhoneContactTitle) :
                new ObjectParameter("v_SecondaryPhoneContactTitle", typeof(string));
    
            var i_SecondaryPhoneTypeIDParameter = i_SecondaryPhoneTypeID.HasValue ?
                new ObjectParameter("i_SecondaryPhoneTypeID", i_SecondaryPhoneTypeID) :
                new ObjectParameter("i_SecondaryPhoneTypeID", typeof(int));
    
            var v_SecondaryPhoneNumberParameter = v_SecondaryPhoneNumber != null ?
                new ObjectParameter("v_SecondaryPhoneNumber", v_SecondaryPhoneNumber) :
                new ObjectParameter("v_SecondaryPhoneNumber", typeof(string));
    
            var v_SecondaryPhoneNumberExtensionParameter = v_SecondaryPhoneNumberExtension != null ?
                new ObjectParameter("v_SecondaryPhoneNumberExtension", v_SecondaryPhoneNumberExtension) :
                new ObjectParameter("v_SecondaryPhoneNumberExtension", typeof(string));
    
            var v_TertiaryPhoneContactNameParameter = v_TertiaryPhoneContactName != null ?
                new ObjectParameter("v_TertiaryPhoneContactName", v_TertiaryPhoneContactName) :
                new ObjectParameter("v_TertiaryPhoneContactName", typeof(string));
    
            var v_TertiaryPhoneContactTitleParameter = v_TertiaryPhoneContactTitle != null ?
                new ObjectParameter("v_TertiaryPhoneContactTitle", v_TertiaryPhoneContactTitle) :
                new ObjectParameter("v_TertiaryPhoneContactTitle", typeof(string));
    
            var v_TertiaryPhoneTypeIDParameter = v_TertiaryPhoneTypeID.HasValue ?
                new ObjectParameter("v_TertiaryPhoneTypeID", v_TertiaryPhoneTypeID) :
                new ObjectParameter("v_TertiaryPhoneTypeID", typeof(int));
    
            var v_TertiaryPhoneNumberParameter = v_TertiaryPhoneNumber != null ?
                new ObjectParameter("v_TertiaryPhoneNumber", v_TertiaryPhoneNumber) :
                new ObjectParameter("v_TertiaryPhoneNumber", typeof(string));
    
            var v_TertiaryPhoneNumberExtensionParameter = v_TertiaryPhoneNumberExtension != null ?
                new ObjectParameter("v_TertiaryPhoneNumberExtension", v_TertiaryPhoneNumberExtension) :
                new ObjectParameter("v_TertiaryPhoneNumberExtension", typeof(string));
    
            var v_SecondaryEmailAddressContactNameParameter = v_SecondaryEmailAddressContactName != null ?
                new ObjectParameter("v_SecondaryEmailAddressContactName", v_SecondaryEmailAddressContactName) :
                new ObjectParameter("v_SecondaryEmailAddressContactName", typeof(string));
    
            var v_SecondaryEmailAddressContactTitleParameter = v_SecondaryEmailAddressContactTitle != null ?
                new ObjectParameter("v_SecondaryEmailAddressContactTitle", v_SecondaryEmailAddressContactTitle) :
                new ObjectParameter("v_SecondaryEmailAddressContactTitle", typeof(string));
    
            var i_SecondaryEmailAddresTypeIDParameter = i_SecondaryEmailAddresTypeID.HasValue ?
                new ObjectParameter("i_SecondaryEmailAddresTypeID", i_SecondaryEmailAddresTypeID) :
                new ObjectParameter("i_SecondaryEmailAddresTypeID", typeof(int));
    
            var v_SecondaryEmailAddressParameter = v_SecondaryEmailAddress != null ?
                new ObjectParameter("v_SecondaryEmailAddress", v_SecondaryEmailAddress) :
                new ObjectParameter("v_SecondaryEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Provider_ProfileUpdate", i_AppUserIdParameter, i_ProviderIDParameter, v_NamePrefixParameter, v_NameSuffixParameter, v_FirstNameParameter, v_MiddleNameParameter, v_LastNameParameter, i_ProviderTypeIDParameter, v_OrganizationNameParameter, v_IsCareProviderParameter, v_InsuranceLicenseNumberParameter, v_SecondaryAlternativeProviderIDParameter, v_GenderParameter, v_NPINumberParameter, v_ProviderURLParameter, v_DEANumberParameter, v_TaxID_EIN_SSNParameter, v_PrimaryAddressContactNameParameter, v_PrimaryAddressContactTitleParameter, i_PrimaryAddressTypeIDParameter, v_PrimaryAddressLine1Parameter, v_PrimaryAddressLine2Parameter, v_PrimaryAddressLine3Parameter, v_PrimaryAddressCityParameter, i_PrimaryAddressStateCodeIDParameter, i_PrimaryAddressCountyIDParameter, i_PrimaryAddressCountryCodeIDParameter, v_PrimaryAddressPostalCodeParameter, v_PrimaryPhoneContactNameParameter, v_PrimaryPhoneContactTitleParameter, i_PrimaryPhoneTypeIDParameter, v_PrimaryPhoneNumberParameter, v_PrimaryPhoneNumberExtensionParameter, v_PrimaryEmailAddressContactNameParameter, v_PrimaryEmailAddressContactTilteParameter, i_PrimaryEmailAddressTypeIDParameter, v_PrimaryEmailAddressParameter, v_UserStatusCodeParameter, v_SecondaryAddressContactNameParameter, v_SecondaryAddressContactTitleParameter, i_SecondaryAddressTypeIDParameter, v_SecondaryAddressLine1Parameter, v_SecondaryAddressLine2Parameter, v_SecondaryAddressLine3Parameter, v_SecondaryAddressCityParameter, v_SecondaryAddressStateCodeIDParameter, i_SecondaryAddressCountyIDParameter, i_SecondaryAddressCountryCodeIDParameter, v_SecondaryAddressPostalCodeParameter, v_SecondaryPhoneContactNameParameter, v_SecondaryPhoneContactTitleParameter, i_SecondaryPhoneTypeIDParameter, v_SecondaryPhoneNumberParameter, v_SecondaryPhoneNumberExtensionParameter, v_TertiaryPhoneContactNameParameter, v_TertiaryPhoneContactTitleParameter, v_TertiaryPhoneTypeIDParameter, v_TertiaryPhoneNumberParameter, v_TertiaryPhoneNumberExtensionParameter, v_SecondaryEmailAddressContactNameParameter, v_SecondaryEmailAddressContactTitleParameter, i_SecondaryEmailAddresTypeIDParameter, v_SecondaryEmailAddressParameter);
        }
    
        public virtual ObjectResult<usp_ProviderName_Search_Result> usp_ProviderName_Search(Nullable<int> i_AppUserId, string vc_UserFirstorLastName, Nullable<int> i_SecurityRoleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_UserFirstorLastNameParameter = vc_UserFirstorLastName != null ?
                new ObjectParameter("vc_UserFirstorLastName", vc_UserFirstorLastName) :
                new ObjectParameter("vc_UserFirstorLastName", typeof(string));
    
            var i_SecurityRoleIDParameter = i_SecurityRoleID.HasValue ?
                new ObjectParameter("i_SecurityRoleID", i_SecurityRoleID) :
                new ObjectParameter("i_SecurityRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProviderName_Search_Result>("usp_ProviderName_Search", i_AppUserIdParameter, vc_UserFirstorLastNameParameter, i_SecurityRoleIDParameter);
        }
    
        public virtual ObjectResult<usp_ProviderRole_Select_DD_Result> usp_ProviderRole_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProviderRole_Select_DD_Result>("usp_ProviderRole_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Question_QuestionSetQuestion_Insert(Nullable<int> i_AppUserId, Nullable<int> i_QuestionTypeID, string vc_Description, string vc_QuestionText, Nullable<int> i_AnswerTypeId, Nullable<int> i_QuestionSetId, string vc_StatusCode, string vc_ImageNameAndPath, string vc_ImageContentType, string vc_UsercontrolName, Nullable<bool> i_IsRequiredQuestion, Nullable<bool> i_IsPrerequisite, string vc_DataSource, ObjectParameter o_QuestionId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionTypeIDParameter = i_QuestionTypeID.HasValue ?
                new ObjectParameter("i_QuestionTypeID", i_QuestionTypeID) :
                new ObjectParameter("i_QuestionTypeID", typeof(int));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_QuestionTextParameter = vc_QuestionText != null ?
                new ObjectParameter("vc_QuestionText", vc_QuestionText) :
                new ObjectParameter("vc_QuestionText", typeof(string));
    
            var i_AnswerTypeIdParameter = i_AnswerTypeId.HasValue ?
                new ObjectParameter("i_AnswerTypeId", i_AnswerTypeId) :
                new ObjectParameter("i_AnswerTypeId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_ImageNameAndPathParameter = vc_ImageNameAndPath != null ?
                new ObjectParameter("vc_ImageNameAndPath", vc_ImageNameAndPath) :
                new ObjectParameter("vc_ImageNameAndPath", typeof(string));
    
            var vc_ImageContentTypeParameter = vc_ImageContentType != null ?
                new ObjectParameter("vc_ImageContentType", vc_ImageContentType) :
                new ObjectParameter("vc_ImageContentType", typeof(string));
    
            var vc_UsercontrolNameParameter = vc_UsercontrolName != null ?
                new ObjectParameter("vc_UsercontrolName", vc_UsercontrolName) :
                new ObjectParameter("vc_UsercontrolName", typeof(string));
    
            var i_IsRequiredQuestionParameter = i_IsRequiredQuestion.HasValue ?
                new ObjectParameter("i_IsRequiredQuestion", i_IsRequiredQuestion) :
                new ObjectParameter("i_IsRequiredQuestion", typeof(bool));
    
            var i_IsPrerequisiteParameter = i_IsPrerequisite.HasValue ?
                new ObjectParameter("i_IsPrerequisite", i_IsPrerequisite) :
                new ObjectParameter("i_IsPrerequisite", typeof(bool));
    
            var vc_DataSourceParameter = vc_DataSource != null ?
                new ObjectParameter("vc_DataSource", vc_DataSource) :
                new ObjectParameter("vc_DataSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Question_QuestionSetQuestion_Insert", i_AppUserIdParameter, i_QuestionTypeIDParameter, vc_DescriptionParameter, vc_QuestionTextParameter, i_AnswerTypeIdParameter, i_QuestionSetIdParameter, vc_StatusCodeParameter, vc_ImageNameAndPathParameter, vc_ImageContentTypeParameter, vc_UsercontrolNameParameter, i_IsRequiredQuestionParameter, i_IsPrerequisiteParameter, vc_DataSourceParameter, o_QuestionId);
        }
    
        public virtual ObjectResult<usp_Question_QuestionSetQuestion_Select_Result> usp_Question_QuestionSetQuestion_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, Nullable<int> i_QuestionSetId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Question_QuestionSetQuestion_Select_Result>("usp_Question_QuestionSetQuestion_Select", i_AppUserIdParameter, i_QuestionIdParameter, i_QuestionSetIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_Question_QuestionSetQuestion_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, Nullable<int> i_QuestionTypeID, string vc_Description, string vc_QuestionText, Nullable<int> i_AnswerTypeId, Nullable<int> i_QuestionSetId, string vc_StatusCode, string vc_ImageNameAndPath, string vc_ImageContentType, string vc_UsercontrolName, Nullable<bool> i_IsRequiredQuestion, Nullable<bool> i_IsPrerequisite, string vc_DataSource)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_QuestionTypeIDParameter = i_QuestionTypeID.HasValue ?
                new ObjectParameter("i_QuestionTypeID", i_QuestionTypeID) :
                new ObjectParameter("i_QuestionTypeID", typeof(int));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_QuestionTextParameter = vc_QuestionText != null ?
                new ObjectParameter("vc_QuestionText", vc_QuestionText) :
                new ObjectParameter("vc_QuestionText", typeof(string));
    
            var i_AnswerTypeIdParameter = i_AnswerTypeId.HasValue ?
                new ObjectParameter("i_AnswerTypeId", i_AnswerTypeId) :
                new ObjectParameter("i_AnswerTypeId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_ImageNameAndPathParameter = vc_ImageNameAndPath != null ?
                new ObjectParameter("vc_ImageNameAndPath", vc_ImageNameAndPath) :
                new ObjectParameter("vc_ImageNameAndPath", typeof(string));
    
            var vc_ImageContentTypeParameter = vc_ImageContentType != null ?
                new ObjectParameter("vc_ImageContentType", vc_ImageContentType) :
                new ObjectParameter("vc_ImageContentType", typeof(string));
    
            var vc_UsercontrolNameParameter = vc_UsercontrolName != null ?
                new ObjectParameter("vc_UsercontrolName", vc_UsercontrolName) :
                new ObjectParameter("vc_UsercontrolName", typeof(string));
    
            var i_IsRequiredQuestionParameter = i_IsRequiredQuestion.HasValue ?
                new ObjectParameter("i_IsRequiredQuestion", i_IsRequiredQuestion) :
                new ObjectParameter("i_IsRequiredQuestion", typeof(bool));
    
            var i_IsPrerequisiteParameter = i_IsPrerequisite.HasValue ?
                new ObjectParameter("i_IsPrerequisite", i_IsPrerequisite) :
                new ObjectParameter("i_IsPrerequisite", typeof(bool));
    
            var vc_DataSourceParameter = vc_DataSource != null ?
                new ObjectParameter("vc_DataSource", vc_DataSource) :
                new ObjectParameter("vc_DataSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Question_QuestionSetQuestion_Update", i_AppUserIdParameter, i_QuestionIdParameter, i_QuestionTypeIDParameter, vc_DescriptionParameter, vc_QuestionTextParameter, i_AnswerTypeIdParameter, i_QuestionSetIdParameter, vc_StatusCodeParameter, vc_ImageNameAndPathParameter, vc_ImageContentTypeParameter, vc_UsercontrolNameParameter, i_IsRequiredQuestionParameter, i_IsPrerequisiteParameter, vc_DataSourceParameter);
        }
    
        public virtual ObjectResult<usp_Question_Select_Result> usp_Question_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Question_Select_Result>("usp_Question_Select", i_AppUserIdParameter, i_QuestionIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Question_Select_ByQuestionSet_DD_Result> usp_Question_Select_ByQuestionSet_DD(Nullable<int> i_AppUserId, Nullable<int> i_QuestionSetID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionSetIDParameter = i_QuestionSetID.HasValue ?
                new ObjectParameter("i_QuestionSetID", i_QuestionSetID) :
                new ObjectParameter("i_QuestionSetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Question_Select_ByQuestionSet_DD_Result>("usp_Question_Select_ByQuestionSet_DD", i_AppUserIdParameter, i_QuestionSetIDParameter);
        }
    
        public virtual ObjectResult<usp_Question_Select_DD_Result> usp_Question_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Question_Select_DD_Result>("usp_Question_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Assignment_DD_Result> usp_Questionaire_Assignment_DD(Nullable<int> i_AppUserId, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Assignment_DD_Result>("usp_Questionaire_Assignment_DD", i_AppUserIdParameter, i_ProgramIDParameter);
        }
    
        public virtual int usp_Questionaire_Insert(Nullable<int> i_AppUserId, string vc_QuestionaireName, string vc_Description, Nullable<int> i_QuestionaireTypeId, Nullable<int> i_DiseaseID, string vc_StatusCode, Nullable<int> i_MaxScore, ObjectParameter i_QuestionaireId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_QuestionaireNameParameter = vc_QuestionaireName != null ?
                new ObjectParameter("vc_QuestionaireName", vc_QuestionaireName) :
                new ObjectParameter("vc_QuestionaireName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_QuestionaireTypeIdParameter = i_QuestionaireTypeId.HasValue ?
                new ObjectParameter("i_QuestionaireTypeId", i_QuestionaireTypeId) :
                new ObjectParameter("i_QuestionaireTypeId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MaxScoreParameter = i_MaxScore.HasValue ?
                new ObjectParameter("i_MaxScore", i_MaxScore) :
                new ObjectParameter("i_MaxScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Questionaire_Insert", i_AppUserIdParameter, vc_QuestionaireNameParameter, vc_DescriptionParameter, i_QuestionaireTypeIdParameter, i_DiseaseIDParameter, vc_StatusCodeParameter, i_MaxScoreParameter, i_QuestionaireId);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_Result> usp_Questionaire_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_Result>("usp_Questionaire_Select", i_AppUserIdParameter, i_QuestionaireIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_All_Result> usp_Questionaire_Select_All(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_All_Result>("usp_Questionaire_Select_All", i_AppUserIdParameter, i_QuestionaireIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_DD_Result> usp_Questionaire_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_DD_Result>("usp_Questionaire_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_Survey_Result> usp_Questionaire_Select_Survey(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_UserQuestionaireID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_UserQuestionaireIDParameter = i_UserQuestionaireID.HasValue ?
                new ObjectParameter("i_UserQuestionaireID", i_UserQuestionaireID) :
                new ObjectParameter("i_UserQuestionaireID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_Survey_Result>("usp_Questionaire_Select_Survey", i_AppUserIdParameter, i_QuestionaireIdParameter, i_UserQuestionaireIDParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_TreeView_Result> usp_Questionaire_Select_TreeView(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_TreeView_Result>("usp_Questionaire_Select_TreeView", i_AppUserIdParameter, i_QuestionaireIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_Questionaire_Select_Wrapper_Result> usp_Questionaire_Select_Wrapper(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Questionaire_Select_Wrapper_Result>("usp_Questionaire_Select_Wrapper", i_AppUserIdParameter);
        }
    
        public virtual int usp_Questionaire_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, string vc_QuestionaireName, string vc_Description, Nullable<int> i_QuestionaireTypeId, Nullable<int> i_DiseaseID, Nullable<int> i_MaxScore, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var vc_QuestionaireNameParameter = vc_QuestionaireName != null ?
                new ObjectParameter("vc_QuestionaireName", vc_QuestionaireName) :
                new ObjectParameter("vc_QuestionaireName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_QuestionaireTypeIdParameter = i_QuestionaireTypeId.HasValue ?
                new ObjectParameter("i_QuestionaireTypeId", i_QuestionaireTypeId) :
                new ObjectParameter("i_QuestionaireTypeId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var i_MaxScoreParameter = i_MaxScore.HasValue ?
                new ObjectParameter("i_MaxScore", i_MaxScore) :
                new ObjectParameter("i_MaxScore", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Questionaire_Update", i_AppUserIdParameter, i_QuestionaireIdParameter, vc_QuestionaireNameParameter, vc_DescriptionParameter, i_QuestionaireTypeIdParameter, i_DiseaseIDParameter, i_MaxScoreParameter, vc_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_QuestionaireAnalytics_DashBoard_Result> usp_QuestionaireAnalytics_DashBoard(Nullable<int> i_AppUserId, Nullable<int> i_ProviderUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderUserIDParameter = i_ProviderUserID.HasValue ?
                new ObjectParameter("i_ProviderUserID", i_ProviderUserID) :
                new ObjectParameter("i_ProviderUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireAnalytics_DashBoard_Result>("usp_QuestionaireAnalytics_DashBoard", i_AppUserIdParameter, i_ProviderUserIDParameter);
        }
    
        public virtual int usp_QuestionaireQuestionSet_Delete(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_QuestionSetId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionaireQuestionSet_Delete", i_AppUserIdParameter, i_QuestionaireIdParameter, i_QuestionSetIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionaireQuestionSet_SelectByQuestionSetId_Result> usp_QuestionaireQuestionSet_SelectByQuestionSetId(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_QuestionSetId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireQuestionSet_SelectByQuestionSetId_Result>("usp_QuestionaireQuestionSet_SelectByQuestionSetId", i_AppUserIdParameter, i_QuestionaireIdParameter, i_QuestionSetIdParameter);
        }
    
        public virtual ObjectResult<string> usp_QuestionaireRecommendation_Drug_Select(Nullable<int> i_AppUserId, Nullable<int> i_DrugCodeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DrugCodeIdParameter = i_DrugCodeId.HasValue ?
                new ObjectParameter("i_DrugCodeId", i_DrugCodeId) :
                new ObjectParameter("i_DrugCodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_QuestionaireRecommendation_Drug_Select", i_AppUserIdParameter, i_DrugCodeIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionaireRecommendation_Select_Result> usp_QuestionaireRecommendation_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireRecommendationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireRecommendationIdParameter = i_QuestionaireRecommendationId.HasValue ?
                new ObjectParameter("i_QuestionaireRecommendationId", i_QuestionaireRecommendationId) :
                new ObjectParameter("i_QuestionaireRecommendationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireRecommendation_Select_Result>("usp_QuestionaireRecommendation_Select", i_AppUserIdParameter, i_QuestionaireRecommendationIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionaireTitration_Select_DD_Result> usp_QuestionaireTitration_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireTitration_Select_DD_Result>("usp_QuestionaireTitration_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_QuestionaireType_Insert(Nullable<int> i_AppUserId, string vc_QuestionaireTypeName, string vc_Description, string vc_StatusCode, ObjectParameter o_QuestionaireTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_QuestionaireTypeNameParameter = vc_QuestionaireTypeName != null ?
                new ObjectParameter("vc_QuestionaireTypeName", vc_QuestionaireTypeName) :
                new ObjectParameter("vc_QuestionaireTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionaireType_Insert", i_AppUserIdParameter, vc_QuestionaireTypeNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, o_QuestionaireTypeId);
        }
    
        public virtual ObjectResult<usp_QuestionaireType_Select_Result> usp_QuestionaireType_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireTypeIdParameter = i_QuestionaireTypeId.HasValue ?
                new ObjectParameter("i_QuestionaireTypeId", i_QuestionaireTypeId) :
                new ObjectParameter("i_QuestionaireTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireType_Select_Result>("usp_QuestionaireType_Select", i_AppUserIdParameter, i_QuestionaireTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_QuestionaireType_Select_DD_Result> usp_QuestionaireType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionaireType_Select_DD_Result>("usp_QuestionaireType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_QuestionaireType_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireTypeId, string vc_QuestionaireTypeName, string vc_Description, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireTypeIdParameter = i_QuestionaireTypeId.HasValue ?
                new ObjectParameter("i_QuestionaireTypeId", i_QuestionaireTypeId) :
                new ObjectParameter("i_QuestionaireTypeId", typeof(int));
    
            var vc_QuestionaireTypeNameParameter = vc_QuestionaireTypeName != null ?
                new ObjectParameter("vc_QuestionaireTypeName", vc_QuestionaireTypeName) :
                new ObjectParameter("vc_QuestionaireTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionaireType_Update", i_AppUserIdParameter, i_QuestionaireTypeIdParameter, vc_QuestionaireTypeNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_QuestionnaireBranching_Insert(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_QuestionSetId, Nullable<int> i_QuestionId, Nullable<int> i_BranchingAnswerId, Nullable<int> i_RecommendationId, Nullable<int> i_BranchToQuestionaireQuestionSetId, Nullable<int> i_BranchToQuestionSetQuestionsId, string i_QuestionSetBranchingOption, ObjectParameter o_QuestionnaireBranchingId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_BranchingAnswerIdParameter = i_BranchingAnswerId.HasValue ?
                new ObjectParameter("i_BranchingAnswerId", i_BranchingAnswerId) :
                new ObjectParameter("i_BranchingAnswerId", typeof(int));
    
            var i_RecommendationIdParameter = i_RecommendationId.HasValue ?
                new ObjectParameter("i_RecommendationId", i_RecommendationId) :
                new ObjectParameter("i_RecommendationId", typeof(int));
    
            var i_BranchToQuestionaireQuestionSetIdParameter = i_BranchToQuestionaireQuestionSetId.HasValue ?
                new ObjectParameter("i_BranchToQuestionaireQuestionSetId", i_BranchToQuestionaireQuestionSetId) :
                new ObjectParameter("i_BranchToQuestionaireQuestionSetId", typeof(int));
    
            var i_BranchToQuestionSetQuestionsIdParameter = i_BranchToQuestionSetQuestionsId.HasValue ?
                new ObjectParameter("i_BranchToQuestionSetQuestionsId", i_BranchToQuestionSetQuestionsId) :
                new ObjectParameter("i_BranchToQuestionSetQuestionsId", typeof(int));
    
            var i_QuestionSetBranchingOptionParameter = i_QuestionSetBranchingOption != null ?
                new ObjectParameter("i_QuestionSetBranchingOption", i_QuestionSetBranchingOption) :
                new ObjectParameter("i_QuestionSetBranchingOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionnaireBranching_Insert", i_AppUserIdParameter, i_QuestionaireIdParameter, i_QuestionSetIdParameter, i_QuestionIdParameter, i_BranchingAnswerIdParameter, i_RecommendationIdParameter, i_BranchToQuestionaireQuestionSetIdParameter, i_BranchToQuestionSetQuestionsIdParameter, i_QuestionSetBranchingOptionParameter, o_QuestionnaireBranchingId);
        }
    
        public virtual ObjectResult<usp_QuestionnaireBranching_Select_Result> usp_QuestionnaireBranching_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionnaireBranchingId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionnaireBranchingIdParameter = i_QuestionnaireBranchingId.HasValue ?
                new ObjectParameter("i_QuestionnaireBranchingId", i_QuestionnaireBranchingId) :
                new ObjectParameter("i_QuestionnaireBranchingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionnaireBranching_Select_Result>("usp_QuestionnaireBranching_Select", i_AppUserIdParameter, i_QuestionnaireBranchingIdParameter);
        }
    
        public virtual int usp_QuestionnaireBranching_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionnaireBranchingId, Nullable<int> i_QuestionaireId, Nullable<int> i_QuestionSetId, Nullable<int> i_QuestionId, Nullable<int> i_BranchingAnswerId, Nullable<int> i_RecommendationId, Nullable<int> i_BranchToQuestionaireQuestionSetId, Nullable<int> i_BranchToQuestionSetQuestionsId, string i_QuestionSetBranchingOption)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionnaireBranchingIdParameter = i_QuestionnaireBranchingId.HasValue ?
                new ObjectParameter("i_QuestionnaireBranchingId", i_QuestionnaireBranchingId) :
                new ObjectParameter("i_QuestionnaireBranchingId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var i_QuestionIdParameter = i_QuestionId.HasValue ?
                new ObjectParameter("i_QuestionId", i_QuestionId) :
                new ObjectParameter("i_QuestionId", typeof(int));
    
            var i_BranchingAnswerIdParameter = i_BranchingAnswerId.HasValue ?
                new ObjectParameter("i_BranchingAnswerId", i_BranchingAnswerId) :
                new ObjectParameter("i_BranchingAnswerId", typeof(int));
    
            var i_RecommendationIdParameter = i_RecommendationId.HasValue ?
                new ObjectParameter("i_RecommendationId", i_RecommendationId) :
                new ObjectParameter("i_RecommendationId", typeof(int));
    
            var i_BranchToQuestionaireQuestionSetIdParameter = i_BranchToQuestionaireQuestionSetId.HasValue ?
                new ObjectParameter("i_BranchToQuestionaireQuestionSetId", i_BranchToQuestionaireQuestionSetId) :
                new ObjectParameter("i_BranchToQuestionaireQuestionSetId", typeof(int));
    
            var i_BranchToQuestionSetQuestionsIdParameter = i_BranchToQuestionSetQuestionsId.HasValue ?
                new ObjectParameter("i_BranchToQuestionSetQuestionsId", i_BranchToQuestionSetQuestionsId) :
                new ObjectParameter("i_BranchToQuestionSetQuestionsId", typeof(int));
    
            var i_QuestionSetBranchingOptionParameter = i_QuestionSetBranchingOption != null ?
                new ObjectParameter("i_QuestionSetBranchingOption", i_QuestionSetBranchingOption) :
                new ObjectParameter("i_QuestionSetBranchingOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionnaireBranching_Update", i_AppUserIdParameter, i_QuestionnaireBranchingIdParameter, i_QuestionaireIdParameter, i_QuestionSetIdParameter, i_QuestionIdParameter, i_BranchingAnswerIdParameter, i_RecommendationIdParameter, i_BranchToQuestionaireQuestionSetIdParameter, i_BranchToQuestionSetQuestionsIdParameter, i_QuestionSetBranchingOptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_QuestionnaireFrequency_Insert(Nullable<int> i_AppUserId, Nullable<int> i_FrequencyNumber, string vc_Frequency, Nullable<int> i_QuestionaireId, Nullable<int> i_CareTeamId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_ProgramId, Nullable<int> i_UserId, string vc_StatusCode, ObjectParameter o_QuestionnaireFrequencyID, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_QuestionnaireFrequency_Insert", i_AppUserIdParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, i_QuestionaireIdParameter, i_CareTeamIdParameter, i_PopulationDefinitionIDParameter, i_ProgramIdParameter, i_UserIdParameter, vc_StatusCodeParameter, o_QuestionnaireFrequencyID, i_DiseaseIDParameter, b_IsPreventiveParameter);
        }
    
        public virtual int usp_QuestionnaireFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_FrequencyNumber, string vc_Frequency, Nullable<int> i_QuestionaireId, Nullable<int> i_CareTeamId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_ProgramId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<int> o_QuestionnaireFrequencyID, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var o_QuestionnaireFrequencyIDParameter = o_QuestionnaireFrequencyID.HasValue ?
                new ObjectParameter("o_QuestionnaireFrequencyID", o_QuestionnaireFrequencyID) :
                new ObjectParameter("o_QuestionnaireFrequencyID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionnaireFrequency_InsertUpdate", i_AppUserIdParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, i_QuestionaireIdParameter, i_CareTeamIdParameter, i_PopulationDefinitionIDParameter, i_ProgramIdParameter, i_UserIdParameter, vc_StatusCodeParameter, o_QuestionnaireFrequencyIDParameter, i_DiseaseIDParameter, b_IsPreventiveParameter);
        }
    
        public virtual ObjectResult<usp_QuestionnaireFrequency_Select_Result> usp_QuestionnaireFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_CareTeamId, Nullable<int> i_PopulationDefinitionID, Nullable<int> i_ProgramId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_PopulationDefinitionIDParameter = i_PopulationDefinitionID.HasValue ?
                new ObjectParameter("i_PopulationDefinitionID", i_PopulationDefinitionID) :
                new ObjectParameter("i_PopulationDefinitionID", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionnaireFrequency_Select_Result>("usp_QuestionnaireFrequency_Select", i_AppUserIdParameter, i_QuestionaireIdParameter, i_CareTeamIdParameter, i_PopulationDefinitionIDParameter, i_ProgramIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_QuestionnaireFrequency_Update(Nullable<int> i_AppUserId, Nullable<int> i_FrequencyNumber, string vc_Frequency, Nullable<int> i_QuestionaireId, Nullable<int> i_CareTeamId, Nullable<int> i_PopulationDefinitionId, Nullable<int> i_ProgramId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<int> i_QuestionnaireFrequencyID, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var i_PopulationDefinitionIdParameter = i_PopulationDefinitionId.HasValue ?
                new ObjectParameter("i_PopulationDefinitionId", i_PopulationDefinitionId) :
                new ObjectParameter("i_PopulationDefinitionId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_QuestionnaireFrequencyIDParameter = i_QuestionnaireFrequencyID.HasValue ?
                new ObjectParameter("i_QuestionnaireFrequencyID", i_QuestionnaireFrequencyID) :
                new ObjectParameter("i_QuestionnaireFrequencyID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_QuestionnaireFrequency_Update", i_AppUserIdParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, i_QuestionaireIdParameter, i_CareTeamIdParameter, i_PopulationDefinitionIdParameter, i_ProgramIdParameter, i_UserIdParameter, vc_StatusCodeParameter, i_QuestionnaireFrequencyIDParameter, i_DiseaseIDParameter, b_IsPreventiveParameter);
        }
    
        public virtual ObjectResult<usp_QuestionnaireScoring_Select_Result> usp_QuestionnaireScoring_Select(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionnaireScoring_Select_Result>("usp_QuestionnaireScoring_Select", i_AppUserIdParameter, i_QuestionaireIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_QuestionsAndAnswers_ByQuestionaire_Result> usp_QuestionsAndAnswers_ByQuestionaire(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireID, Nullable<int> i_QuestionID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIDParameter = i_QuestionaireID.HasValue ?
                new ObjectParameter("i_QuestionaireID", i_QuestionaireID) :
                new ObjectParameter("i_QuestionaireID", typeof(int));
    
            var i_QuestionIDParameter = i_QuestionID.HasValue ?
                new ObjectParameter("i_QuestionID", i_QuestionID) :
                new ObjectParameter("i_QuestionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionsAndAnswers_ByQuestionaire_Result>("usp_QuestionsAndAnswers_ByQuestionaire", i_AppUserIdParameter, i_QuestionaireIDParameter, i_QuestionIDParameter);
        }
    
        public virtual int usp_QuestionSet_Insert(Nullable<int> i_AppUserId, string vc_QuestionSetName, string vc_Description, Nullable<int> i_SortOrder, Nullable<int> i_QuestionaireId, Nullable<bool> b_IsShowPanel, Nullable<bool> b_IsShowQuestionSetName, ObjectParameter o_QuestionSetId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_QuestionSetNameParameter = vc_QuestionSetName != null ?
                new ObjectParameter("vc_QuestionSetName", vc_QuestionSetName) :
                new ObjectParameter("vc_QuestionSetName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var b_IsShowPanelParameter = b_IsShowPanel.HasValue ?
                new ObjectParameter("b_IsShowPanel", b_IsShowPanel) :
                new ObjectParameter("b_IsShowPanel", typeof(bool));
    
            var b_IsShowQuestionSetNameParameter = b_IsShowQuestionSetName.HasValue ?
                new ObjectParameter("b_IsShowQuestionSetName", b_IsShowQuestionSetName) :
                new ObjectParameter("b_IsShowQuestionSetName", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionSet_Insert", i_AppUserIdParameter, vc_QuestionSetNameParameter, vc_DescriptionParameter, i_SortOrderParameter, i_QuestionaireIdParameter, b_IsShowPanelParameter, b_IsShowQuestionSetNameParameter, o_QuestionSetId);
        }
    
        public virtual int usp_QuestionSet_QuestionaireQuestionSet_Insert_Update(Nullable<int> i_AppUserId, Nullable<int> i_QuestionSetId, string vc_QuestionSetName, string vc_Description, Nullable<int> i_QuestionaireId, Nullable<int> i_SortOrder, Nullable<bool> b_IsShowPanel, Nullable<bool> b_IsShowQuestionSetName, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            var vc_QuestionSetNameParameter = vc_QuestionSetName != null ?
                new ObjectParameter("vc_QuestionSetName", vc_QuestionSetName) :
                new ObjectParameter("vc_QuestionSetName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var b_IsShowPanelParameter = b_IsShowPanel.HasValue ?
                new ObjectParameter("b_IsShowPanel", b_IsShowPanel) :
                new ObjectParameter("b_IsShowPanel", typeof(bool));
    
            var b_IsShowQuestionSetNameParameter = b_IsShowQuestionSetName.HasValue ?
                new ObjectParameter("b_IsShowQuestionSetName", b_IsShowQuestionSetName) :
                new ObjectParameter("b_IsShowQuestionSetName", typeof(bool));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QuestionSet_QuestionaireQuestionSet_Insert_Update", i_AppUserIdParameter, i_QuestionSetIdParameter, vc_QuestionSetNameParameter, vc_DescriptionParameter, i_QuestionaireIdParameter, i_SortOrderParameter, b_IsShowPanelParameter, b_IsShowQuestionSetNameParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_QuestionSet_SearchByQuestionSetId_Result> usp_QuestionSet_SearchByQuestionSetId(Nullable<int> i_AppUserId, Nullable<int> i_IgnoreQuestionaireId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_IgnoreQuestionaireIdParameter = i_IgnoreQuestionaireId.HasValue ?
                new ObjectParameter("i_IgnoreQuestionaireId", i_IgnoreQuestionaireId) :
                new ObjectParameter("i_IgnoreQuestionaireId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionSet_SearchByQuestionSetId_Result>("usp_QuestionSet_SearchByQuestionSetId", i_AppUserIdParameter, i_IgnoreQuestionaireIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionSet_Select_ByQuestionaire_DD_Result> usp_QuestionSet_Select_ByQuestionaire_DD(Nullable<int> i_AppUserId, Nullable<int> i_QuestionaireId, Nullable<int> i_IgnoreQuestionSetID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_IgnoreQuestionSetIDParameter = i_IgnoreQuestionSetID.HasValue ?
                new ObjectParameter("i_IgnoreQuestionSetID", i_IgnoreQuestionSetID) :
                new ObjectParameter("i_IgnoreQuestionSetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionSet_Select_ByQuestionaire_DD_Result>("usp_QuestionSet_Select_ByQuestionaire_DD", i_AppUserIdParameter, i_QuestionaireIdParameter, i_IgnoreQuestionSetIDParameter);
        }
    
        public virtual ObjectResult<usp_QuestionSet_Select_DD_Result> usp_QuestionSet_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_QuestionSetId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_QuestionSetIdParameter = i_QuestionSetId.HasValue ?
                new ObjectParameter("i_QuestionSetId", i_QuestionSetId) :
                new ObjectParameter("i_QuestionSetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionSet_Select_DD_Result>("usp_QuestionSet_Select_DD", i_AppUserIdParameter, i_QuestionSetIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionSet_Select_IgnoreQuestionaire_Result> usp_QuestionSet_Select_IgnoreQuestionaire(Nullable<int> i_AppUserId, Nullable<int> i_IgnoreQuestionaireId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_IgnoreQuestionaireIdParameter = i_IgnoreQuestionaireId.HasValue ?
                new ObjectParameter("i_IgnoreQuestionaireId", i_IgnoreQuestionaireId) :
                new ObjectParameter("i_IgnoreQuestionaireId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionSet_Select_IgnoreQuestionaire_Result>("usp_QuestionSet_Select_IgnoreQuestionaire", i_AppUserIdParameter, i_IgnoreQuestionaireIdParameter);
        }
    
        public virtual ObjectResult<usp_QuestionType_Select_DD_Result> usp_QuestionType_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QuestionType_Select_DD_Result>("usp_QuestionType_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Race_Select_DD_Result> usp_Race_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Race_Select_DD_Result>("usp_Race_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_RebuildAllIndexes(Nullable<int> i_FillFactor)
        {
            var i_FillFactorParameter = i_FillFactor.HasValue ?
                new ObjectParameter("i_FillFactor", i_FillFactor) :
                new ObjectParameter("i_FillFactor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RebuildAllIndexes", i_FillFactorParameter);
        }
    
        public virtual int usp_RebuildIndex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RebuildIndex");
        }
    
        public virtual ObjectResult<usp_Recommendation_Insert_Result> usp_Recommendation_Insert(Nullable<int> i_AppUserId, string vc_RecommendationName, string vc_Description, Nullable<int> i_DefaultFrequencyOfTitrationDays, Nullable<int> i_SortOrder, string vc_StatusCode, ObjectParameter i_RecommendationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_RecommendationNameParameter = vc_RecommendationName != null ?
                new ObjectParameter("vc_RecommendationName", vc_RecommendationName) :
                new ObjectParameter("vc_RecommendationName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_DefaultFrequencyOfTitrationDaysParameter = i_DefaultFrequencyOfTitrationDays.HasValue ?
                new ObjectParameter("i_DefaultFrequencyOfTitrationDays", i_DefaultFrequencyOfTitrationDays) :
                new ObjectParameter("i_DefaultFrequencyOfTitrationDays", typeof(int));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Recommendation_Insert_Result>("usp_Recommendation_Insert", i_AppUserIdParameter, vc_RecommendationNameParameter, vc_DescriptionParameter, i_DefaultFrequencyOfTitrationDaysParameter, i_SortOrderParameter, vc_StatusCodeParameter, i_RecommendationId);
        }
    
        public virtual ObjectResult<usp_Recommendation_Select_Result> usp_Recommendation_Select(Nullable<int> i_AppUserId, Nullable<int> i_RecommendationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_RecommendationIdParameter = i_RecommendationId.HasValue ?
                new ObjectParameter("i_RecommendationId", i_RecommendationId) :
                new ObjectParameter("i_RecommendationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Recommendation_Select_Result>("usp_Recommendation_Select", i_AppUserIdParameter, i_RecommendationIdParameter);
        }
    
        public virtual ObjectResult<usp_Recommendation_Select_DD_Result> usp_Recommendation_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Recommendation_Select_DD_Result>("usp_Recommendation_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Relation_Select_DD_Result> usp_Relation_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Relation_Select_DD_Result>("usp_Relation_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportConditionConfiguration_Select_Result> usp_ReportConditionConfiguration_Select(Nullable<int> i_AppUserId, Nullable<int> i_ReportId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIdParameter = i_ReportId.HasValue ?
                new ObjectParameter("i_ReportId", i_ReportId) :
                new ObjectParameter("i_ReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportConditionConfiguration_Select_Result>("usp_ReportConditionConfiguration_Select", i_AppUserIdParameter, i_ReportIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportNameType_Select_DD_Result> usp_ReportNameType_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_ReportID, Nullable<int> i_MetricID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportIDParameter = i_ReportID.HasValue ?
                new ObjectParameter("i_ReportID", i_ReportID) :
                new ObjectParameter("i_ReportID", typeof(int));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportNameType_Select_DD_Result>("usp_ReportNameType_Select_DD", i_AppUserIdParameter, i_ReportIDParameter, i_MetricIDParameter);
        }
    
        public virtual int usp_Reports_AdvancedComparisonAnalytics_DrillDown(Nullable<int> i_AppUserId, string v_ComparisonList, string v_MeasureIdList, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, Nullable<bool> b_IsMeasureDrillDown, Nullable<bool> b_IsProcessDrillDown, string v_Goal, Nullable<int> i_DiseaseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ComparisonListParameter = v_ComparisonList != null ?
                new ObjectParameter("v_ComparisonList", v_ComparisonList) :
                new ObjectParameter("v_ComparisonList", typeof(string));
    
            var v_MeasureIdListParameter = v_MeasureIdList != null ?
                new ObjectParameter("v_MeasureIdList", v_MeasureIdList) :
                new ObjectParameter("v_MeasureIdList", typeof(string));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var b_IsMeasureDrillDownParameter = b_IsMeasureDrillDown.HasValue ?
                new ObjectParameter("b_IsMeasureDrillDown", b_IsMeasureDrillDown) :
                new ObjectParameter("b_IsMeasureDrillDown", typeof(bool));
    
            var b_IsProcessDrillDownParameter = b_IsProcessDrillDown.HasValue ?
                new ObjectParameter("b_IsProcessDrillDown", b_IsProcessDrillDown) :
                new ObjectParameter("b_IsProcessDrillDown", typeof(bool));
    
            var v_GoalParameter = v_Goal != null ?
                new ObjectParameter("v_Goal", v_Goal) :
                new ObjectParameter("v_Goal", typeof(string));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_AdvancedComparisonAnalytics_DrillDown", i_AppUserIdParameter, v_ComparisonListParameter, v_MeasureIdListParameter, d_FromDateParameter, d_ToDateParameter, b_IsMeasureDrillDownParameter, b_IsProcessDrillDownParameter, v_GoalParameter, i_DiseaseIdParameter);
        }
    
        public virtual int usp_Reports_AdvancedComparisonAnalytics_Wrapper(Nullable<int> i_AppUserId, string v_ComparisonList1, string v_ComparisonList2, string v_MeasureIdList, Nullable<bool> b_Aggregate1, Nullable<bool> b_Aggregate2, string c_BenchMarkCode, Nullable<int> i_BenchMarkSubTypeID, Nullable<int> i_DiseaseId, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ComparisonList1Parameter = v_ComparisonList1 != null ?
                new ObjectParameter("v_ComparisonList1", v_ComparisonList1) :
                new ObjectParameter("v_ComparisonList1", typeof(string));
    
            var v_ComparisonList2Parameter = v_ComparisonList2 != null ?
                new ObjectParameter("v_ComparisonList2", v_ComparisonList2) :
                new ObjectParameter("v_ComparisonList2", typeof(string));
    
            var v_MeasureIdListParameter = v_MeasureIdList != null ?
                new ObjectParameter("v_MeasureIdList", v_MeasureIdList) :
                new ObjectParameter("v_MeasureIdList", typeof(string));
    
            var b_Aggregate1Parameter = b_Aggregate1.HasValue ?
                new ObjectParameter("b_Aggregate1", b_Aggregate1) :
                new ObjectParameter("b_Aggregate1", typeof(bool));
    
            var b_Aggregate2Parameter = b_Aggregate2.HasValue ?
                new ObjectParameter("b_Aggregate2", b_Aggregate2) :
                new ObjectParameter("b_Aggregate2", typeof(bool));
    
            var c_BenchMarkCodeParameter = c_BenchMarkCode != null ?
                new ObjectParameter("c_BenchMarkCode", c_BenchMarkCode) :
                new ObjectParameter("c_BenchMarkCode", typeof(string));
    
            var i_BenchMarkSubTypeIDParameter = i_BenchMarkSubTypeID.HasValue ?
                new ObjectParameter("i_BenchMarkSubTypeID", i_BenchMarkSubTypeID) :
                new ObjectParameter("i_BenchMarkSubTypeID", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_AdvancedComparisonAnalytics_Wrapper", i_AppUserIdParameter, v_ComparisonList1Parameter, v_ComparisonList2Parameter, v_MeasureIdListParameter, b_Aggregate1Parameter, b_Aggregate2Parameter, c_BenchMarkCodeParameter, i_BenchMarkSubTypeIDParameter, i_DiseaseIdParameter, d_FromDateParameter, d_ToDateParameter);
        }
    
        public virtual int usp_Reports_AdvancedComparisonXML_DD(Nullable<int> i_AppUserId, Nullable<bool> b_IsConditional)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsConditionalParameter = b_IsConditional.HasValue ?
                new ObjectParameter("b_IsConditional", b_IsConditional) :
                new ObjectParameter("b_IsConditional", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_AdvancedComparisonXML_DD", i_AppUserIdParameter, b_IsConditionalParameter);
        }
    
        public virtual int usp_Reports_AggregateComparisonAnalytics_Wrapper(Nullable<int> i_AppUserId, string v_ComparisonList1, string v_MeasureIdList, Nullable<int> i_DiseaseID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ComparisonList1Parameter = v_ComparisonList1 != null ?
                new ObjectParameter("v_ComparisonList1", v_ComparisonList1) :
                new ObjectParameter("v_ComparisonList1", typeof(string));
    
            var v_MeasureIdListParameter = v_MeasureIdList != null ?
                new ObjectParameter("v_MeasureIdList", v_MeasureIdList) :
                new ObjectParameter("v_MeasureIdList", typeof(string));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_AggregateComparisonAnalytics_Wrapper", i_AppUserIdParameter, v_ComparisonList1Parameter, v_MeasureIdListParameter, i_DiseaseIDParameter);
        }
    
        public virtual ObjectResult<usp_Reports_CareCoordination_Result> usp_Reports_CareCoordination(Nullable<int> i_AppUserId, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, Nullable<int> i_PatientUserId, Nullable<bool> b_IsByCost, string i_Type, Nullable<int> i_SubTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var b_IsByCostParameter = b_IsByCost.HasValue ?
                new ObjectParameter("b_IsByCost", b_IsByCost) :
                new ObjectParameter("b_IsByCost", typeof(bool));
    
            var i_TypeParameter = i_Type != null ?
                new ObjectParameter("i_Type", i_Type) :
                new ObjectParameter("i_Type", typeof(string));
    
            var i_SubTypeIdParameter = i_SubTypeId.HasValue ?
                new ObjectParameter("I_SubTypeId", i_SubTypeId) :
                new ObjectParameter("I_SubTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Reports_CareCoordination_Result>("usp_Reports_CareCoordination", i_AppUserIdParameter, d_FromDateParameter, d_ToDateParameter, i_PatientUserIdParameter, b_IsByCostParameter, i_TypeParameter, i_SubTypeIdParameter);
        }
    
        public virtual int usp_Reports_CareCoordination_Compare(Nullable<int> i_AppUserId, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, Nullable<int> i_PatientUserId, string v_ComparisonUsersList, Nullable<bool> b_IsByCost, string v_TypeId, string i_Type, Nullable<int> i_SubTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_ComparisonUsersListParameter = v_ComparisonUsersList != null ?
                new ObjectParameter("v_ComparisonUsersList", v_ComparisonUsersList) :
                new ObjectParameter("v_ComparisonUsersList", typeof(string));
    
            var b_IsByCostParameter = b_IsByCost.HasValue ?
                new ObjectParameter("b_IsByCost", b_IsByCost) :
                new ObjectParameter("b_IsByCost", typeof(bool));
    
            var v_TypeIdParameter = v_TypeId != null ?
                new ObjectParameter("v_TypeId", v_TypeId) :
                new ObjectParameter("v_TypeId", typeof(string));
    
            var i_TypeParameter = i_Type != null ?
                new ObjectParameter("I_Type", i_Type) :
                new ObjectParameter("I_Type", typeof(string));
    
            var i_SubTypeIdParameter = i_SubTypeId.HasValue ?
                new ObjectParameter("I_SubTypeId", i_SubTypeId) :
                new ObjectParameter("I_SubTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_CareCoordination_Compare", i_AppUserIdParameter, d_FromDateParameter, d_ToDateParameter, i_PatientUserIdParameter, v_ComparisonUsersListParameter, b_IsByCostParameter, v_TypeIdParameter, i_TypeParameter, i_SubTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_Reports_CareCoordination_DD_Result> usp_Reports_CareCoordination_DD(Nullable<int> i_AppUserId, string b_IsAdminOrProvider)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsAdminOrProviderParameter = b_IsAdminOrProvider != null ?
                new ObjectParameter("b_IsAdminOrProvider", b_IsAdminOrProvider) :
                new ObjectParameter("b_IsAdminOrProvider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Reports_CareCoordination_DD_Result>("usp_Reports_CareCoordination_DD", i_AppUserIdParameter, b_IsAdminOrProviderParameter);
        }
    
        public virtual ObjectResult<usp_Reports_EpisodicGroup_Result> usp_Reports_EpisodicGroup(Nullable<int> i_AppUserId, Nullable<int> i_GrouperSystemId, Nullable<int> i_GrouperDiseaseID, string c_ByType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_GrouperSystemIdParameter = i_GrouperSystemId.HasValue ?
                new ObjectParameter("i_GrouperSystemId", i_GrouperSystemId) :
                new ObjectParameter("i_GrouperSystemId", typeof(int));
    
            var i_GrouperDiseaseIDParameter = i_GrouperDiseaseID.HasValue ?
                new ObjectParameter("i_GrouperDiseaseID", i_GrouperDiseaseID) :
                new ObjectParameter("i_GrouperDiseaseID", typeof(int));
    
            var c_ByTypeParameter = c_ByType != null ?
                new ObjectParameter("c_ByType", c_ByType) :
                new ObjectParameter("c_ByType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Reports_EpisodicGroup_Result>("usp_Reports_EpisodicGroup", i_AppUserIdParameter, i_GrouperSystemIdParameter, i_GrouperDiseaseIDParameter, c_ByTypeParameter);
        }
    
        public virtual int usp_Reports_EpisodicGroup_DrillDown(Nullable<int> i_AppUserId, Nullable<int> i_GrouperSystemId, Nullable<int> i_GrouperDiseaseID, Nullable<int> i_GrouperStageID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_GrouperSystemIdParameter = i_GrouperSystemId.HasValue ?
                new ObjectParameter("i_GrouperSystemId", i_GrouperSystemId) :
                new ObjectParameter("i_GrouperSystemId", typeof(int));
    
            var i_GrouperDiseaseIDParameter = i_GrouperDiseaseID.HasValue ?
                new ObjectParameter("i_GrouperDiseaseID", i_GrouperDiseaseID) :
                new ObjectParameter("i_GrouperDiseaseID", typeof(int));
    
            var i_GrouperStageIDParameter = i_GrouperStageID.HasValue ?
                new ObjectParameter("i_GrouperStageID", i_GrouperStageID) :
                new ObjectParameter("i_GrouperStageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_EpisodicGroup_DrillDown", i_AppUserIdParameter, i_GrouperSystemIdParameter, i_GrouperDiseaseIDParameter, i_GrouperStageIDParameter);
        }
    
        public virtual int usp_Reports_PatientAudit(Nullable<int> i_AppUserId, Nullable<int> i_PatientID, string vc_MRNNumber, Nullable<System.DateTime> dt_ActivityDatefrom, Nullable<System.DateTime> dt_ActivityDateto, string vc_PageAccessed, string vc_OperationPerformed, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, string v_SortBy, string v_SortType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientIDParameter = i_PatientID.HasValue ?
                new ObjectParameter("i_PatientID", i_PatientID) :
                new ObjectParameter("i_PatientID", typeof(int));
    
            var vc_MRNNumberParameter = vc_MRNNumber != null ?
                new ObjectParameter("vc_MRNNumber", vc_MRNNumber) :
                new ObjectParameter("vc_MRNNumber", typeof(string));
    
            var dt_ActivityDatefromParameter = dt_ActivityDatefrom.HasValue ?
                new ObjectParameter("dt_ActivityDatefrom", dt_ActivityDatefrom) :
                new ObjectParameter("dt_ActivityDatefrom", typeof(System.DateTime));
    
            var dt_ActivityDatetoParameter = dt_ActivityDateto.HasValue ?
                new ObjectParameter("dt_ActivityDateto", dt_ActivityDateto) :
                new ObjectParameter("dt_ActivityDateto", typeof(System.DateTime));
    
            var vc_PageAccessedParameter = vc_PageAccessed != null ?
                new ObjectParameter("vc_PageAccessed", vc_PageAccessed) :
                new ObjectParameter("vc_PageAccessed", typeof(string));
    
            var vc_OperationPerformedParameter = vc_OperationPerformed != null ?
                new ObjectParameter("vc_OperationPerformed", vc_OperationPerformed) :
                new ObjectParameter("vc_OperationPerformed", typeof(string));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var v_SortByParameter = v_SortBy != null ?
                new ObjectParameter("v_SortBy", v_SortBy) :
                new ObjectParameter("v_SortBy", typeof(string));
    
            var v_SortTypeParameter = v_SortType != null ?
                new ObjectParameter("v_SortType", v_SortType) :
                new ObjectParameter("v_SortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_PatientAudit", i_AppUserIdParameter, i_PatientIDParameter, vc_MRNNumberParameter, dt_ActivityDatefromParameter, dt_ActivityDatetoParameter, vc_PageAccessedParameter, vc_OperationPerformedParameter, i_StartIndexParameter, i_EndIndexParameter, v_SortByParameter, v_SortTypeParameter);
        }
    
        public virtual int usp_Reports_ProcedureCompliance(Nullable<int> i_AppUserId, Nullable<int> i_ProgramId, Nullable<bool> b_IsMyPatients, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, Nullable<int> i_FromRange, Nullable<int> i_ToRange, Nullable<int> i_Procedureid)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var b_IsMyPatientsParameter = b_IsMyPatients.HasValue ?
                new ObjectParameter("b_IsMyPatients", b_IsMyPatients) :
                new ObjectParameter("b_IsMyPatients", typeof(bool));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var i_FromRangeParameter = i_FromRange.HasValue ?
                new ObjectParameter("i_FromRange", i_FromRange) :
                new ObjectParameter("i_FromRange", typeof(int));
    
            var i_ToRangeParameter = i_ToRange.HasValue ?
                new ObjectParameter("i_ToRange", i_ToRange) :
                new ObjectParameter("i_ToRange", typeof(int));
    
            var i_ProcedureidParameter = i_Procedureid.HasValue ?
                new ObjectParameter("i_Procedureid", i_Procedureid) :
                new ObjectParameter("i_Procedureid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_ProcedureCompliance", i_AppUserIdParameter, i_ProgramIdParameter, b_IsMyPatientsParameter, d_FromDateParameter, d_ToDateParameter, i_FromRangeParameter, i_ToRangeParameter, i_ProcedureidParameter);
        }
    
        public virtual int usp_Reports_ProviderConditionalReport_DrillDown(Nullable<int> i_AppUserId, string v_ComparisonList, string v_MeasureIdList, Nullable<int> i_DiseaseID, Nullable<bool> b_IsMeasureDrillDown, Nullable<bool> b_IsProcessDrillDown, string v_Goal, string v_TypeNamewithCondition)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_ComparisonListParameter = v_ComparisonList != null ?
                new ObjectParameter("v_ComparisonList", v_ComparisonList) :
                new ObjectParameter("v_ComparisonList", typeof(string));
    
            var v_MeasureIdListParameter = v_MeasureIdList != null ?
                new ObjectParameter("v_MeasureIdList", v_MeasureIdList) :
                new ObjectParameter("v_MeasureIdList", typeof(string));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsMeasureDrillDownParameter = b_IsMeasureDrillDown.HasValue ?
                new ObjectParameter("b_IsMeasureDrillDown", b_IsMeasureDrillDown) :
                new ObjectParameter("b_IsMeasureDrillDown", typeof(bool));
    
            var b_IsProcessDrillDownParameter = b_IsProcessDrillDown.HasValue ?
                new ObjectParameter("b_IsProcessDrillDown", b_IsProcessDrillDown) :
                new ObjectParameter("b_IsProcessDrillDown", typeof(bool));
    
            var v_GoalParameter = v_Goal != null ?
                new ObjectParameter("v_Goal", v_Goal) :
                new ObjectParameter("v_Goal", typeof(string));
    
            var v_TypeNamewithConditionParameter = v_TypeNamewithCondition != null ?
                new ObjectParameter("v_TypeNamewithCondition", v_TypeNamewithCondition) :
                new ObjectParameter("v_TypeNamewithCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_ProviderConditionalReport_DrillDown", i_AppUserIdParameter, v_ComparisonListParameter, v_MeasureIdListParameter, i_DiseaseIDParameter, b_IsMeasureDrillDownParameter, b_IsProcessDrillDownParameter, v_GoalParameter, v_TypeNamewithConditionParameter);
        }
    
        public virtual int usp_Reports_TopUtilizer(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Reports_TopUtilizer", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_ReportSummary_Select_Result> usp_ReportSummary_Select(Nullable<int> i_AppUserId, Nullable<int> i_standardid, Nullable<int> i_standardorgid, Nullable<int> i_reportName, Nullable<int> i_MetricID, string i_DenominatorID, Nullable<int> i_numeratorID, Nullable<int> i_reportPeriod, string vc_reporttype, Nullable<bool> i_isPrimary, Nullable<bool> i_isIndicator, string i_statusCode, string vc_FrequencyReporttype, string vc_ReportFrequency, Nullable<bool> isLanding)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_standardidParameter = i_standardid.HasValue ?
                new ObjectParameter("i_standardid", i_standardid) :
                new ObjectParameter("i_standardid", typeof(int));
    
            var i_standardorgidParameter = i_standardorgid.HasValue ?
                new ObjectParameter("i_standardorgid", i_standardorgid) :
                new ObjectParameter("i_standardorgid", typeof(int));
    
            var i_reportNameParameter = i_reportName.HasValue ?
                new ObjectParameter("i_reportName", i_reportName) :
                new ObjectParameter("i_reportName", typeof(int));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            var i_DenominatorIDParameter = i_DenominatorID != null ?
                new ObjectParameter("i_DenominatorID", i_DenominatorID) :
                new ObjectParameter("i_DenominatorID", typeof(string));
    
            var i_numeratorIDParameter = i_numeratorID.HasValue ?
                new ObjectParameter("i_numeratorID", i_numeratorID) :
                new ObjectParameter("i_numeratorID", typeof(int));
    
            var i_reportPeriodParameter = i_reportPeriod.HasValue ?
                new ObjectParameter("i_reportPeriod", i_reportPeriod) :
                new ObjectParameter("i_reportPeriod", typeof(int));
    
            var vc_reporttypeParameter = vc_reporttype != null ?
                new ObjectParameter("vc_reporttype", vc_reporttype) :
                new ObjectParameter("vc_reporttype", typeof(string));
    
            var i_isPrimaryParameter = i_isPrimary.HasValue ?
                new ObjectParameter("i_isPrimary", i_isPrimary) :
                new ObjectParameter("i_isPrimary", typeof(bool));
    
            var i_isIndicatorParameter = i_isIndicator.HasValue ?
                new ObjectParameter("i_isIndicator", i_isIndicator) :
                new ObjectParameter("i_isIndicator", typeof(bool));
    
            var i_statusCodeParameter = i_statusCode != null ?
                new ObjectParameter("i_statusCode", i_statusCode) :
                new ObjectParameter("i_statusCode", typeof(string));
    
            var vc_FrequencyReporttypeParameter = vc_FrequencyReporttype != null ?
                new ObjectParameter("vc_FrequencyReporttype", vc_FrequencyReporttype) :
                new ObjectParameter("vc_FrequencyReporttype", typeof(string));
    
            var vc_ReportFrequencyParameter = vc_ReportFrequency != null ?
                new ObjectParameter("vc_ReportFrequency", vc_ReportFrequency) :
                new ObjectParameter("vc_ReportFrequency", typeof(string));
    
            var isLandingParameter = isLanding.HasValue ?
                new ObjectParameter("IsLanding", isLanding) :
                new ObjectParameter("IsLanding", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportSummary_Select_Result>("usp_ReportSummary_Select", i_AppUserIdParameter, i_standardidParameter, i_standardorgidParameter, i_reportNameParameter, i_MetricIDParameter, i_DenominatorIDParameter, i_numeratorIDParameter, i_reportPeriodParameter, vc_reporttypeParameter, i_isPrimaryParameter, i_isIndicatorParameter, i_statusCodeParameter, vc_FrequencyReporttypeParameter, vc_ReportFrequencyParameter, isLandingParameter);
        }
    
        public virtual ObjectResult<usp_ReportSummary_Select_bkp_Result> usp_ReportSummary_Select_bkp(Nullable<int> i_AppUserId, Nullable<int> i_standardid, Nullable<int> i_standardorgid, Nullable<int> i_reportName, Nullable<int> i_MetricID, string i_DenominatorID, Nullable<int> i_numeratorID, Nullable<int> i_reportPeriod, string vc_reporttype, Nullable<bool> i_isPrimary, Nullable<bool> i_isIndicator, string i_statusCode, string vc_FrequencyReporttype, Nullable<bool> isLanding)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_standardidParameter = i_standardid.HasValue ?
                new ObjectParameter("i_standardid", i_standardid) :
                new ObjectParameter("i_standardid", typeof(int));
    
            var i_standardorgidParameter = i_standardorgid.HasValue ?
                new ObjectParameter("i_standardorgid", i_standardorgid) :
                new ObjectParameter("i_standardorgid", typeof(int));
    
            var i_reportNameParameter = i_reportName.HasValue ?
                new ObjectParameter("i_reportName", i_reportName) :
                new ObjectParameter("i_reportName", typeof(int));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            var i_DenominatorIDParameter = i_DenominatorID != null ?
                new ObjectParameter("i_DenominatorID", i_DenominatorID) :
                new ObjectParameter("i_DenominatorID", typeof(string));
    
            var i_numeratorIDParameter = i_numeratorID.HasValue ?
                new ObjectParameter("i_numeratorID", i_numeratorID) :
                new ObjectParameter("i_numeratorID", typeof(int));
    
            var i_reportPeriodParameter = i_reportPeriod.HasValue ?
                new ObjectParameter("i_reportPeriod", i_reportPeriod) :
                new ObjectParameter("i_reportPeriod", typeof(int));
    
            var vc_reporttypeParameter = vc_reporttype != null ?
                new ObjectParameter("vc_reporttype", vc_reporttype) :
                new ObjectParameter("vc_reporttype", typeof(string));
    
            var i_isPrimaryParameter = i_isPrimary.HasValue ?
                new ObjectParameter("i_isPrimary", i_isPrimary) :
                new ObjectParameter("i_isPrimary", typeof(bool));
    
            var i_isIndicatorParameter = i_isIndicator.HasValue ?
                new ObjectParameter("i_isIndicator", i_isIndicator) :
                new ObjectParameter("i_isIndicator", typeof(bool));
    
            var i_statusCodeParameter = i_statusCode != null ?
                new ObjectParameter("i_statusCode", i_statusCode) :
                new ObjectParameter("i_statusCode", typeof(string));
    
            var vc_FrequencyReporttypeParameter = vc_FrequencyReporttype != null ?
                new ObjectParameter("vc_FrequencyReporttype", vc_FrequencyReporttype) :
                new ObjectParameter("vc_FrequencyReporttype", typeof(string));
    
            var isLandingParameter = isLanding.HasValue ?
                new ObjectParameter("IsLanding", isLanding) :
                new ObjectParameter("IsLanding", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportSummary_Select_bkp_Result>("usp_ReportSummary_Select_bkp", i_AppUserIdParameter, i_standardidParameter, i_standardorgidParameter, i_reportNameParameter, i_MetricIDParameter, i_DenominatorIDParameter, i_numeratorIDParameter, i_reportPeriodParameter, vc_reporttypeParameter, i_isPrimaryParameter, i_isIndicatorParameter, i_statusCodeParameter, vc_FrequencyReporttypeParameter, isLandingParameter);
        }
    
        public virtual int usp_ReportSummary_Select_Test(Nullable<int> i_AppUserId, Nullable<int> i_standardid, Nullable<int> i_standardorgid, Nullable<int> i_reportName, Nullable<int> i_MetricID, string i_DenominatorID, Nullable<int> i_numeratorID, Nullable<int> i_reportPeriod, string vc_reporttype, Nullable<bool> i_isPrimary, Nullable<bool> i_isIndicator, string i_statusCode, Nullable<bool> isLanding)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_standardidParameter = i_standardid.HasValue ?
                new ObjectParameter("i_standardid", i_standardid) :
                new ObjectParameter("i_standardid", typeof(int));
    
            var i_standardorgidParameter = i_standardorgid.HasValue ?
                new ObjectParameter("i_standardorgid", i_standardorgid) :
                new ObjectParameter("i_standardorgid", typeof(int));
    
            var i_reportNameParameter = i_reportName.HasValue ?
                new ObjectParameter("i_reportName", i_reportName) :
                new ObjectParameter("i_reportName", typeof(int));
    
            var i_MetricIDParameter = i_MetricID.HasValue ?
                new ObjectParameter("i_MetricID", i_MetricID) :
                new ObjectParameter("i_MetricID", typeof(int));
    
            var i_DenominatorIDParameter = i_DenominatorID != null ?
                new ObjectParameter("i_DenominatorID", i_DenominatorID) :
                new ObjectParameter("i_DenominatorID", typeof(string));
    
            var i_numeratorIDParameter = i_numeratorID.HasValue ?
                new ObjectParameter("i_numeratorID", i_numeratorID) :
                new ObjectParameter("i_numeratorID", typeof(int));
    
            var i_reportPeriodParameter = i_reportPeriod.HasValue ?
                new ObjectParameter("i_reportPeriod", i_reportPeriod) :
                new ObjectParameter("i_reportPeriod", typeof(int));
    
            var vc_reporttypeParameter = vc_reporttype != null ?
                new ObjectParameter("vc_reporttype", vc_reporttype) :
                new ObjectParameter("vc_reporttype", typeof(string));
    
            var i_isPrimaryParameter = i_isPrimary.HasValue ?
                new ObjectParameter("i_isPrimary", i_isPrimary) :
                new ObjectParameter("i_isPrimary", typeof(bool));
    
            var i_isIndicatorParameter = i_isIndicator.HasValue ?
                new ObjectParameter("i_isIndicator", i_isIndicator) :
                new ObjectParameter("i_isIndicator", typeof(bool));
    
            var i_statusCodeParameter = i_statusCode != null ?
                new ObjectParameter("i_statusCode", i_statusCode) :
                new ObjectParameter("i_statusCode", typeof(string));
    
            var isLandingParameter = isLanding.HasValue ?
                new ObjectParameter("IsLanding", isLanding) :
                new ObjectParameter("IsLanding", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReportSummary_Select_Test", i_AppUserIdParameter, i_standardidParameter, i_standardorgidParameter, i_reportNameParameter, i_MetricIDParameter, i_DenominatorIDParameter, i_numeratorIDParameter, i_reportPeriodParameter, vc_reporttypeParameter, i_isPrimaryParameter, i_isIndicatorParameter, i_statusCodeParameter, isLandingParameter);
        }
    
        public virtual int usp_RxClaim_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RxClaim_Select", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_SecurityRole_Select_DD_Result> usp_SecurityRole_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SecurityRole_Select_DD_Result>("usp_SecurityRole_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_SentMail_ForgotPassword(string v_profile_name, string v_NotifyCommunicationText, string v_NotifySubjectText, Nullable<int> i_dbmailReferenceId, string v_EmailIdPrimary)
        {
            var v_profile_nameParameter = v_profile_name != null ?
                new ObjectParameter("v_profile_name", v_profile_name) :
                new ObjectParameter("v_profile_name", typeof(string));
    
            var v_NotifyCommunicationTextParameter = v_NotifyCommunicationText != null ?
                new ObjectParameter("v_NotifyCommunicationText", v_NotifyCommunicationText) :
                new ObjectParameter("v_NotifyCommunicationText", typeof(string));
    
            var v_NotifySubjectTextParameter = v_NotifySubjectText != null ?
                new ObjectParameter("v_NotifySubjectText", v_NotifySubjectText) :
                new ObjectParameter("v_NotifySubjectText", typeof(string));
    
            var i_dbmailReferenceIdParameter = i_dbmailReferenceId.HasValue ?
                new ObjectParameter("i_dbmailReferenceId", i_dbmailReferenceId) :
                new ObjectParameter("i_dbmailReferenceId", typeof(int));
    
            var v_EmailIdPrimaryParameter = v_EmailIdPrimary != null ?
                new ObjectParameter("v_EmailIdPrimary", v_EmailIdPrimary) :
                new ObjectParameter("v_EmailIdPrimary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SentMail_ForgotPassword", v_profile_nameParameter, v_NotifyCommunicationTextParameter, v_NotifySubjectTextParameter, i_dbmailReferenceIdParameter, v_EmailIdPrimaryParameter);
        }
    
        public virtual ObjectResult<usp_Speciality_Select_DD_Result> usp_Speciality_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Speciality_Select_DD_Result>("usp_Speciality_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_spLoginUserUnlock(Nullable<int> i_AppUserId, string v_UserName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_UserNameParameter = v_UserName != null ?
                new ObjectParameter("v_UserName", v_UserName) :
                new ObjectParameter("v_UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_spLoginUserUnlock", i_AppUserIdParameter, v_UserNameParameter);
        }
    
        public virtual ObjectResult<usp_StandardOrganization_DD_Result> usp_StandardOrganization_DD(Nullable<int> i_AppUserId, Nullable<int> i_StandardOrganziationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_StandardOrganziationIDParameter = i_StandardOrganziationID.HasValue ?
                new ObjectParameter("i_StandardOrganziationID", i_StandardOrganziationID) :
                new ObjectParameter("i_StandardOrganziationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StandardOrganization_DD_Result>("usp_StandardOrganization_DD", i_AppUserIdParameter, i_StandardOrganziationIDParameter);
        }
    
        public virtual int usp_StandardOrganizations_InsertUpdate(Nullable<int> i_AppUserId, string v_StandardOrganizationName, string v_StatusCode, ObjectParameter o_StandardOrganizationId, Nullable<int> i_StandardOrganizationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StandardOrganizationNameParameter = v_StandardOrganizationName != null ?
                new ObjectParameter("v_StandardOrganizationName", v_StandardOrganizationName) :
                new ObjectParameter("v_StandardOrganizationName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_StandardOrganizationIdParameter = i_StandardOrganizationId.HasValue ?
                new ObjectParameter("i_StandardOrganizationId", i_StandardOrganizationId) :
                new ObjectParameter("i_StandardOrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_StandardOrganizations_InsertUpdate", i_AppUserIdParameter, v_StandardOrganizationNameParameter, v_StatusCodeParameter, o_StandardOrganizationId, i_StandardOrganizationIdParameter);
        }
    
        public virtual ObjectResult<usp_StandardOrganizations_Select_Result> usp_StandardOrganizations_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StandardOrganizations_Select_Result>("usp_StandardOrganizations_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_Standards_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_StandardOrganizationId, string v_StandardsName, string v_StatusCode, ObjectParameter o_StandardsId, Nullable<int> i_StandardsId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_StandardOrganizationIdParameter = i_StandardOrganizationId.HasValue ?
                new ObjectParameter("i_StandardOrganizationId", i_StandardOrganizationId) :
                new ObjectParameter("i_StandardOrganizationId", typeof(int));
    
            var v_StandardsNameParameter = v_StandardsName != null ?
                new ObjectParameter("v_StandardsName", v_StandardsName) :
                new ObjectParameter("v_StandardsName", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_StandardsIdParameter = i_StandardsId.HasValue ?
                new ObjectParameter("i_StandardsId", i_StandardsId) :
                new ObjectParameter("i_StandardsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Standards_InsertUpdate", i_AppUserIdParameter, i_StandardOrganizationIdParameter, v_StandardsNameParameter, v_StatusCodeParameter, o_StandardsId, i_StandardsIdParameter);
        }
    
        public virtual ObjectResult<usp_Standards_Select_Result> usp_Standards_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Standards_Select_Result>("usp_Standards_Select", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_State_Select_DD_Result> usp_State_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_State_Select_DD_Result>("usp_State_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_SubstanceAbuse_Insert(Nullable<int> i_AppUserId, string v_Name, string v_StatusCode, ObjectParameter o_SubstanceAbuseId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("v_Name", v_Name) :
                new ObjectParameter("v_Name", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SubstanceAbuse_Insert", i_AppUserIdParameter, v_NameParameter, v_StatusCodeParameter, o_SubstanceAbuseId);
        }
    
        public virtual ObjectResult<usp_SubstanceAbuse_Select_Result> usp_SubstanceAbuse_Select(Nullable<int> i_AppUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SubstanceAbuse_Select_Result>("usp_SubstanceAbuse_Select", i_AppUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_SubstanceAbuse_Select_DD_Result> usp_SubstanceAbuse_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SubstanceAbuse_Select_DD_Result>("usp_SubstanceAbuse_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_Task_UpdateAssignedCareProviderId(Nullable<int> i_AppUserId, Nullable<int> i_TaskId, Nullable<int> i_AssignedCareProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            var i_AssignedCareProviderIdParameter = i_AssignedCareProviderId.HasValue ?
                new ObjectParameter("i_AssignedCareProviderId", i_AssignedCareProviderId) :
                new ObjectParameter("i_AssignedCareProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Task_UpdateAssignedCareProviderId", i_AppUserIdParameter, i_TaskIdParameter, i_AssignedCareProviderIdParameter);
        }
    
        public virtual int usp_TaskAttempts_History(Nullable<int> i_AppUserId, Nullable<int> i_TaskID, Nullable<int> i_TaskTypeGeneralizedID, Nullable<int> i_TaskTypeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskIDParameter = i_TaskID.HasValue ?
                new ObjectParameter("i_TaskID", i_TaskID) :
                new ObjectParameter("i_TaskID", typeof(int));
    
            var i_TaskTypeGeneralizedIDParameter = i_TaskTypeGeneralizedID.HasValue ?
                new ObjectParameter("i_TaskTypeGeneralizedID", i_TaskTypeGeneralizedID) :
                new ObjectParameter("i_TaskTypeGeneralizedID", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskAttempts_History", i_AppUserIdParameter, i_TaskIDParameter, i_TaskTypeGeneralizedIDParameter, i_TaskTypeIDParameter);
        }
    
        public virtual int usp_TaskAttempts_Insert(Nullable<int> i_AppUserId, Nullable<int> i_TaskId, Nullable<System.DateTime> dt_AttemptedContactDate, string vc_Comments, Nullable<int> i_UserId, Nullable<System.DateTime> dt_NextContactDate, Nullable<System.DateTime> i_TaskTerminationDate, Nullable<int> i_TasktypeCommunicationID, Nullable<int> i_CommunicationTemplateID, Nullable<int> i_CommunicationSequence, Nullable<int> i_CommunicationTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            var dt_AttemptedContactDateParameter = dt_AttemptedContactDate.HasValue ?
                new ObjectParameter("dt_AttemptedContactDate", dt_AttemptedContactDate) :
                new ObjectParameter("dt_AttemptedContactDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_NextContactDateParameter = dt_NextContactDate.HasValue ?
                new ObjectParameter("dt_NextContactDate", dt_NextContactDate) :
                new ObjectParameter("dt_NextContactDate", typeof(System.DateTime));
    
            var i_TaskTerminationDateParameter = i_TaskTerminationDate.HasValue ?
                new ObjectParameter("i_TaskTerminationDate", i_TaskTerminationDate) :
                new ObjectParameter("i_TaskTerminationDate", typeof(System.DateTime));
    
            var i_TasktypeCommunicationIDParameter = i_TasktypeCommunicationID.HasValue ?
                new ObjectParameter("i_TasktypeCommunicationID", i_TasktypeCommunicationID) :
                new ObjectParameter("i_TasktypeCommunicationID", typeof(int));
    
            var i_CommunicationTemplateIDParameter = i_CommunicationTemplateID.HasValue ?
                new ObjectParameter("i_CommunicationTemplateID", i_CommunicationTemplateID) :
                new ObjectParameter("i_CommunicationTemplateID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(int));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskAttempts_Insert", i_AppUserIdParameter, i_TaskIdParameter, dt_AttemptedContactDateParameter, vc_CommentsParameter, i_UserIdParameter, dt_NextContactDateParameter, i_TaskTerminationDateParameter, i_TasktypeCommunicationIDParameter, i_CommunicationTemplateIDParameter, i_CommunicationSequenceParameter, i_CommunicationTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskAttempts_Select_Result> usp_TaskAttempts_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskIdParameter = i_TaskId.HasValue ?
                new ObjectParameter("i_TaskId", i_TaskId) :
                new ObjectParameter("i_TaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskAttempts_Select_Result>("usp_TaskAttempts_Select", i_AppUserIdParameter, i_TaskIdParameter);
        }
    
        public virtual int usp_TaskAttemptsCommunicationLog_Update(Nullable<int> i_AppUserId, Nullable<int> i_TaskAttemptsCommunicationLogID, string i_FilePath)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskAttemptsCommunicationLogIDParameter = i_TaskAttemptsCommunicationLogID.HasValue ?
                new ObjectParameter("i_TaskAttemptsCommunicationLogID", i_TaskAttemptsCommunicationLogID) :
                new ObjectParameter("i_TaskAttemptsCommunicationLogID", typeof(int));
    
            var i_FilePathParameter = i_FilePath != null ?
                new ObjectParameter("i_FilePath", i_FilePath) :
                new ObjectParameter("i_FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskAttemptsCommunicationLog_Update", i_AppUserIdParameter, i_TaskAttemptsCommunicationLogIDParameter, i_FilePathParameter);
        }
    
        public virtual ObjectResult<usp_TaskAttemptsStatus_Select_Result> usp_TaskAttemptsStatus_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskAttemptsStatus_Select_Result>("usp_TaskAttemptsStatus_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_TaskBundle_History(Nullable<int> i_AppUserId, Nullable<int> i_TaskbundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskbundleIdParameter = i_TaskbundleId.HasValue ?
                new ObjectParameter("i_TaskbundleId", i_TaskbundleId) :
                new ObjectParameter("i_TaskbundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundle_History", i_AppUserIdParameter, i_TaskbundleIdParameter);
        }
    
        public virtual int usp_TaskBundle_InsertUpdate(Nullable<int> i_AppUserId, string v_TaskBundleName, string v_Description, string v_StatusCode, Nullable<int> i_TaskBundleId, Nullable<bool> b_IsEdit, string v_ProductionStatus, string v_ConflictType, ObjectParameter o_TaskBundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TaskBundleNameParameter = v_TaskBundleName != null ?
                new ObjectParameter("v_TaskBundleName", v_TaskBundleName) :
                new ObjectParameter("v_TaskBundleName", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_TaskBundleIdParameter = i_TaskBundleId.HasValue ?
                new ObjectParameter("i_TaskBundleId", i_TaskBundleId) :
                new ObjectParameter("i_TaskBundleId", typeof(int));
    
            var b_IsEditParameter = b_IsEdit.HasValue ?
                new ObjectParameter("b_IsEdit", b_IsEdit) :
                new ObjectParameter("b_IsEdit", typeof(bool));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var v_ConflictTypeParameter = v_ConflictType != null ?
                new ObjectParameter("v_ConflictType", v_ConflictType) :
                new ObjectParameter("v_ConflictType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundle_InsertUpdate", i_AppUserIdParameter, v_TaskBundleNameParameter, v_DescriptionParameter, v_StatusCodeParameter, i_TaskBundleIdParameter, b_IsEditParameter, v_ProductionStatusParameter, v_ConflictTypeParameter, o_TaskBundleId);
        }
    
        public virtual int usp_TaskBundle_SaveAsVersion(Nullable<int> i_AppUserId, Nullable<int> i_TaskbundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskbundleIdParameter = i_TaskbundleId.HasValue ?
                new ObjectParameter("i_TaskbundleId", i_TaskbundleId) :
                new ObjectParameter("i_TaskbundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundle_SaveAsVersion", i_AppUserIdParameter, i_TaskbundleIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundle_Select_Result> usp_TaskBundle_Select(Nullable<int> i_AppUserId, string v_StatusCode, string v_TaskBundleName, string v_TaskBundleDescription, Nullable<int> i_TaskBundleID, string v_TaskBuildingBlock, string v_ProductionStatus, string v_IsEdit)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_TaskBundleNameParameter = v_TaskBundleName != null ?
                new ObjectParameter("v_TaskBundleName", v_TaskBundleName) :
                new ObjectParameter("v_TaskBundleName", typeof(string));
    
            var v_TaskBundleDescriptionParameter = v_TaskBundleDescription != null ?
                new ObjectParameter("v_TaskBundleDescription", v_TaskBundleDescription) :
                new ObjectParameter("v_TaskBundleDescription", typeof(string));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            var v_TaskBuildingBlockParameter = v_TaskBuildingBlock != null ?
                new ObjectParameter("v_TaskBuildingBlock", v_TaskBuildingBlock) :
                new ObjectParameter("v_TaskBuildingBlock", typeof(string));
    
            var v_ProductionStatusParameter = v_ProductionStatus != null ?
                new ObjectParameter("v_ProductionStatus", v_ProductionStatus) :
                new ObjectParameter("v_ProductionStatus", typeof(string));
    
            var v_IsEditParameter = v_IsEdit != null ?
                new ObjectParameter("v_IsEdit", v_IsEdit) :
                new ObjectParameter("v_IsEdit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundle_Select_Result>("usp_TaskBundle_Select", i_AppUserIdParameter, v_StatusCodeParameter, v_TaskBundleNameParameter, v_TaskBundleDescriptionParameter, i_TaskBundleIDParameter, v_TaskBuildingBlockParameter, v_ProductionStatusParameter, v_IsEditParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundle_SelectByBundleID_Result> usp_TaskBundle_SelectByBundleID(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleID, string v_Type)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            var v_TypeParameter = v_Type != null ?
                new ObjectParameter("v_Type", v_Type) :
                new ObjectParameter("v_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundle_SelectByBundleID_Result>("usp_TaskBundle_SelectByBundleID", i_AppUserIdParameter, i_TaskBundleIDParameter, v_TypeParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundle_Summary_Result> usp_TaskBundle_Summary(Nullable<int> i_AppUserId, Nullable<int> i_TaskbundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskbundleIdParameter = i_TaskbundleId.HasValue ?
                new ObjectParameter("i_TaskbundleId", i_TaskbundleId) :
                new ObjectParameter("i_TaskbundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundle_Summary_Result>("usp_TaskBundle_Summary", i_AppUserIdParameter, i_TaskbundleIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundle_Usage_Result> usp_TaskBundle_Usage(Nullable<int> i_AppUserId, Nullable<int> i_TaskbundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskbundleIdParameter = i_TaskbundleId.HasValue ?
                new ObjectParameter("i_TaskbundleId", i_TaskbundleId) :
                new ObjectParameter("i_TaskbundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundle_Usage_Result>("usp_TaskBundle_Usage", i_AppUserIdParameter, i_TaskbundleIdParameter);
        }
    
        public virtual int usp_TaskBundleAdhocFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleID, string vc_AdhocTaskName, string vc_StatusCode, Nullable<int> i_FrequencyNumber, string v_Frequency, string v_Comments, Nullable<int> i_TaskBundleAdhocFrequencyID, ObjectParameter o_TaskBundleAdhocFrequencyID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            var vc_AdhocTaskNameParameter = vc_AdhocTaskName != null ?
                new ObjectParameter("vc_AdhocTaskName", vc_AdhocTaskName) :
                new ObjectParameter("vc_AdhocTaskName", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var v_FrequencyParameter = v_Frequency != null ?
                new ObjectParameter("v_Frequency", v_Frequency) :
                new ObjectParameter("v_Frequency", typeof(string));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var i_TaskBundleAdhocFrequencyIDParameter = i_TaskBundleAdhocFrequencyID.HasValue ?
                new ObjectParameter("i_TaskBundleAdhocFrequencyID", i_TaskBundleAdhocFrequencyID) :
                new ObjectParameter("i_TaskBundleAdhocFrequencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundleAdhocFrequency_InsertUpdate", i_AppUserIdParameter, i_TaskBundleIDParameter, vc_AdhocTaskNameParameter, vc_StatusCodeParameter, i_FrequencyNumberParameter, v_FrequencyParameter, v_CommentsParameter, i_TaskBundleAdhocFrequencyIDParameter, o_TaskBundleAdhocFrequencyID);
        }
    
        public virtual int usp_TaskBundleADTFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleID, string vc_ADTTaskName, string vc_StatusCode, Nullable<int> i_FrequencyNumber, string v_Frequency, string v_Comments, Nullable<int> i_TaskBundleADTFrequencyID, ObjectParameter o_TaskBundleADTFrequencyID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            var vc_ADTTaskNameParameter = vc_ADTTaskName != null ?
                new ObjectParameter("vc_ADTTaskName", vc_ADTTaskName) :
                new ObjectParameter("vc_ADTTaskName", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var v_FrequencyParameter = v_Frequency != null ?
                new ObjectParameter("v_Frequency", v_Frequency) :
                new ObjectParameter("v_Frequency", typeof(string));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var i_TaskBundleADTFrequencyIDParameter = i_TaskBundleADTFrequencyID.HasValue ?
                new ObjectParameter("i_TaskBundleADTFrequencyID", i_TaskBundleADTFrequencyID) :
                new ObjectParameter("i_TaskBundleADTFrequencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundleADTFrequency_InsertUpdate", i_AppUserIdParameter, i_TaskBundleIDParameter, vc_ADTTaskNameParameter, vc_StatusCodeParameter, i_FrequencyNumberParameter, v_FrequencyParameter, v_CommentsParameter, i_TaskBundleADTFrequencyIDParameter, o_TaskBundleADTFrequencyID);
        }
    
        public virtual int usp_TaskBundleCopyInclude_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundleCopyInclude_Select", i_AppUserIdParameter, i_TaskBundleIDParameter);
        }
    
        public virtual int usp_TaskbundleDrawfromLib_TreeView_Select(Nullable<int> i_AppUserId, string v_TaskBundleName, string v_Description, Nullable<int> i_TaskBundleID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_TaskBundleNameParameter = v_TaskBundleName != null ?
                new ObjectParameter("v_TaskBundleName", v_TaskBundleName) :
                new ObjectParameter("v_TaskBundleName", typeof(string));
    
            var v_DescriptionParameter = v_Description != null ?
                new ObjectParameter("v_Description", v_Description) :
                new ObjectParameter("v_Description", typeof(string));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskbundleDrawfromLib_TreeView_Select", i_AppUserIdParameter, v_TaskBundleNameParameter, v_DescriptionParameter, i_TaskBundleIDParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundlePatientEducationMaterial_Select_Result> usp_TaskBundlePatientEducationMaterial_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleEducationMaterialID, Nullable<int> i_TaskBundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleEducationMaterialIDParameter = i_TaskBundleEducationMaterialID.HasValue ?
                new ObjectParameter("i_TaskBundleEducationMaterialID", i_TaskBundleEducationMaterialID) :
                new ObjectParameter("i_TaskBundleEducationMaterialID", typeof(int));
    
            var i_TaskBundleIdParameter = i_TaskBundleId.HasValue ?
                new ObjectParameter("i_TaskBundleId", i_TaskBundleId) :
                new ObjectParameter("i_TaskBundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundlePatientEducationMaterial_Select_Result>("usp_TaskBundlePatientEducationMaterial_Select", i_AppUserIdParameter, i_TaskBundleEducationMaterialIDParameter, i_TaskBundleIdParameter);
        }
    
        public virtual int usp_TaskBundleProcedureFrequency_Delete(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleProcedureFrequencyId, Nullable<int> i_TaskBundleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleProcedureFrequencyIdParameter = i_TaskBundleProcedureFrequencyId.HasValue ?
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", i_TaskBundleProcedureFrequencyId) :
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", typeof(int));
    
            var i_TaskBundleIdParameter = i_TaskBundleId.HasValue ?
                new ObjectParameter("i_TaskBundleId", i_TaskBundleId) :
                new ObjectParameter("i_TaskBundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundleProcedureFrequency_Delete", i_AppUserIdParameter, i_TaskBundleProcedureFrequencyIdParameter, i_TaskBundleIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundleProcedureFrequency_Select_Result> usp_TaskBundleProcedureFrequency_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleProcedureFrequencyId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleProcedureFrequencyIdParameter = i_TaskBundleProcedureFrequencyId.HasValue ?
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", i_TaskBundleProcedureFrequencyId) :
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundleProcedureFrequency_Select_Result>("usp_TaskBundleProcedureFrequency_Select", i_AppUserIdParameter, i_TaskBundleProcedureFrequencyIdParameter);
        }
    
        public virtual int usp_TaskBundleProcedureFrequency_Update(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleProcedureFrequencyId, Nullable<int> i_CodeGroupingId, string vc_StatusCode, Nullable<int> i_FrequencyNumber, string vc_Frequency, Nullable<bool> b_NeverSchedule, string vc_ExclusionReason, Nullable<bool> b_IsPreventive, string v_FrequencyCondition, Nullable<int> i_TaskBundleProcedureConditionalFrequencyID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleProcedureFrequencyIdParameter = i_TaskBundleProcedureFrequencyId.HasValue ?
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", i_TaskBundleProcedureFrequencyId) :
                new ObjectParameter("i_TaskBundleProcedureFrequencyId", typeof(int));
    
            var i_CodeGroupingIdParameter = i_CodeGroupingId.HasValue ?
                new ObjectParameter("i_CodeGroupingId", i_CodeGroupingId) :
                new ObjectParameter("i_CodeGroupingId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var b_NeverScheduleParameter = b_NeverSchedule.HasValue ?
                new ObjectParameter("b_NeverSchedule", b_NeverSchedule) :
                new ObjectParameter("b_NeverSchedule", typeof(bool));
    
            var vc_ExclusionReasonParameter = vc_ExclusionReason != null ?
                new ObjectParameter("vc_ExclusionReason", vc_ExclusionReason) :
                new ObjectParameter("vc_ExclusionReason", typeof(string));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var v_FrequencyConditionParameter = v_FrequencyCondition != null ?
                new ObjectParameter("v_FrequencyCondition", v_FrequencyCondition) :
                new ObjectParameter("v_FrequencyCondition", typeof(string));
    
            var i_TaskBundleProcedureConditionalFrequencyIDParameter = i_TaskBundleProcedureConditionalFrequencyID.HasValue ?
                new ObjectParameter("i_TaskBundleProcedureConditionalFrequencyID", i_TaskBundleProcedureConditionalFrequencyID) :
                new ObjectParameter("i_TaskBundleProcedureConditionalFrequencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskBundleProcedureFrequency_Update", i_AppUserIdParameter, i_TaskBundleProcedureFrequencyIdParameter, i_CodeGroupingIdParameter, vc_StatusCodeParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, b_NeverScheduleParameter, vc_ExclusionReasonParameter, b_IsPreventiveParameter, v_FrequencyConditionParameter, i_TaskBundleProcedureConditionalFrequencyIDParameter);
        }
    
        public virtual ObjectResult<usp_TaskBundleQuestionnaireFrequency_InsertUpdate_Result> usp_TaskBundleQuestionnaireFrequency_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_TaskBundleID, Nullable<int> i_QuestionaireId, Nullable<int> i_FrequencyNumber, string vc_Frequency, string vc_StatusCode, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive, Nullable<int> i_TaskBundleQuestionnaireFrequencyID, ObjectParameter o_TaskBundleQuestionnaireFrequencyID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskBundleIDParameter = i_TaskBundleID.HasValue ?
                new ObjectParameter("i_TaskBundleID", i_TaskBundleID) :
                new ObjectParameter("i_TaskBundleID", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var i_FrequencyNumberParameter = i_FrequencyNumber.HasValue ?
                new ObjectParameter("i_FrequencyNumber", i_FrequencyNumber) :
                new ObjectParameter("i_FrequencyNumber", typeof(int));
    
            var vc_FrequencyParameter = vc_Frequency != null ?
                new ObjectParameter("vc_Frequency", vc_Frequency) :
                new ObjectParameter("vc_Frequency", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_TaskBundleQuestionnaireFrequencyIDParameter = i_TaskBundleQuestionnaireFrequencyID.HasValue ?
                new ObjectParameter("i_TaskBundleQuestionnaireFrequencyID", i_TaskBundleQuestionnaireFrequencyID) :
                new ObjectParameter("i_TaskBundleQuestionnaireFrequencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskBundleQuestionnaireFrequency_InsertUpdate_Result>("usp_TaskBundleQuestionnaireFrequency_InsertUpdate", i_AppUserIdParameter, i_TaskBundleIDParameter, i_QuestionaireIdParameter, i_FrequencyNumberParameter, vc_FrequencyParameter, vc_StatusCodeParameter, i_DiseaseIDParameter, b_IsPreventiveParameter, i_TaskBundleQuestionnaireFrequencyIDParameter, o_TaskBundleQuestionnaireFrequencyID);
        }
    
        public virtual ObjectResult<usp_TaskDueDates_Missed_Opportunity_DD_Result> usp_TaskDueDates_Missed_Opportunity_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskDueDates_Missed_Opportunity_DD_Result>("usp_TaskDueDates_Missed_Opportunity_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskDueDates_Select_DD_Result> usp_TaskDueDates_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskDueDates_Select_DD_Result>("usp_TaskDueDates_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_TaskStatus_Select_DD_Result> usp_TaskStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskStatus_Select_DD_Result>("usp_TaskStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_TaskType_Insert(Nullable<int> i_AppUserId, string vc_TaskTypeName, string vc_Description, string vc_StatusCode, Nullable<int> i_ScheduledDays, string vc_DestinationPage, Nullable<bool> i_AllowSpecificSchedules, ObjectParameter o_TaskTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_TaskTypeNameParameter = vc_TaskTypeName != null ?
                new ObjectParameter("vc_TaskTypeName", vc_TaskTypeName) :
                new ObjectParameter("vc_TaskTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ScheduledDaysParameter = i_ScheduledDays.HasValue ?
                new ObjectParameter("i_ScheduledDays", i_ScheduledDays) :
                new ObjectParameter("i_ScheduledDays", typeof(int));
    
            var vc_DestinationPageParameter = vc_DestinationPage != null ?
                new ObjectParameter("vc_DestinationPage", vc_DestinationPage) :
                new ObjectParameter("vc_DestinationPage", typeof(string));
    
            var i_AllowSpecificSchedulesParameter = i_AllowSpecificSchedules.HasValue ?
                new ObjectParameter("i_AllowSpecificSchedules", i_AllowSpecificSchedules) :
                new ObjectParameter("i_AllowSpecificSchedules", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskType_Insert", i_AppUserIdParameter, vc_TaskTypeNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_ScheduledDaysParameter, vc_DestinationPageParameter, i_AllowSpecificSchedulesParameter, o_TaskTypeId);
        }
    
        public virtual ObjectResult<usp_TaskType_Select_Result> usp_TaskType_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeIdParameter = i_TaskTypeId.HasValue ?
                new ObjectParameter("i_TaskTypeId", i_TaskTypeId) :
                new ObjectParameter("i_TaskTypeId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskType_Select_Result>("usp_TaskType_Select", i_AppUserIdParameter, i_TaskTypeIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_TaskType_Select_DD_Result> usp_TaskType_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_CareTeamId, Nullable<bool> b_IsAdmin)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_CareTeamIdParameter = i_CareTeamId.HasValue ?
                new ObjectParameter("i_CareTeamId", i_CareTeamId) :
                new ObjectParameter("i_CareTeamId", typeof(int));
    
            var b_IsAdminParameter = b_IsAdmin.HasValue ?
                new ObjectParameter("b_IsAdmin", b_IsAdmin) :
                new ObjectParameter("b_IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskType_Select_DD_Result>("usp_TaskType_Select_DD", i_AppUserIdParameter, i_UserIdParameter, i_CareTeamIdParameter, b_IsAdminParameter);
        }
    
        public virtual int usp_TaskType_Update(Nullable<int> i_AppUserId, string vc_TaskTypeName, string vc_Description, string vc_StatusCode, Nullable<int> i_ScheduledDays, Nullable<int> i_TaskTypeId, string vc_DestinationPage, Nullable<bool> i_AllowSpecificSchedules)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_TaskTypeNameParameter = vc_TaskTypeName != null ?
                new ObjectParameter("vc_TaskTypeName", vc_TaskTypeName) :
                new ObjectParameter("vc_TaskTypeName", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ScheduledDaysParameter = i_ScheduledDays.HasValue ?
                new ObjectParameter("i_ScheduledDays", i_ScheduledDays) :
                new ObjectParameter("i_ScheduledDays", typeof(int));
    
            var i_TaskTypeIdParameter = i_TaskTypeId.HasValue ?
                new ObjectParameter("i_TaskTypeId", i_TaskTypeId) :
                new ObjectParameter("i_TaskTypeId", typeof(int));
    
            var vc_DestinationPageParameter = vc_DestinationPage != null ?
                new ObjectParameter("vc_DestinationPage", vc_DestinationPage) :
                new ObjectParameter("vc_DestinationPage", typeof(string));
    
            var i_AllowSpecificSchedulesParameter = i_AllowSpecificSchedules.HasValue ?
                new ObjectParameter("i_AllowSpecificSchedules", i_AllowSpecificSchedules) :
                new ObjectParameter("i_AllowSpecificSchedules", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskType_Update", i_AppUserIdParameter, vc_TaskTypeNameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_ScheduledDaysParameter, i_TaskTypeIdParameter, vc_DestinationPageParameter, i_AllowSpecificSchedulesParameter);
        }
    
        public virtual int usp_TaskTypeCommunications_Insert(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeID, Nullable<int> i_CommunicationTypeID, Nullable<int> i_CommunicationSequence, Nullable<int> i_CommunicationAttemptDays, Nullable<int> i_NoOfDaysBeforeTaskClosedIncomplete, Nullable<int> i_CommunicationTemplateID, Nullable<int> i_TaskTypeGeneralizedID, ObjectParameter o_TaskTypeCommunicationID, string v_StatusCode, string v_RemainderState)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            var i_CommunicationTypeIDParameter = i_CommunicationTypeID.HasValue ?
                new ObjectParameter("i_CommunicationTypeID", i_CommunicationTypeID) :
                new ObjectParameter("i_CommunicationTypeID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(int));
    
            var i_CommunicationAttemptDaysParameter = i_CommunicationAttemptDays.HasValue ?
                new ObjectParameter("i_CommunicationAttemptDays", i_CommunicationAttemptDays) :
                new ObjectParameter("i_CommunicationAttemptDays", typeof(int));
    
            var i_NoOfDaysBeforeTaskClosedIncompleteParameter = i_NoOfDaysBeforeTaskClosedIncomplete.HasValue ?
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", i_NoOfDaysBeforeTaskClosedIncomplete) :
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", typeof(int));
    
            var i_CommunicationTemplateIDParameter = i_CommunicationTemplateID.HasValue ?
                new ObjectParameter("i_CommunicationTemplateID", i_CommunicationTemplateID) :
                new ObjectParameter("i_CommunicationTemplateID", typeof(int));
    
            var i_TaskTypeGeneralizedIDParameter = i_TaskTypeGeneralizedID.HasValue ?
                new ObjectParameter("i_TaskTypeGeneralizedID", i_TaskTypeGeneralizedID) :
                new ObjectParameter("i_TaskTypeGeneralizedID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_RemainderStateParameter = v_RemainderState != null ?
                new ObjectParameter("v_RemainderState", v_RemainderState) :
                new ObjectParameter("v_RemainderState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskTypeCommunications_Insert", i_AppUserIdParameter, i_TaskTypeIDParameter, i_CommunicationTypeIDParameter, i_CommunicationSequenceParameter, i_CommunicationAttemptDaysParameter, i_NoOfDaysBeforeTaskClosedIncompleteParameter, i_CommunicationTemplateIDParameter, i_TaskTypeGeneralizedIDParameter, o_TaskTypeCommunicationID, v_StatusCodeParameter, v_RemainderStateParameter);
        }
    
        public virtual ObjectResult<usp_TaskTypeCommunications_Select_Result> usp_TaskTypeCommunications_Select(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeCommunicationID, Nullable<int> i_TaskTypeID, Nullable<int> i_CommunicationSequence, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeCommunicationIDParameter = i_TaskTypeCommunicationID.HasValue ?
                new ObjectParameter("i_TaskTypeCommunicationID", i_TaskTypeCommunicationID) :
                new ObjectParameter("i_TaskTypeCommunicationID", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TaskTypeCommunications_Select_Result>("usp_TaskTypeCommunications_Select", i_AppUserIdParameter, i_TaskTypeCommunicationIDParameter, i_TaskTypeIDParameter, i_CommunicationSequenceParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_TaskTypeCommunications_Update(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeCommunicationID, Nullable<int> i_TaskTypeID, Nullable<int> i_CommunicationTypeID, Nullable<int> i_CommunicationSequence, Nullable<int> i_CommunicationAttemptDays, Nullable<int> i_NoOfDaysBeforeTaskClosedIncomplete, Nullable<int> i_CommunicationTemplateID, Nullable<int> i_TaskTypeGeneralizedID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeCommunicationIDParameter = i_TaskTypeCommunicationID.HasValue ?
                new ObjectParameter("i_TaskTypeCommunicationID", i_TaskTypeCommunicationID) :
                new ObjectParameter("i_TaskTypeCommunicationID", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            var i_CommunicationTypeIDParameter = i_CommunicationTypeID.HasValue ?
                new ObjectParameter("i_CommunicationTypeID", i_CommunicationTypeID) :
                new ObjectParameter("i_CommunicationTypeID", typeof(int));
    
            var i_CommunicationSequenceParameter = i_CommunicationSequence.HasValue ?
                new ObjectParameter("i_CommunicationSequence", i_CommunicationSequence) :
                new ObjectParameter("i_CommunicationSequence", typeof(int));
    
            var i_CommunicationAttemptDaysParameter = i_CommunicationAttemptDays.HasValue ?
                new ObjectParameter("i_CommunicationAttemptDays", i_CommunicationAttemptDays) :
                new ObjectParameter("i_CommunicationAttemptDays", typeof(int));
    
            var i_NoOfDaysBeforeTaskClosedIncompleteParameter = i_NoOfDaysBeforeTaskClosedIncomplete.HasValue ?
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", i_NoOfDaysBeforeTaskClosedIncomplete) :
                new ObjectParameter("i_NoOfDaysBeforeTaskClosedIncomplete", typeof(int));
    
            var i_CommunicationTemplateIDParameter = i_CommunicationTemplateID.HasValue ?
                new ObjectParameter("i_CommunicationTemplateID", i_CommunicationTemplateID) :
                new ObjectParameter("i_CommunicationTemplateID", typeof(int));
    
            var i_TaskTypeGeneralizedIDParameter = i_TaskTypeGeneralizedID.HasValue ?
                new ObjectParameter("i_TaskTypeGeneralizedID", i_TaskTypeGeneralizedID) :
                new ObjectParameter("i_TaskTypeGeneralizedID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskTypeCommunications_Update", i_AppUserIdParameter, i_TaskTypeCommunicationIDParameter, i_TaskTypeIDParameter, i_CommunicationTypeIDParameter, i_CommunicationSequenceParameter, i_CommunicationAttemptDaysParameter, i_NoOfDaysBeforeTaskClosedIncompleteParameter, i_CommunicationTemplateIDParameter, i_TaskTypeGeneralizedIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_TaskTypeCommunications_UpdateStatusCode(Nullable<int> i_AppUserId, Nullable<int> i_TaskTypeID, Nullable<int> i_TaskTypeGeneralizedID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TaskTypeIDParameter = i_TaskTypeID.HasValue ?
                new ObjectParameter("i_TaskTypeID", i_TaskTypeID) :
                new ObjectParameter("i_TaskTypeID", typeof(int));
    
            var i_TaskTypeGeneralizedIDParameter = i_TaskTypeGeneralizedID.HasValue ?
                new ObjectParameter("i_TaskTypeGeneralizedID", i_TaskTypeGeneralizedID) :
                new ObjectParameter("i_TaskTypeGeneralizedID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TaskTypeCommunications_UpdateStatusCode", i_AppUserIdParameter, i_TaskTypeIDParameter, i_TaskTypeGeneralizedIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_tbl_register_Update(Nullable<int> i_Id, string vc_Name, string vc_PW)
        {
            var i_IdParameter = i_Id.HasValue ?
                new ObjectParameter("i_Id", i_Id) :
                new ObjectParameter("i_Id", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_PWParameter = vc_PW != null ?
                new ObjectParameter("vc_PW", vc_PW) :
                new ObjectParameter("vc_PW", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_tbl_register_Update", i_IdParameter, vc_NameParameter, vc_PWParameter);
        }
    
        public virtual int usp_TherapeuticClass_Insert(Nullable<int> i_AppUserId, string vc_Name, string vc_Description, Nullable<int> i_SortOrder, string vc_StatusCode, ObjectParameter o_TherapeuticID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var i_SortOrderParameter = i_SortOrder.HasValue ?
                new ObjectParameter("i_SortOrder", i_SortOrder) :
                new ObjectParameter("i_SortOrder", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TherapeuticClass_Insert", i_AppUserIdParameter, vc_NameParameter, vc_DescriptionParameter, i_SortOrderParameter, vc_StatusCodeParameter, o_TherapeuticID);
        }
    
        public virtual ObjectResult<usp_TherapeuticClass_Select_Result> usp_TherapeuticClass_Select(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TherapeuticClass_Select_Result>("usp_TherapeuticClass_Select", i_AppUserIdParameter, i_TherapeuticIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_TherapeuticClass_Update(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, string vc_Name, string vc_Description, string vc_StatusCode, Nullable<int> i_sortorder)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vc_DescriptionParameter = vc_Description != null ?
                new ObjectParameter("vc_Description", vc_Description) :
                new ObjectParameter("vc_Description", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_sortorderParameter = i_sortorder.HasValue ?
                new ObjectParameter("i_sortorder", i_sortorder) :
                new ObjectParameter("i_sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TherapeuticClass_Update", i_AppUserIdParameter, i_TherapeuticIDParameter, vc_NameParameter, vc_DescriptionParameter, vc_StatusCodeParameter, i_sortorderParameter);
        }
    
        public virtual int usp_TherapeuticClassDrug_Delete(Nullable<int> i_AppUserId, Nullable<int> i_DrugCodeID, Nullable<int> i_TherapeuticID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_DrugCodeIDParameter = i_DrugCodeID.HasValue ?
                new ObjectParameter("i_DrugCodeID", i_DrugCodeID) :
                new ObjectParameter("i_DrugCodeID", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TherapeuticClassDrug_Delete", i_AppUserIdParameter, i_DrugCodeIDParameter, i_TherapeuticIDParameter);
        }
    
        public virtual int usp_TherapeuticClassDrug_Insert(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, Nullable<int> i_DrugCodeID, ObjectParameter o_TherapeuticClassDrug)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var i_DrugCodeIDParameter = i_DrugCodeID.HasValue ?
                new ObjectParameter("i_DrugCodeID", i_DrugCodeID) :
                new ObjectParameter("i_DrugCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TherapeuticClassDrug_Insert", i_AppUserIdParameter, i_TherapeuticIDParameter, i_DrugCodeIDParameter, o_TherapeuticClassDrug);
        }
    
        public virtual ObjectResult<usp_TherapeuticClassDrug_Select_Result> usp_TherapeuticClassDrug_Select(Nullable<int> i_AppUserId, Nullable<int> i_TherapeuticID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_TherapeuticIDParameter = i_TherapeuticID.HasValue ?
                new ObjectParameter("i_TherapeuticID", i_TherapeuticID) :
                new ObjectParameter("i_TherapeuticID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TherapeuticClassDrug_Select_Result>("usp_TherapeuticClassDrug_Select", i_AppUserIdParameter, i_TherapeuticIDParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_UIDef_Select_DD_Result> usp_UIDef_Select_DD(Nullable<int> i_AppUserId, Nullable<int> i_PortalId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PortalIdParameter = i_PortalId.HasValue ?
                new ObjectParameter("i_PortalId", i_PortalId) :
                new ObjectParameter("i_PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UIDef_Select_DD_Result>("usp_UIDef_Select_DD", i_AppUserIdParameter, i_PortalIdParameter);
        }
    
        public virtual int usp_UIDef_UIDefUserRoles_Insert(Nullable<int> i_AppUserId, Nullable<bool> i_ReadYN, Nullable<bool> i_UpdateYN, Nullable<bool> i_InsertYN, Nullable<bool> i_DeleteYN, Nullable<int> i_SecurityRoleId, Nullable<int> i_UIDefId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReadYNParameter = i_ReadYN.HasValue ?
                new ObjectParameter("i_ReadYN", i_ReadYN) :
                new ObjectParameter("i_ReadYN", typeof(bool));
    
            var i_UpdateYNParameter = i_UpdateYN.HasValue ?
                new ObjectParameter("i_UpdateYN", i_UpdateYN) :
                new ObjectParameter("i_UpdateYN", typeof(bool));
    
            var i_InsertYNParameter = i_InsertYN.HasValue ?
                new ObjectParameter("i_InsertYN", i_InsertYN) :
                new ObjectParameter("i_InsertYN", typeof(bool));
    
            var i_DeleteYNParameter = i_DeleteYN.HasValue ?
                new ObjectParameter("i_DeleteYN", i_DeleteYN) :
                new ObjectParameter("i_DeleteYN", typeof(bool));
    
            var i_SecurityRoleIdParameter = i_SecurityRoleId.HasValue ?
                new ObjectParameter("i_SecurityRoleId", i_SecurityRoleId) :
                new ObjectParameter("i_SecurityRoleId", typeof(int));
    
            var i_UIDefIdParameter = i_UIDefId.HasValue ?
                new ObjectParameter("i_UIDefId", i_UIDefId) :
                new ObjectParameter("i_UIDefId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UIDef_UIDefUserRoles_Insert", i_AppUserIdParameter, i_ReadYNParameter, i_UpdateYNParameter, i_InsertYNParameter, i_DeleteYNParameter, i_SecurityRoleIdParameter, i_UIDefIdParameter);
        }
    
        public virtual int usp_UIDef_Update(Nullable<int> i_AppUserId, Nullable<int> i_UIDefId, Nullable<int> i_PortalId, string v_PageURL, string v_PageObject, string v_PageDescription, string v_MenuItemName, Nullable<bool> b_isDataAdminPage)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UIDefIdParameter = i_UIDefId.HasValue ?
                new ObjectParameter("i_UIDefId", i_UIDefId) :
                new ObjectParameter("i_UIDefId", typeof(int));
    
            var i_PortalIdParameter = i_PortalId.HasValue ?
                new ObjectParameter("i_PortalId", i_PortalId) :
                new ObjectParameter("i_PortalId", typeof(int));
    
            var v_PageURLParameter = v_PageURL != null ?
                new ObjectParameter("v_PageURL", v_PageURL) :
                new ObjectParameter("v_PageURL", typeof(string));
    
            var v_PageObjectParameter = v_PageObject != null ?
                new ObjectParameter("v_PageObject", v_PageObject) :
                new ObjectParameter("v_PageObject", typeof(string));
    
            var v_PageDescriptionParameter = v_PageDescription != null ?
                new ObjectParameter("v_PageDescription", v_PageDescription) :
                new ObjectParameter("v_PageDescription", typeof(string));
    
            var v_MenuItemNameParameter = v_MenuItemName != null ?
                new ObjectParameter("v_MenuItemName", v_MenuItemName) :
                new ObjectParameter("v_MenuItemName", typeof(string));
    
            var b_isDataAdminPageParameter = b_isDataAdminPage.HasValue ?
                new ObjectParameter("b_isDataAdminPage", b_isDataAdminPage) :
                new ObjectParameter("b_isDataAdminPage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UIDef_Update", i_AppUserIdParameter, i_UIDefIdParameter, i_PortalIdParameter, v_PageURLParameter, v_PageObjectParameter, v_PageDescriptionParameter, v_MenuItemNameParameter, b_isDataAdminPageParameter);
        }
    
        public virtual int usp_UIDefUserRoles_Delete(Nullable<int> i_AppUserId, Nullable<int> i_UIDefUserRoleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UIDefUserRoleIdParameter = i_UIDefUserRoleId.HasValue ?
                new ObjectParameter("i_UIDefUserRoleId", i_UIDefUserRoleId) :
                new ObjectParameter("i_UIDefUserRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UIDefUserRoles_Delete", i_AppUserIdParameter, i_UIDefUserRoleIdParameter);
        }
    
        public virtual ObjectResult<usp_UIDefUserRoles_Select_All_Result> usp_UIDefUserRoles_Select_All(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UIDefUserRoles_Select_All_Result>("usp_UIDefUserRoles_Select_All", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_UIDefUserRoles_Select_ByUserId_Multiroles_Result> usp_UIDefUserRoles_Select_ByUserId_Multiroles(Nullable<int> i_AppUserId, string v_SecurityRoleName)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_SecurityRoleNameParameter = v_SecurityRoleName != null ?
                new ObjectParameter("v_SecurityRoleName", v_SecurityRoleName) :
                new ObjectParameter("v_SecurityRoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UIDefUserRoles_Select_ByUserId_Multiroles_Result>("usp_UIDefUserRoles_Select_ByUserId_Multiroles", i_AppUserIdParameter, v_SecurityRoleNameParameter);
        }
    
        public virtual int usp_UIDefUserRoles_Update(Nullable<int> i_AppUserId, Nullable<bool> i_ReadYN, Nullable<bool> i_UpdateYN, Nullable<bool> i_InsertYN, Nullable<bool> i_DeleteYN, Nullable<int> i_SecurityRoleId, Nullable<int> i_UIDefUserRoleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReadYNParameter = i_ReadYN.HasValue ?
                new ObjectParameter("i_ReadYN", i_ReadYN) :
                new ObjectParameter("i_ReadYN", typeof(bool));
    
            var i_UpdateYNParameter = i_UpdateYN.HasValue ?
                new ObjectParameter("i_UpdateYN", i_UpdateYN) :
                new ObjectParameter("i_UpdateYN", typeof(bool));
    
            var i_InsertYNParameter = i_InsertYN.HasValue ?
                new ObjectParameter("i_InsertYN", i_InsertYN) :
                new ObjectParameter("i_InsertYN", typeof(bool));
    
            var i_DeleteYNParameter = i_DeleteYN.HasValue ?
                new ObjectParameter("i_DeleteYN", i_DeleteYN) :
                new ObjectParameter("i_DeleteYN", typeof(bool));
    
            var i_SecurityRoleIdParameter = i_SecurityRoleId.HasValue ?
                new ObjectParameter("i_SecurityRoleId", i_SecurityRoleId) :
                new ObjectParameter("i_SecurityRoleId", typeof(int));
    
            var i_UIDefUserRoleIdParameter = i_UIDefUserRoleId.HasValue ?
                new ObjectParameter("i_UIDefUserRoleId", i_UIDefUserRoleId) :
                new ObjectParameter("i_UIDefUserRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UIDefUserRoles_Update", i_AppUserIdParameter, i_ReadYNParameter, i_UpdateYNParameter, i_InsertYNParameter, i_DeleteYNParameter, i_SecurityRoleIdParameter, i_UIDefUserRoleIdParameter);
        }
    
        public virtual ObjectResult<usp_User_Profile_Select_Wrapper_Result> usp_User_Profile_Select_Wrapper(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_User_Profile_Select_Wrapper_Result>("usp_User_Profile_Select_Wrapper", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual int usp_UserActivityLog_Insert(Nullable<int> i_AppUserId, string v_UserLoginIPAddress, string v_PageName, string v_ControlType, string v_ActivityType, string vc_ActivityDetails, Nullable<long> i_PatientUserID, Nullable<long> i_PatientMRN, string i_GridRowId, string i_GridDetails, ObjectParameter i_Status)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_UserLoginIPAddressParameter = v_UserLoginIPAddress != null ?
                new ObjectParameter("v_UserLoginIPAddress", v_UserLoginIPAddress) :
                new ObjectParameter("v_UserLoginIPAddress", typeof(string));
    
            var v_PageNameParameter = v_PageName != null ?
                new ObjectParameter("v_PageName", v_PageName) :
                new ObjectParameter("v_PageName", typeof(string));
    
            var v_ControlTypeParameter = v_ControlType != null ?
                new ObjectParameter("v_ControlType", v_ControlType) :
                new ObjectParameter("v_ControlType", typeof(string));
    
            var v_ActivityTypeParameter = v_ActivityType != null ?
                new ObjectParameter("v_ActivityType", v_ActivityType) :
                new ObjectParameter("v_ActivityType", typeof(string));
    
            var vc_ActivityDetailsParameter = vc_ActivityDetails != null ?
                new ObjectParameter("vc_ActivityDetails", vc_ActivityDetails) :
                new ObjectParameter("vc_ActivityDetails", typeof(string));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(long));
    
            var i_PatientMRNParameter = i_PatientMRN.HasValue ?
                new ObjectParameter("i_PatientMRN", i_PatientMRN) :
                new ObjectParameter("i_PatientMRN", typeof(long));
    
            var i_GridRowIdParameter = i_GridRowId != null ?
                new ObjectParameter("i_GridRowId", i_GridRowId) :
                new ObjectParameter("i_GridRowId", typeof(string));
    
            var i_GridDetailsParameter = i_GridDetails != null ?
                new ObjectParameter("i_GridDetails", i_GridDetails) :
                new ObjectParameter("i_GridDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserActivityLog_Insert", i_AppUserIdParameter, v_UserLoginIPAddressParameter, v_PageNameParameter, v_ControlTypeParameter, v_ActivityTypeParameter, vc_ActivityDetailsParameter, i_PatientUserIDParameter, i_PatientMRNParameter, i_GridRowIdParameter, i_GridDetailsParameter, i_Status);
        }
    
        public virtual int usp_UserActivityLog_select(Nullable<int> i_AppUserId, Nullable<int> i_RoleID, Nullable<System.DateTime> dt_ActivityDatefrom, Nullable<System.DateTime> dt_ActivityDateto, string vc_PageAccessed, string vc_OperationPerformed, Nullable<int> i_StartIndex, Nullable<int> i_endindex, Nullable<int> i_Providerid, string v_SortBy, string v_SortType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_RoleIDParameter = i_RoleID.HasValue ?
                new ObjectParameter("i_RoleID", i_RoleID) :
                new ObjectParameter("i_RoleID", typeof(int));
    
            var dt_ActivityDatefromParameter = dt_ActivityDatefrom.HasValue ?
                new ObjectParameter("dt_ActivityDatefrom", dt_ActivityDatefrom) :
                new ObjectParameter("dt_ActivityDatefrom", typeof(System.DateTime));
    
            var dt_ActivityDatetoParameter = dt_ActivityDateto.HasValue ?
                new ObjectParameter("dt_ActivityDateto", dt_ActivityDateto) :
                new ObjectParameter("dt_ActivityDateto", typeof(System.DateTime));
    
            var vc_PageAccessedParameter = vc_PageAccessed != null ?
                new ObjectParameter("vc_PageAccessed", vc_PageAccessed) :
                new ObjectParameter("vc_PageAccessed", typeof(string));
    
            var vc_OperationPerformedParameter = vc_OperationPerformed != null ?
                new ObjectParameter("vc_OperationPerformed", vc_OperationPerformed) :
                new ObjectParameter("vc_OperationPerformed", typeof(string));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_endindexParameter = i_endindex.HasValue ?
                new ObjectParameter("i_endindex", i_endindex) :
                new ObjectParameter("i_endindex", typeof(int));
    
            var i_ProvideridParameter = i_Providerid.HasValue ?
                new ObjectParameter("i_Providerid", i_Providerid) :
                new ObjectParameter("i_Providerid", typeof(int));
    
            var v_SortByParameter = v_SortBy != null ?
                new ObjectParameter("v_SortBy", v_SortBy) :
                new ObjectParameter("v_SortBy", typeof(string));
    
            var v_SortTypeParameter = v_SortType != null ?
                new ObjectParameter("v_SortType", v_SortType) :
                new ObjectParameter("v_SortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserActivityLog_select", i_AppUserIdParameter, i_RoleIDParameter, dt_ActivityDatefromParameter, dt_ActivityDatetoParameter, vc_PageAccessedParameter, vc_OperationPerformedParameter, i_StartIndexParameter, i_endindexParameter, i_ProvideridParameter, v_SortByParameter, v_SortTypeParameter);
        }
    
        public virtual int usp_UserActivityLog_Select_Test(Nullable<int> i_AppUserId, string v_LoginName, Nullable<System.DateTime> dt_ActivityDatefrom, Nullable<System.DateTime> dt_ActivityDateto, string vc_PageAccessed, string vc_OperationPerformed, Nullable<int> i_StartIndex, Nullable<int> i_endindex, Nullable<int> i_Providerid, string v_SortBy, string v_SortType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_LoginNameParameter = v_LoginName != null ?
                new ObjectParameter("v_LoginName", v_LoginName) :
                new ObjectParameter("v_LoginName", typeof(string));
    
            var dt_ActivityDatefromParameter = dt_ActivityDatefrom.HasValue ?
                new ObjectParameter("dt_ActivityDatefrom", dt_ActivityDatefrom) :
                new ObjectParameter("dt_ActivityDatefrom", typeof(System.DateTime));
    
            var dt_ActivityDatetoParameter = dt_ActivityDateto.HasValue ?
                new ObjectParameter("dt_ActivityDateto", dt_ActivityDateto) :
                new ObjectParameter("dt_ActivityDateto", typeof(System.DateTime));
    
            var vc_PageAccessedParameter = vc_PageAccessed != null ?
                new ObjectParameter("vc_PageAccessed", vc_PageAccessed) :
                new ObjectParameter("vc_PageAccessed", typeof(string));
    
            var vc_OperationPerformedParameter = vc_OperationPerformed != null ?
                new ObjectParameter("vc_OperationPerformed", vc_OperationPerformed) :
                new ObjectParameter("vc_OperationPerformed", typeof(string));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_endindexParameter = i_endindex.HasValue ?
                new ObjectParameter("i_endindex", i_endindex) :
                new ObjectParameter("i_endindex", typeof(int));
    
            var i_ProvideridParameter = i_Providerid.HasValue ?
                new ObjectParameter("i_Providerid", i_Providerid) :
                new ObjectParameter("i_Providerid", typeof(int));
    
            var v_SortByParameter = v_SortBy != null ?
                new ObjectParameter("v_SortBy", v_SortBy) :
                new ObjectParameter("v_SortBy", typeof(string));
    
            var v_SortTypeParameter = v_SortType != null ?
                new ObjectParameter("v_SortType", v_SortType) :
                new ObjectParameter("v_SortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserActivityLog_Select_Test", i_AppUserIdParameter, v_LoginNameParameter, dt_ActivityDatefromParameter, dt_ActivityDatetoParameter, vc_PageAccessedParameter, vc_OperationPerformedParameter, i_StartIndexParameter, i_endindexParameter, i_ProvideridParameter, v_SortByParameter, v_SortTypeParameter);
        }
    
        public virtual int usp_UserAllergies_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_AllergiesID, string vc_Reaction, string vc_Severity, string vc_Comments, string vc_StatusCode, Nullable<System.DateTime> dt_UserAllergiesDate, ObjectParameter o_UserAllergiesID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_AllergiesIDParameter = i_AllergiesID.HasValue ?
                new ObjectParameter("i_AllergiesID", i_AllergiesID) :
                new ObjectParameter("i_AllergiesID", typeof(int));
    
            var vc_ReactionParameter = vc_Reaction != null ?
                new ObjectParameter("vc_Reaction", vc_Reaction) :
                new ObjectParameter("vc_Reaction", typeof(string));
    
            var vc_SeverityParameter = vc_Severity != null ?
                new ObjectParameter("vc_Severity", vc_Severity) :
                new ObjectParameter("vc_Severity", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_UserAllergiesDateParameter = dt_UserAllergiesDate.HasValue ?
                new ObjectParameter("dt_UserAllergiesDate", dt_UserAllergiesDate) :
                new ObjectParameter("dt_UserAllergiesDate", typeof(System.DateTime));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserAllergies_Insert", i_AppUserIdParameter, i_UserIDParameter, i_AllergiesIDParameter, vc_ReactionParameter, vc_SeverityParameter, vc_CommentsParameter, vc_StatusCodeParameter, dt_UserAllergiesDateParameter, o_UserAllergiesID, i_DataSourceIdParameter);
        }
    
        public virtual ObjectResult<usp_UserAllergies_Select_Result> usp_UserAllergies_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_UserAllergiesID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_UserAllergiesIDParameter = i_UserAllergiesID.HasValue ?
                new ObjectParameter("i_UserAllergiesID", i_UserAllergiesID) :
                new ObjectParameter("i_UserAllergiesID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserAllergies_Select_Result>("usp_UserAllergies_Select", i_AppUserIdParameter, i_UserIDParameter, i_UserAllergiesIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserAllergies_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_AllergiesID, string vc_Reaction, string vc_Severity, string vc_Comments, string vc_StatusCode, Nullable<System.DateTime> dt_UserAllergiesDate, Nullable<int> i_UserAllergiesID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_AllergiesIDParameter = i_AllergiesID.HasValue ?
                new ObjectParameter("i_AllergiesID", i_AllergiesID) :
                new ObjectParameter("i_AllergiesID", typeof(int));
    
            var vc_ReactionParameter = vc_Reaction != null ?
                new ObjectParameter("vc_Reaction", vc_Reaction) :
                new ObjectParameter("vc_Reaction", typeof(string));
    
            var vc_SeverityParameter = vc_Severity != null ?
                new ObjectParameter("vc_Severity", vc_Severity) :
                new ObjectParameter("vc_Severity", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_UserAllergiesDateParameter = dt_UserAllergiesDate.HasValue ?
                new ObjectParameter("dt_UserAllergiesDate", dt_UserAllergiesDate) :
                new ObjectParameter("dt_UserAllergiesDate", typeof(System.DateTime));
    
            var i_UserAllergiesIDParameter = i_UserAllergiesID.HasValue ?
                new ObjectParameter("i_UserAllergiesID", i_UserAllergiesID) :
                new ObjectParameter("i_UserAllergiesID", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserAllergies_Update", i_AppUserIdParameter, i_UserIDParameter, i_AllergiesIDParameter, vc_ReactionParameter, vc_SeverityParameter, vc_CommentsParameter, vc_StatusCodeParameter, dt_UserAllergiesDateParameter, i_UserAllergiesIDParameter, i_DataSourceIdParameter);
        }
    
        public virtual ObjectResult<string> usp_usercommunication_ByUserCommunicationId(Nullable<int> i_AppUserId, Nullable<int> i_UserCommunicationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserCommunicationIdParameter = i_UserCommunicationId.HasValue ?
                new ObjectParameter("i_UserCommunicationId", i_UserCommunicationId) :
                new ObjectParameter("i_UserCommunicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_usercommunication_ByUserCommunicationId", i_AppUserIdParameter, i_UserCommunicationIdParameter);
        }
    
        public virtual int usp_UserCommunication_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_DateScheduled, Nullable<System.DateTime> dt_DateSent, Nullable<int> i_CommunicationCohortId, Nullable<int> i_CommunicationTypeId, Nullable<int> i_CommunicationTemplateId, string vc_StatusCode, Nullable<int> i_SentByUserID, string vc_CommunicationText, Nullable<bool> vc_IsSentIndicator, string vc_SubjectText, string vc_SenderEmailAddress, Nullable<int> i_UserMessageId, Nullable<int> i_CommunicationId, Nullable<int> i_dbmailReferenceId, string vc_eMailDeliveryState, string vc_CommunicationState, ObjectParameter o_UserCommunicationId, Nullable<bool> b_IsAdhoc, Nullable<int> i_ProgramID, Nullable<bool> b_IsEnrollment, Nullable<int> i_AssignedCareProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_DateScheduledParameter = dt_DateScheduled.HasValue ?
                new ObjectParameter("dt_DateScheduled", dt_DateScheduled) :
                new ObjectParameter("dt_DateScheduled", typeof(System.DateTime));
    
            var dt_DateSentParameter = dt_DateSent.HasValue ?
                new ObjectParameter("dt_DateSent", dt_DateSent) :
                new ObjectParameter("dt_DateSent", typeof(System.DateTime));
    
            var i_CommunicationCohortIdParameter = i_CommunicationCohortId.HasValue ?
                new ObjectParameter("i_CommunicationCohortId", i_CommunicationCohortId) :
                new ObjectParameter("i_CommunicationCohortId", typeof(int));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_SentByUserIDParameter = i_SentByUserID.HasValue ?
                new ObjectParameter("i_SentByUserID", i_SentByUserID) :
                new ObjectParameter("i_SentByUserID", typeof(int));
    
            var vc_CommunicationTextParameter = vc_CommunicationText != null ?
                new ObjectParameter("vc_CommunicationText", vc_CommunicationText) :
                new ObjectParameter("vc_CommunicationText", typeof(string));
    
            var vc_IsSentIndicatorParameter = vc_IsSentIndicator.HasValue ?
                new ObjectParameter("vc_IsSentIndicator", vc_IsSentIndicator) :
                new ObjectParameter("vc_IsSentIndicator", typeof(bool));
    
            var vc_SubjectTextParameter = vc_SubjectText != null ?
                new ObjectParameter("vc_SubjectText", vc_SubjectText) :
                new ObjectParameter("vc_SubjectText", typeof(string));
    
            var vc_SenderEmailAddressParameter = vc_SenderEmailAddress != null ?
                new ObjectParameter("vc_SenderEmailAddress", vc_SenderEmailAddress) :
                new ObjectParameter("vc_SenderEmailAddress", typeof(string));
    
            var i_UserMessageIdParameter = i_UserMessageId.HasValue ?
                new ObjectParameter("i_UserMessageId", i_UserMessageId) :
                new ObjectParameter("i_UserMessageId", typeof(int));
    
            var i_CommunicationIdParameter = i_CommunicationId.HasValue ?
                new ObjectParameter("i_CommunicationId", i_CommunicationId) :
                new ObjectParameter("i_CommunicationId", typeof(int));
    
            var i_dbmailReferenceIdParameter = i_dbmailReferenceId.HasValue ?
                new ObjectParameter("i_dbmailReferenceId", i_dbmailReferenceId) :
                new ObjectParameter("i_dbmailReferenceId", typeof(int));
    
            var vc_eMailDeliveryStateParameter = vc_eMailDeliveryState != null ?
                new ObjectParameter("vc_eMailDeliveryState", vc_eMailDeliveryState) :
                new ObjectParameter("vc_eMailDeliveryState", typeof(string));
    
            var vc_CommunicationStateParameter = vc_CommunicationState != null ?
                new ObjectParameter("vc_CommunicationState", vc_CommunicationState) :
                new ObjectParameter("vc_CommunicationState", typeof(string));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var b_IsEnrollmentParameter = b_IsEnrollment.HasValue ?
                new ObjectParameter("b_IsEnrollment", b_IsEnrollment) :
                new ObjectParameter("b_IsEnrollment", typeof(bool));
    
            var i_AssignedCareProviderIDParameter = i_AssignedCareProviderID.HasValue ?
                new ObjectParameter("i_AssignedCareProviderID", i_AssignedCareProviderID) :
                new ObjectParameter("i_AssignedCareProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserCommunication_Insert", i_AppUserIdParameter, i_UserIdParameter, dt_DateDueParameter, dt_DateScheduledParameter, dt_DateSentParameter, i_CommunicationCohortIdParameter, i_CommunicationTypeIdParameter, i_CommunicationTemplateIdParameter, vc_StatusCodeParameter, i_SentByUserIDParameter, vc_CommunicationTextParameter, vc_IsSentIndicatorParameter, vc_SubjectTextParameter, vc_SenderEmailAddressParameter, i_UserMessageIdParameter, i_CommunicationIdParameter, i_dbmailReferenceIdParameter, vc_eMailDeliveryStateParameter, vc_CommunicationStateParameter, o_UserCommunicationId, b_IsAdhocParameter, i_ProgramIDParameter, b_IsEnrollmentParameter, i_AssignedCareProviderIDParameter);
        }
    
        public virtual ObjectResult<usp_UserCommunication_Select_Result> usp_UserCommunication_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserCommunicationId, Nullable<int> i_UserId, string v_StatusCode, Nullable<bool> i_TopParam, string v_NoteType, Nullable<bool> b_ShowLastOneYearData)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserCommunicationIdParameter = i_UserCommunicationId.HasValue ?
                new ObjectParameter("i_UserCommunicationId", i_UserCommunicationId) :
                new ObjectParameter("i_UserCommunicationId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_TopParamParameter = i_TopParam.HasValue ?
                new ObjectParameter("i_TopParam", i_TopParam) :
                new ObjectParameter("i_TopParam", typeof(bool));
    
            var v_NoteTypeParameter = v_NoteType != null ?
                new ObjectParameter("v_NoteType", v_NoteType) :
                new ObjectParameter("v_NoteType", typeof(string));
    
            var b_ShowLastOneYearDataParameter = b_ShowLastOneYearData.HasValue ?
                new ObjectParameter("b_ShowLastOneYearData", b_ShowLastOneYearData) :
                new ObjectParameter("b_ShowLastOneYearData", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserCommunication_Select_Result>("usp_UserCommunication_Select", i_AppUserIdParameter, i_UserCommunicationIdParameter, i_UserIdParameter, v_StatusCodeParameter, i_TopParamParameter, v_NoteTypeParameter, b_ShowLastOneYearDataParameter);
        }
    
        public virtual int usp_UserCommunication_SelectByCommunicationId(Nullable<int> i_AppUserId, Nullable<int> i_CommunicationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CommunicationIdParameter = i_CommunicationId.HasValue ?
                new ObjectParameter("i_CommunicationId", i_CommunicationId) :
                new ObjectParameter("i_CommunicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserCommunication_SelectByCommunicationId", i_AppUserIdParameter, i_CommunicationIdParameter);
        }
    
        public virtual ObjectResult<usp_UserCommunication_SelectMore_Result> usp_UserCommunication_SelectMore(Nullable<int> i_AppUserId, Nullable<int> i_UserCommunicationId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserCommunicationIdParameter = i_UserCommunicationId.HasValue ?
                new ObjectParameter("i_UserCommunicationId", i_UserCommunicationId) :
                new ObjectParameter("i_UserCommunicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserCommunication_SelectMore_Result>("usp_UserCommunication_SelectMore", i_AppUserIdParameter, i_UserCommunicationIdParameter);
        }
    
        public virtual int usp_UserCommunication_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_DateScheduled, Nullable<System.DateTime> dt_DateSent, Nullable<int> i_CommunicationCohortId, Nullable<int> i_CommunicationTypeId, Nullable<int> i_CommunicationTemplateId, string vc_StatusCode, Nullable<int> i_SentByUserID, string vc_CommunicationText, Nullable<bool> vc_IsSentIndicator, string vc_SubjectText, string vc_SenderEmailAddress, Nullable<int> i_UserMessageId, Nullable<int> i_CommunicationId, Nullable<int> i_dbmailReferenceId, string vc_eMailDeliveryState, Nullable<int> i_UserCommunicationId, string vc_CommunicationState, Nullable<int> i_ProgramID, Nullable<int> i_AssignedCareProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_DateScheduledParameter = dt_DateScheduled.HasValue ?
                new ObjectParameter("dt_DateScheduled", dt_DateScheduled) :
                new ObjectParameter("dt_DateScheduled", typeof(System.DateTime));
    
            var dt_DateSentParameter = dt_DateSent.HasValue ?
                new ObjectParameter("dt_DateSent", dt_DateSent) :
                new ObjectParameter("dt_DateSent", typeof(System.DateTime));
    
            var i_CommunicationCohortIdParameter = i_CommunicationCohortId.HasValue ?
                new ObjectParameter("i_CommunicationCohortId", i_CommunicationCohortId) :
                new ObjectParameter("i_CommunicationCohortId", typeof(int));
    
            var i_CommunicationTypeIdParameter = i_CommunicationTypeId.HasValue ?
                new ObjectParameter("i_CommunicationTypeId", i_CommunicationTypeId) :
                new ObjectParameter("i_CommunicationTypeId", typeof(int));
    
            var i_CommunicationTemplateIdParameter = i_CommunicationTemplateId.HasValue ?
                new ObjectParameter("i_CommunicationTemplateId", i_CommunicationTemplateId) :
                new ObjectParameter("i_CommunicationTemplateId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_SentByUserIDParameter = i_SentByUserID.HasValue ?
                new ObjectParameter("i_SentByUserID", i_SentByUserID) :
                new ObjectParameter("i_SentByUserID", typeof(int));
    
            var vc_CommunicationTextParameter = vc_CommunicationText != null ?
                new ObjectParameter("vc_CommunicationText", vc_CommunicationText) :
                new ObjectParameter("vc_CommunicationText", typeof(string));
    
            var vc_IsSentIndicatorParameter = vc_IsSentIndicator.HasValue ?
                new ObjectParameter("vc_IsSentIndicator", vc_IsSentIndicator) :
                new ObjectParameter("vc_IsSentIndicator", typeof(bool));
    
            var vc_SubjectTextParameter = vc_SubjectText != null ?
                new ObjectParameter("vc_SubjectText", vc_SubjectText) :
                new ObjectParameter("vc_SubjectText", typeof(string));
    
            var vc_SenderEmailAddressParameter = vc_SenderEmailAddress != null ?
                new ObjectParameter("vc_SenderEmailAddress", vc_SenderEmailAddress) :
                new ObjectParameter("vc_SenderEmailAddress", typeof(string));
    
            var i_UserMessageIdParameter = i_UserMessageId.HasValue ?
                new ObjectParameter("i_UserMessageId", i_UserMessageId) :
                new ObjectParameter("i_UserMessageId", typeof(int));
    
            var i_CommunicationIdParameter = i_CommunicationId.HasValue ?
                new ObjectParameter("i_CommunicationId", i_CommunicationId) :
                new ObjectParameter("i_CommunicationId", typeof(int));
    
            var i_dbmailReferenceIdParameter = i_dbmailReferenceId.HasValue ?
                new ObjectParameter("i_dbmailReferenceId", i_dbmailReferenceId) :
                new ObjectParameter("i_dbmailReferenceId", typeof(int));
    
            var vc_eMailDeliveryStateParameter = vc_eMailDeliveryState != null ?
                new ObjectParameter("vc_eMailDeliveryState", vc_eMailDeliveryState) :
                new ObjectParameter("vc_eMailDeliveryState", typeof(string));
    
            var i_UserCommunicationIdParameter = i_UserCommunicationId.HasValue ?
                new ObjectParameter("i_UserCommunicationId", i_UserCommunicationId) :
                new ObjectParameter("i_UserCommunicationId", typeof(int));
    
            var vc_CommunicationStateParameter = vc_CommunicationState != null ?
                new ObjectParameter("vc_CommunicationState", vc_CommunicationState) :
                new ObjectParameter("vc_CommunicationState", typeof(string));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_AssignedCareProviderIDParameter = i_AssignedCareProviderID.HasValue ?
                new ObjectParameter("i_AssignedCareProviderID", i_AssignedCareProviderID) :
                new ObjectParameter("i_AssignedCareProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserCommunication_Update", i_AppUserIdParameter, i_UserIdParameter, dt_DateDueParameter, dt_DateScheduledParameter, dt_DateSentParameter, i_CommunicationCohortIdParameter, i_CommunicationTypeIdParameter, i_CommunicationTemplateIdParameter, vc_StatusCodeParameter, i_SentByUserIDParameter, vc_CommunicationTextParameter, vc_IsSentIndicatorParameter, vc_SubjectTextParameter, vc_SenderEmailAddressParameter, i_UserMessageIdParameter, i_CommunicationIdParameter, i_dbmailReferenceIdParameter, vc_eMailDeliveryStateParameter, i_UserCommunicationIdParameter, vc_CommunicationStateParameter, i_ProgramIDParameter, i_AssignedCareProviderIDParameter);
        }
    
        public virtual int usp_UserCommunication_UpdateCommunicationStatus(Nullable<int> i_UserCommunicationId, Nullable<int> i_AppUserId, string v_CommunicationState)
        {
            var i_UserCommunicationIdParameter = i_UserCommunicationId.HasValue ?
                new ObjectParameter("i_UserCommunicationId", i_UserCommunicationId) :
                new ObjectParameter("i_UserCommunicationId", typeof(int));
    
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_CommunicationStateParameter = v_CommunicationState != null ?
                new ObjectParameter("v_CommunicationState", v_CommunicationState) :
                new ObjectParameter("v_CommunicationState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserCommunication_UpdateCommunicationStatus", i_UserCommunicationIdParameter, i_AppUserIdParameter, v_CommunicationStateParameter);
        }
    
        public virtual ObjectResult<usp_UserControl_Select_Result> usp_UserControl_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserControl_Select_Result>("usp_UserControl_Select", i_AppUserIdParameter);
        }
    
        public virtual int usp_UserDiagnosisCodes_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_DiagnosisID, Nullable<System.DateTime> d_DateDiagnosed, string v_Commments, string c_StatusCode, ObjectParameter o_UserDiagnosisID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_DiagnosisIDParameter = i_DiagnosisID.HasValue ?
                new ObjectParameter("i_DiagnosisID", i_DiagnosisID) :
                new ObjectParameter("i_DiagnosisID", typeof(int));
    
            var d_DateDiagnosedParameter = d_DateDiagnosed.HasValue ?
                new ObjectParameter("d_DateDiagnosed", d_DateDiagnosed) :
                new ObjectParameter("d_DateDiagnosed", typeof(System.DateTime));
    
            var v_CommmentsParameter = v_Commments != null ?
                new ObjectParameter("v_Commments", v_Commments) :
                new ObjectParameter("v_Commments", typeof(string));
    
            var c_StatusCodeParameter = c_StatusCode != null ?
                new ObjectParameter("c_StatusCode", c_StatusCode) :
                new ObjectParameter("c_StatusCode", typeof(string));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDiagnosisCodes_Insert", i_AppUserIdParameter, i_UserIdParameter, i_DiagnosisIDParameter, d_DateDiagnosedParameter, v_CommmentsParameter, c_StatusCodeParameter, o_UserDiagnosisID, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserDiagnosisCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID, Nullable<int> i_UserDiagnosisCodeID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var i_UserDiagnosisCodeIDParameter = i_UserDiagnosisCodeID.HasValue ?
                new ObjectParameter("i_UserDiagnosisCodeID", i_UserDiagnosisCodeID) :
                new ObjectParameter("i_UserDiagnosisCodeID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDiagnosisCodes_Select", i_AppUserIdParameter, i_PatientUserIDParameter, i_UserDiagnosisCodeIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserDisease_Delete(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_DiseaseID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDisease_Delete", i_AppUserIdParameter, i_UserIDParameter, i_DiseaseIDParameter);
        }
    
        public virtual int usp_UserDisease_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_DiseaseID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDisease_Select", i_AppUserIdParameter, i_UserIDParameter, i_DiseaseIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserDisease_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_DiseaseID, string vc_Comments, Nullable<System.DateTime> dt_DiagnosedDate, string vc_StatusCode, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var dt_DiagnosedDateParameter = dt_DiagnosedDate.HasValue ?
                new ObjectParameter("dt_DiagnosedDate", dt_DiagnosedDate) :
                new ObjectParameter("dt_DiagnosedDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDisease_Update", i_AppUserIdParameter, i_UserIDParameter, i_DiseaseIDParameter, vc_CommentsParameter, dt_DiagnosedDateParameter, vc_StatusCodeParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserDocument_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_DocumentCategoryId, string vc_Name, byte[] vb_Body, Nullable<int> i_FileSizeinBytes, Nullable<int> i_DocumentTypeId, string vc_StatusCode, string vc_MimeType, ObjectParameter o_UserDocumentId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_DocumentCategoryIdParameter = i_DocumentCategoryId.HasValue ?
                new ObjectParameter("i_DocumentCategoryId", i_DocumentCategoryId) :
                new ObjectParameter("i_DocumentCategoryId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vb_BodyParameter = vb_Body != null ?
                new ObjectParameter("vb_Body", vb_Body) :
                new ObjectParameter("vb_Body", typeof(byte[]));
    
            var i_FileSizeinBytesParameter = i_FileSizeinBytes.HasValue ?
                new ObjectParameter("i_FileSizeinBytes", i_FileSizeinBytes) :
                new ObjectParameter("i_FileSizeinBytes", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_MimeTypeParameter = vc_MimeType != null ?
                new ObjectParameter("vc_MimeType", vc_MimeType) :
                new ObjectParameter("vc_MimeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDocument_Insert", i_AppUserIdParameter, i_UserIDParameter, i_DocumentCategoryIdParameter, vc_NameParameter, vb_BodyParameter, i_FileSizeinBytesParameter, i_DocumentTypeIdParameter, vc_StatusCodeParameter, vc_MimeTypeParameter, o_UserDocumentId);
        }
    
        public virtual ObjectResult<usp_UserDocument_Select_Result> usp_UserDocument_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_UserDocumentId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_UserDocumentIdParameter = i_UserDocumentId.HasValue ?
                new ObjectParameter("i_UserDocumentId", i_UserDocumentId) :
                new ObjectParameter("i_UserDocumentId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserDocument_Select_Result>("usp_UserDocument_Select", i_AppUserIdParameter, i_UserIdParameter, i_UserDocumentIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserDocument_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_UserDocumentId, Nullable<int> i_DocumentCategoryId, string vc_Name, byte[] vb_Body, Nullable<int> i_FileSizeinBytes, Nullable<int> i_DocumentTypeId, string vc_StatusCode, string vc_MimeType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_UserDocumentIdParameter = i_UserDocumentId.HasValue ?
                new ObjectParameter("i_UserDocumentId", i_UserDocumentId) :
                new ObjectParameter("i_UserDocumentId", typeof(int));
    
            var i_DocumentCategoryIdParameter = i_DocumentCategoryId.HasValue ?
                new ObjectParameter("i_DocumentCategoryId", i_DocumentCategoryId) :
                new ObjectParameter("i_DocumentCategoryId", typeof(int));
    
            var vc_NameParameter = vc_Name != null ?
                new ObjectParameter("vc_Name", vc_Name) :
                new ObjectParameter("vc_Name", typeof(string));
    
            var vb_BodyParameter = vb_Body != null ?
                new ObjectParameter("vb_Body", vb_Body) :
                new ObjectParameter("vb_Body", typeof(byte[]));
    
            var i_FileSizeinBytesParameter = i_FileSizeinBytes.HasValue ?
                new ObjectParameter("i_FileSizeinBytes", i_FileSizeinBytes) :
                new ObjectParameter("i_FileSizeinBytes", typeof(int));
    
            var i_DocumentTypeIdParameter = i_DocumentTypeId.HasValue ?
                new ObjectParameter("i_DocumentTypeId", i_DocumentTypeId) :
                new ObjectParameter("i_DocumentTypeId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_MimeTypeParameter = vc_MimeType != null ?
                new ObjectParameter("vc_MimeType", vc_MimeType) :
                new ObjectParameter("vc_MimeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDocument_Update", i_AppUserIdParameter, i_UserIdParameter, i_UserDocumentIdParameter, i_DocumentCategoryIdParameter, vc_NameParameter, vb_BodyParameter, i_FileSizeinBytesParameter, i_DocumentTypeIdParameter, vc_StatusCodeParameter, vc_MimeTypeParameter);
        }
    
        public virtual int usp_UserDrugCodes_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_DrugCodeId, Nullable<int> i_NumberOfDays, Nullable<short> i_TimesPerDay, string vc_DeliveryMethod, Nullable<int> i_Refills, Nullable<System.DateTime> dt_DiscontinuedDate, string vc_StatusCode, Nullable<bool> vc_IsTitration, Nullable<System.DateTime> dt_StartDate, Nullable<System.DateTime> dt_EndDate, string vc_Comments, Nullable<int> i_UserProviderID, Nullable<int> i_FrequencyOfTitrationDays, ObjectParameter o_UserDrugId, Nullable<System.DateTime> dt_DatePrescribed, Nullable<System.DateTime> dt_DateFilled, Nullable<int> i_CareTeamUserID, Nullable<int> i_DiseaseId, Nullable<bool> b_IsAdhoc, Nullable<int> i_DataSourceId, Nullable<int> i_ManagedPopulationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_DrugCodeIdParameter = i_DrugCodeId.HasValue ?
                new ObjectParameter("i_DrugCodeId", i_DrugCodeId) :
                new ObjectParameter("i_DrugCodeId", typeof(int));
    
            var i_NumberOfDaysParameter = i_NumberOfDays.HasValue ?
                new ObjectParameter("i_NumberOfDays", i_NumberOfDays) :
                new ObjectParameter("i_NumberOfDays", typeof(int));
    
            var i_TimesPerDayParameter = i_TimesPerDay.HasValue ?
                new ObjectParameter("i_TimesPerDay", i_TimesPerDay) :
                new ObjectParameter("i_TimesPerDay", typeof(short));
    
            var vc_DeliveryMethodParameter = vc_DeliveryMethod != null ?
                new ObjectParameter("vc_DeliveryMethod", vc_DeliveryMethod) :
                new ObjectParameter("vc_DeliveryMethod", typeof(string));
    
            var i_RefillsParameter = i_Refills.HasValue ?
                new ObjectParameter("i_Refills", i_Refills) :
                new ObjectParameter("i_Refills", typeof(int));
    
            var dt_DiscontinuedDateParameter = dt_DiscontinuedDate.HasValue ?
                new ObjectParameter("dt_DiscontinuedDate", dt_DiscontinuedDate) :
                new ObjectParameter("dt_DiscontinuedDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_IsTitrationParameter = vc_IsTitration.HasValue ?
                new ObjectParameter("vc_IsTitration", vc_IsTitration) :
                new ObjectParameter("vc_IsTitration", typeof(bool));
    
            var dt_StartDateParameter = dt_StartDate.HasValue ?
                new ObjectParameter("dt_StartDate", dt_StartDate) :
                new ObjectParameter("dt_StartDate", typeof(System.DateTime));
    
            var dt_EndDateParameter = dt_EndDate.HasValue ?
                new ObjectParameter("dt_EndDate", dt_EndDate) :
                new ObjectParameter("dt_EndDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_UserProviderIDParameter = i_UserProviderID.HasValue ?
                new ObjectParameter("i_UserProviderID", i_UserProviderID) :
                new ObjectParameter("i_UserProviderID", typeof(int));
    
            var i_FrequencyOfTitrationDaysParameter = i_FrequencyOfTitrationDays.HasValue ?
                new ObjectParameter("i_FrequencyOfTitrationDays", i_FrequencyOfTitrationDays) :
                new ObjectParameter("i_FrequencyOfTitrationDays", typeof(int));
    
            var dt_DatePrescribedParameter = dt_DatePrescribed.HasValue ?
                new ObjectParameter("dt_DatePrescribed", dt_DatePrescribed) :
                new ObjectParameter("dt_DatePrescribed", typeof(System.DateTime));
    
            var dt_DateFilledParameter = dt_DateFilled.HasValue ?
                new ObjectParameter("dt_DateFilled", dt_DateFilled) :
                new ObjectParameter("dt_DateFilled", typeof(System.DateTime));
    
            var i_CareTeamUserIDParameter = i_CareTeamUserID.HasValue ?
                new ObjectParameter("i_CareTeamUserID", i_CareTeamUserID) :
                new ObjectParameter("i_CareTeamUserID", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDrugCodes_Insert", i_AppUserIdParameter, i_UserIdParameter, i_DrugCodeIdParameter, i_NumberOfDaysParameter, i_TimesPerDayParameter, vc_DeliveryMethodParameter, i_RefillsParameter, dt_DiscontinuedDateParameter, vc_StatusCodeParameter, vc_IsTitrationParameter, dt_StartDateParameter, dt_EndDateParameter, vc_CommentsParameter, i_UserProviderIDParameter, i_FrequencyOfTitrationDaysParameter, o_UserDrugId, dt_DatePrescribedParameter, dt_DateFilledParameter, i_CareTeamUserIDParameter, i_DiseaseIdParameter, b_IsAdhocParameter, i_DataSourceIdParameter, i_ManagedPopulationIDParameter);
        }
    
        public virtual int usp_UserDrugCodes_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_DrugCodeId, Nullable<int> i_NumberOfDays, Nullable<short> i_TimesPerDay, string vc_DeliveryMethod, Nullable<int> i_Refills, Nullable<System.DateTime> dt_DiscontinuedDate, string vc_StatusCode, Nullable<bool> vc_IsTitration, Nullable<System.DateTime> dt_StartDate, Nullable<System.DateTime> dt_EndDate, string vc_Comments, Nullable<int> i_UserProviderID, Nullable<int> i_FrequencyOfTitrationDays, Nullable<int> i_UserDrugId, Nullable<System.DateTime> dt_DatePrescribed, Nullable<System.DateTime> dt_DateFilled, Nullable<int> i_CareTeamUserID, Nullable<int> i_DiseaseId, Nullable<int> i_DataSourceId, Nullable<int> i_ManagedPopulationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_DrugCodeIdParameter = i_DrugCodeId.HasValue ?
                new ObjectParameter("i_DrugCodeId", i_DrugCodeId) :
                new ObjectParameter("i_DrugCodeId", typeof(int));
    
            var i_NumberOfDaysParameter = i_NumberOfDays.HasValue ?
                new ObjectParameter("i_NumberOfDays", i_NumberOfDays) :
                new ObjectParameter("i_NumberOfDays", typeof(int));
    
            var i_TimesPerDayParameter = i_TimesPerDay.HasValue ?
                new ObjectParameter("i_TimesPerDay", i_TimesPerDay) :
                new ObjectParameter("i_TimesPerDay", typeof(short));
    
            var vc_DeliveryMethodParameter = vc_DeliveryMethod != null ?
                new ObjectParameter("vc_DeliveryMethod", vc_DeliveryMethod) :
                new ObjectParameter("vc_DeliveryMethod", typeof(string));
    
            var i_RefillsParameter = i_Refills.HasValue ?
                new ObjectParameter("i_Refills", i_Refills) :
                new ObjectParameter("i_Refills", typeof(int));
    
            var dt_DiscontinuedDateParameter = dt_DiscontinuedDate.HasValue ?
                new ObjectParameter("dt_DiscontinuedDate", dt_DiscontinuedDate) :
                new ObjectParameter("dt_DiscontinuedDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var vc_IsTitrationParameter = vc_IsTitration.HasValue ?
                new ObjectParameter("vc_IsTitration", vc_IsTitration) :
                new ObjectParameter("vc_IsTitration", typeof(bool));
    
            var dt_StartDateParameter = dt_StartDate.HasValue ?
                new ObjectParameter("dt_StartDate", dt_StartDate) :
                new ObjectParameter("dt_StartDate", typeof(System.DateTime));
    
            var dt_EndDateParameter = dt_EndDate.HasValue ?
                new ObjectParameter("dt_EndDate", dt_EndDate) :
                new ObjectParameter("dt_EndDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_UserProviderIDParameter = i_UserProviderID.HasValue ?
                new ObjectParameter("i_UserProviderID", i_UserProviderID) :
                new ObjectParameter("i_UserProviderID", typeof(int));
    
            var i_FrequencyOfTitrationDaysParameter = i_FrequencyOfTitrationDays.HasValue ?
                new ObjectParameter("i_FrequencyOfTitrationDays", i_FrequencyOfTitrationDays) :
                new ObjectParameter("i_FrequencyOfTitrationDays", typeof(int));
    
            var i_UserDrugIdParameter = i_UserDrugId.HasValue ?
                new ObjectParameter("i_UserDrugId", i_UserDrugId) :
                new ObjectParameter("i_UserDrugId", typeof(int));
    
            var dt_DatePrescribedParameter = dt_DatePrescribed.HasValue ?
                new ObjectParameter("dt_DatePrescribed", dt_DatePrescribed) :
                new ObjectParameter("dt_DatePrescribed", typeof(System.DateTime));
    
            var dt_DateFilledParameter = dt_DateFilled.HasValue ?
                new ObjectParameter("dt_DateFilled", dt_DateFilled) :
                new ObjectParameter("dt_DateFilled", typeof(System.DateTime));
    
            var i_CareTeamUserIDParameter = i_CareTeamUserID.HasValue ?
                new ObjectParameter("i_CareTeamUserID", i_CareTeamUserID) :
                new ObjectParameter("i_CareTeamUserID", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserDrugCodes_Update", i_AppUserIdParameter, i_UserIdParameter, i_DrugCodeIdParameter, i_NumberOfDaysParameter, i_TimesPerDayParameter, vc_DeliveryMethodParameter, i_RefillsParameter, dt_DiscontinuedDateParameter, vc_StatusCodeParameter, vc_IsTitrationParameter, dt_StartDateParameter, dt_EndDateParameter, vc_CommentsParameter, i_UserProviderIDParameter, i_FrequencyOfTitrationDaysParameter, i_UserDrugIdParameter, dt_DatePrescribedParameter, dt_DateFilledParameter, i_CareTeamUserIDParameter, i_DiseaseIdParameter, i_DataSourceIdParameter, i_ManagedPopulationIDParameter);
        }
    
        public virtual int usp_UserEncounters_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_EncounterDate, Nullable<bool> i_IsInpatient, string vc_Comments, Nullable<int> i_StayDays, Nullable<int> i_EncounterTypeId, string vc_StatusCode, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_ScheduledDate, Nullable<int> i_UserProviderID, Nullable<int> i_CareTeamUserID, ObjectParameter o_UserEncounterID, Nullable<int> i_DiseaseID, Nullable<bool> b_IsEncounterwithPCP, Nullable<bool> b_IsPreventive, Nullable<bool> b_IsAdhoc, Nullable<int> i_DataSourceId, Nullable<int> i_ProgramID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_EncounterDateParameter = dt_EncounterDate.HasValue ?
                new ObjectParameter("dt_EncounterDate", dt_EncounterDate) :
                new ObjectParameter("dt_EncounterDate", typeof(System.DateTime));
    
            var i_IsInpatientParameter = i_IsInpatient.HasValue ?
                new ObjectParameter("i_IsInpatient", i_IsInpatient) :
                new ObjectParameter("i_IsInpatient", typeof(bool));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_StayDaysParameter = i_StayDays.HasValue ?
                new ObjectParameter("i_StayDays", i_StayDays) :
                new ObjectParameter("i_StayDays", typeof(int));
    
            var i_EncounterTypeIdParameter = i_EncounterTypeId.HasValue ?
                new ObjectParameter("i_EncounterTypeId", i_EncounterTypeId) :
                new ObjectParameter("i_EncounterTypeId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_ScheduledDateParameter = dt_ScheduledDate.HasValue ?
                new ObjectParameter("dt_ScheduledDate", dt_ScheduledDate) :
                new ObjectParameter("dt_ScheduledDate", typeof(System.DateTime));
    
            var i_UserProviderIDParameter = i_UserProviderID.HasValue ?
                new ObjectParameter("i_UserProviderID", i_UserProviderID) :
                new ObjectParameter("i_UserProviderID", typeof(int));
    
            var i_CareTeamUserIDParameter = i_CareTeamUserID.HasValue ?
                new ObjectParameter("i_CareTeamUserID", i_CareTeamUserID) :
                new ObjectParameter("i_CareTeamUserID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsEncounterwithPCPParameter = b_IsEncounterwithPCP.HasValue ?
                new ObjectParameter("b_IsEncounterwithPCP", b_IsEncounterwithPCP) :
                new ObjectParameter("b_IsEncounterwithPCP", typeof(bool));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserEncounters_Insert", i_AppUserIdParameter, i_UserIdParameter, dt_EncounterDateParameter, i_IsInpatientParameter, vc_CommentsParameter, i_StayDaysParameter, i_EncounterTypeIdParameter, vc_StatusCodeParameter, dt_DateDueParameter, dt_ScheduledDateParameter, i_UserProviderIDParameter, i_CareTeamUserIDParameter, o_UserEncounterID, i_DiseaseIDParameter, b_IsEncounterwithPCPParameter, b_IsPreventiveParameter, b_IsAdhocParameter, i_DataSourceIdParameter, i_ProgramIDParameter);
        }
    
        public virtual int usp_UserEncounters_PatientDashBoard_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_EncounterTypeId, string vc_StatusCode, Nullable<System.DateTime> dt_DateDue, Nullable<int> i_UserProviderID, ObjectParameter o_UserEncounterID, Nullable<int> i_OrganizationHospitalId, Nullable<int> i_SpecialityID, Nullable<int> i_ProgramID, Nullable<int> i_AssignedCareProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_EncounterTypeIdParameter = i_EncounterTypeId.HasValue ?
                new ObjectParameter("i_EncounterTypeId", i_EncounterTypeId) :
                new ObjectParameter("i_EncounterTypeId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var i_UserProviderIDParameter = i_UserProviderID.HasValue ?
                new ObjectParameter("i_UserProviderID", i_UserProviderID) :
                new ObjectParameter("i_UserProviderID", typeof(int));
    
            var i_OrganizationHospitalIdParameter = i_OrganizationHospitalId.HasValue ?
                new ObjectParameter("i_OrganizationHospitalId", i_OrganizationHospitalId) :
                new ObjectParameter("i_OrganizationHospitalId", typeof(int));
    
            var i_SpecialityIDParameter = i_SpecialityID.HasValue ?
                new ObjectParameter("i_SpecialityID", i_SpecialityID) :
                new ObjectParameter("i_SpecialityID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var i_AssignedCareProviderIDParameter = i_AssignedCareProviderID.HasValue ?
                new ObjectParameter("i_AssignedCareProviderID", i_AssignedCareProviderID) :
                new ObjectParameter("i_AssignedCareProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserEncounters_PatientDashBoard_Insert", i_AppUserIdParameter, i_UserIdParameter, i_EncounterTypeIdParameter, vc_StatusCodeParameter, dt_DateDueParameter, i_UserProviderIDParameter, o_UserEncounterID, i_OrganizationHospitalIdParameter, i_SpecialityIDParameter, i_ProgramIDParameter, i_AssignedCareProviderIDParameter);
        }
    
        public virtual int usp_UserEncounters_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserEncounterID, Nullable<int> i_UserId, string v_StatusCode, Nullable<int> i_UserProviderId, Nullable<bool> b_ShowLastOneYearData)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserEncounterIDParameter = i_UserEncounterID.HasValue ?
                new ObjectParameter("i_UserEncounterID", i_UserEncounterID) :
                new ObjectParameter("i_UserEncounterID", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserProviderIdParameter = i_UserProviderId.HasValue ?
                new ObjectParameter("i_UserProviderId", i_UserProviderId) :
                new ObjectParameter("i_UserProviderId", typeof(int));
    
            var b_ShowLastOneYearDataParameter = b_ShowLastOneYearData.HasValue ?
                new ObjectParameter("b_ShowLastOneYearData", b_ShowLastOneYearData) :
                new ObjectParameter("b_ShowLastOneYearData", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserEncounters_Select", i_AppUserIdParameter, i_UserEncounterIDParameter, i_UserIdParameter, v_StatusCodeParameter, i_UserProviderIdParameter, b_ShowLastOneYearDataParameter);
        }
    
        public virtual int usp_UserEncounters_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_EncounterDate, Nullable<bool> i_IsInpatient, string vc_Comments, Nullable<int> i_StayDays, Nullable<int> i_EncounterTypeId, string vc_StatusCode, Nullable<int> i_UserEncounterID, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_ScheduledDate, Nullable<int> i_UserProviderID, Nullable<int> i_CareTeamUserID, Nullable<int> i_DiseaseID, Nullable<bool> b_IsEncounterwithPCP, Nullable<bool> b_IsPreventive, Nullable<int> i_DataSourceId, Nullable<int> i_ManagedPopulationID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_EncounterDateParameter = dt_EncounterDate.HasValue ?
                new ObjectParameter("dt_EncounterDate", dt_EncounterDate) :
                new ObjectParameter("dt_EncounterDate", typeof(System.DateTime));
    
            var i_IsInpatientParameter = i_IsInpatient.HasValue ?
                new ObjectParameter("i_IsInpatient", i_IsInpatient) :
                new ObjectParameter("i_IsInpatient", typeof(bool));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_StayDaysParameter = i_StayDays.HasValue ?
                new ObjectParameter("i_StayDays", i_StayDays) :
                new ObjectParameter("i_StayDays", typeof(int));
    
            var i_EncounterTypeIdParameter = i_EncounterTypeId.HasValue ?
                new ObjectParameter("i_EncounterTypeId", i_EncounterTypeId) :
                new ObjectParameter("i_EncounterTypeId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_UserEncounterIDParameter = i_UserEncounterID.HasValue ?
                new ObjectParameter("i_UserEncounterID", i_UserEncounterID) :
                new ObjectParameter("i_UserEncounterID", typeof(int));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_ScheduledDateParameter = dt_ScheduledDate.HasValue ?
                new ObjectParameter("dt_ScheduledDate", dt_ScheduledDate) :
                new ObjectParameter("dt_ScheduledDate", typeof(System.DateTime));
    
            var i_UserProviderIDParameter = i_UserProviderID.HasValue ?
                new ObjectParameter("i_UserProviderID", i_UserProviderID) :
                new ObjectParameter("i_UserProviderID", typeof(int));
    
            var i_CareTeamUserIDParameter = i_CareTeamUserID.HasValue ?
                new ObjectParameter("i_CareTeamUserID", i_CareTeamUserID) :
                new ObjectParameter("i_CareTeamUserID", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsEncounterwithPCPParameter = b_IsEncounterwithPCP.HasValue ?
                new ObjectParameter("b_IsEncounterwithPCP", b_IsEncounterwithPCP) :
                new ObjectParameter("b_IsEncounterwithPCP", typeof(bool));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserEncounters_Update", i_AppUserIdParameter, i_UserIdParameter, dt_EncounterDateParameter, i_IsInpatientParameter, vc_CommentsParameter, i_StayDaysParameter, i_EncounterTypeIdParameter, vc_StatusCodeParameter, i_UserEncounterIDParameter, dt_DateDueParameter, dt_ScheduledDateParameter, i_UserProviderIDParameter, i_CareTeamUserIDParameter, i_DiseaseIDParameter, b_IsEncounterwithPCPParameter, b_IsPreventiveParameter, i_DataSourceIdParameter, i_ManagedPopulationIDParameter);
        }
    
        public virtual int usp_UserFamilyMedicalHistory_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, Nullable<int> i_DiseaseId, Nullable<int> i_RelationId, string v_Comments, string v_StatusCode, Nullable<int> i_UserFamilyMedicalHistoryID, ObjectParameter o_UserFamilyMedicalHistoryID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var i_RelationIdParameter = i_RelationId.HasValue ?
                new ObjectParameter("i_RelationId", i_RelationId) :
                new ObjectParameter("i_RelationId", typeof(int));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserFamilyMedicalHistoryIDParameter = i_UserFamilyMedicalHistoryID.HasValue ?
                new ObjectParameter("i_UserFamilyMedicalHistoryID", i_UserFamilyMedicalHistoryID) :
                new ObjectParameter("i_UserFamilyMedicalHistoryID", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserFamilyMedicalHistory_InsertUpdate", i_AppUserIdParameter, i_UserIdParameter, d_StartDateParameter, d_EndDateParameter, i_DiseaseIdParameter, i_RelationIdParameter, v_CommentsParameter, v_StatusCodeParameter, i_UserFamilyMedicalHistoryIDParameter, o_UserFamilyMedicalHistoryID, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserFamilyMedicalHistory_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, string v_StatusCode, Nullable<int> i_UserFamilyMedicalHistoryID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserFamilyMedicalHistoryIDParameter = i_UserFamilyMedicalHistoryID.HasValue ?
                new ObjectParameter("i_UserFamilyMedicalHistoryID", i_UserFamilyMedicalHistoryID) :
                new ObjectParameter("i_UserFamilyMedicalHistoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserFamilyMedicalHistory_Select", i_AppUserIdParameter, i_UserIDParameter, v_StatusCodeParameter, i_UserFamilyMedicalHistoryIDParameter);
        }
    
        public virtual ObjectResult<usp_UserHealthindicatorsBarriers_Select_Result> usp_UserHealthindicatorsBarriers_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserHealthindicatorsBarriers_Select_Result>("usp_UserHealthindicatorsBarriers_Select", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual int usp_UserHealthStatusScore_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string vc_Score, string vc_Comments, Nullable<System.DateTime> dt_DateDetermined, Nullable<int> i_HealthStatusScoreId, Nullable<System.DateTime> dt_DateDue, string vc_StatusCode, ObjectParameter o_UserHealthStatusId, Nullable<bool> b_IsAdhoc)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_ScoreParameter = vc_Score != null ?
                new ObjectParameter("vc_Score", vc_Score) :
                new ObjectParameter("vc_Score", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var dt_DateDeterminedParameter = dt_DateDetermined.HasValue ?
                new ObjectParameter("dt_DateDetermined", dt_DateDetermined) :
                new ObjectParameter("dt_DateDetermined", typeof(System.DateTime));
    
            var i_HealthStatusScoreIdParameter = i_HealthStatusScoreId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreId", i_HealthStatusScoreId) :
                new ObjectParameter("i_HealthStatusScoreId", typeof(int));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserHealthStatusScore_Insert", i_AppUserIdParameter, i_UserIdParameter, vc_ScoreParameter, vc_CommentsParameter, dt_DateDeterminedParameter, i_HealthStatusScoreIdParameter, dt_DateDueParameter, vc_StatusCodeParameter, o_UserHealthStatusId, b_IsAdhocParameter);
        }
    
        public virtual ObjectResult<usp_UserHealthStatusScore_PredictiveModeling_Result> usp_UserHealthStatusScore_PredictiveModeling(Nullable<int> i_AppUserId, Nullable<int> i_HealthStatusScoreId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_HealthStatusScoreIdParameter = i_HealthStatusScoreId.HasValue ?
                new ObjectParameter("i_HealthStatusScoreId", i_HealthStatusScoreId) :
                new ObjectParameter("i_HealthStatusScoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserHealthStatusScore_PredictiveModeling_Result>("usp_UserHealthStatusScore_PredictiveModeling", i_AppUserIdParameter, i_HealthStatusScoreIdParameter);
        }
    
        public virtual ObjectResult<usp_UserHealthStatusScore_Select_Result> usp_UserHealthStatusScore_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserHealthStatusId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserHealthStatusIdParameter = i_UserHealthStatusId.HasValue ?
                new ObjectParameter("i_UserHealthStatusId", i_UserHealthStatusId) :
                new ObjectParameter("i_UserHealthStatusId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserHealthStatusScore_Select_Result>("usp_UserHealthStatusScore_Select", i_AppUserIdParameter, i_UserHealthStatusIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual ObjectResult<usp_UserIdByMemberNumber_Select_Result> usp_UserIdByMemberNumber_Select(Nullable<int> i_AppUserId, string v_MemberNumber)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_MemberNumberParameter = v_MemberNumber != null ?
                new ObjectParameter("v_MemberNumber", v_MemberNumber) :
                new ObjectParameter("v_MemberNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserIdByMemberNumber_Select_Result>("usp_UserIdByMemberNumber_Select", i_AppUserIdParameter, v_MemberNumberParameter);
        }
    
        public virtual int usp_UserImmunizations_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationID, Nullable<int> i_UserID, Nullable<System.DateTime> dt_ImmunizationDate, string vc_Comments, Nullable<bool> i_IsPatientDeclined, string vc_AdverseReactionComments, string vc_StatusCode, Nullable<System.DateTime> dt_DueDate, ObjectParameter o_UserImmunizationID, Nullable<bool> b_IsPreventive, Nullable<bool> b_IsAdhoc, Nullable<int> i_DataSourceID, Nullable<int> i_ManagedPopulationID, Nullable<int> i_AssignedCareProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIDParameter = i_ImmunizationID.HasValue ?
                new ObjectParameter("i_ImmunizationID", i_ImmunizationID) :
                new ObjectParameter("i_ImmunizationID", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var dt_ImmunizationDateParameter = dt_ImmunizationDate.HasValue ?
                new ObjectParameter("dt_ImmunizationDate", dt_ImmunizationDate) :
                new ObjectParameter("dt_ImmunizationDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_IsPatientDeclinedParameter = i_IsPatientDeclined.HasValue ?
                new ObjectParameter("i_IsPatientDeclined", i_IsPatientDeclined) :
                new ObjectParameter("i_IsPatientDeclined", typeof(bool));
    
            var vc_AdverseReactionCommentsParameter = vc_AdverseReactionComments != null ?
                new ObjectParameter("vc_AdverseReactionComments", vc_AdverseReactionComments) :
                new ObjectParameter("vc_AdverseReactionComments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_DataSourceIDParameter = i_DataSourceID.HasValue ?
                new ObjectParameter("i_DataSourceID", i_DataSourceID) :
                new ObjectParameter("i_DataSourceID", typeof(int));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var i_AssignedCareProviderIDParameter = i_AssignedCareProviderID.HasValue ?
                new ObjectParameter("i_AssignedCareProviderID", i_AssignedCareProviderID) :
                new ObjectParameter("i_AssignedCareProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserImmunizations_Insert", i_AppUserIdParameter, i_ImmunizationIDParameter, i_UserIDParameter, dt_ImmunizationDateParameter, vc_CommentsParameter, i_IsPatientDeclinedParameter, vc_AdverseReactionCommentsParameter, vc_StatusCodeParameter, dt_DueDateParameter, o_UserImmunizationID, b_IsPreventiveParameter, b_IsAdhocParameter, i_DataSourceIDParameter, i_ManagedPopulationIDParameter, i_AssignedCareProviderIDParameter);
        }
    
        public virtual ObjectResult<usp_UserImmunizations_Select_Result> usp_UserImmunizations_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_UserImmunizationID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_UserImmunizationIDParameter = i_UserImmunizationID.HasValue ?
                new ObjectParameter("i_UserImmunizationID", i_UserImmunizationID) :
                new ObjectParameter("i_UserImmunizationID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserImmunizations_Select_Result>("usp_UserImmunizations_Select", i_AppUserIdParameter, i_UserIDParameter, i_UserImmunizationIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserImmunizations_Update(Nullable<int> i_AppUserId, Nullable<int> i_ImmunizationID, Nullable<int> i_UserID, Nullable<System.DateTime> dt_ImmunizationDate, string vc_Comments, Nullable<bool> i_IsPatientDeclined, string vc_AdverseReactionComments, string vc_StatusCode, Nullable<System.DateTime> dt_DueDate, Nullable<int> i_UserImmunizationID, Nullable<bool> b_IsPreventive, Nullable<int> i_DataSourceID, Nullable<int> i_ManagedPopulationID, Nullable<int> i_AssignedCareProviderID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ImmunizationIDParameter = i_ImmunizationID.HasValue ?
                new ObjectParameter("i_ImmunizationID", i_ImmunizationID) :
                new ObjectParameter("i_ImmunizationID", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var dt_ImmunizationDateParameter = dt_ImmunizationDate.HasValue ?
                new ObjectParameter("dt_ImmunizationDate", dt_ImmunizationDate) :
                new ObjectParameter("dt_ImmunizationDate", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_IsPatientDeclinedParameter = i_IsPatientDeclined.HasValue ?
                new ObjectParameter("i_IsPatientDeclined", i_IsPatientDeclined) :
                new ObjectParameter("i_IsPatientDeclined", typeof(bool));
    
            var vc_AdverseReactionCommentsParameter = vc_AdverseReactionComments != null ?
                new ObjectParameter("vc_AdverseReactionComments", vc_AdverseReactionComments) :
                new ObjectParameter("vc_AdverseReactionComments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var i_UserImmunizationIDParameter = i_UserImmunizationID.HasValue ?
                new ObjectParameter("i_UserImmunizationID", i_UserImmunizationID) :
                new ObjectParameter("i_UserImmunizationID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_DataSourceIDParameter = i_DataSourceID.HasValue ?
                new ObjectParameter("i_DataSourceID", i_DataSourceID) :
                new ObjectParameter("i_DataSourceID", typeof(int));
    
            var i_ManagedPopulationIDParameter = i_ManagedPopulationID.HasValue ?
                new ObjectParameter("i_ManagedPopulationID", i_ManagedPopulationID) :
                new ObjectParameter("i_ManagedPopulationID", typeof(int));
    
            var i_AssignedCareProviderIDParameter = i_AssignedCareProviderID.HasValue ?
                new ObjectParameter("i_AssignedCareProviderID", i_AssignedCareProviderID) :
                new ObjectParameter("i_AssignedCareProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserImmunizations_Update", i_AppUserIdParameter, i_ImmunizationIDParameter, i_UserIDParameter, dt_ImmunizationDateParameter, vc_CommentsParameter, i_IsPatientDeclinedParameter, vc_AdverseReactionCommentsParameter, vc_StatusCodeParameter, dt_DueDateParameter, i_UserImmunizationIDParameter, b_IsPreventiveParameter, i_DataSourceIDParameter, i_ManagedPopulationIDParameter, i_AssignedCareProviderIDParameter);
        }
    
        public virtual int usp_UserInsurance_Insert(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupPlanId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<bool> i_IsPrimary, Nullable<int> i_PCPUserId, Nullable<int> i_PCPExternalProviderId, string vc_PCPSystem, string vc_GroupNumber, string vc_PolicyNumber, string vc_SuperGroupCategory, Nullable<bool> i_PharmacyBenefit, Nullable<bool> i_MedicareSupplement, ObjectParameter o_UserInsuranceId, Nullable<System.DateTime> dt_StartDate, Nullable<System.DateTime> dt_EndDate, Nullable<int> i_EmployerGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupPlanIdParameter = i_InsuranceGroupPlanId.HasValue ?
                new ObjectParameter("i_InsuranceGroupPlanId", i_InsuranceGroupPlanId) :
                new ObjectParameter("i_InsuranceGroupPlanId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_IsPrimaryParameter = i_IsPrimary.HasValue ?
                new ObjectParameter("i_IsPrimary", i_IsPrimary) :
                new ObjectParameter("i_IsPrimary", typeof(bool));
    
            var i_PCPUserIdParameter = i_PCPUserId.HasValue ?
                new ObjectParameter("i_PCPUserId", i_PCPUserId) :
                new ObjectParameter("i_PCPUserId", typeof(int));
    
            var i_PCPExternalProviderIdParameter = i_PCPExternalProviderId.HasValue ?
                new ObjectParameter("i_PCPExternalProviderId", i_PCPExternalProviderId) :
                new ObjectParameter("i_PCPExternalProviderId", typeof(int));
    
            var vc_PCPSystemParameter = vc_PCPSystem != null ?
                new ObjectParameter("vc_PCPSystem", vc_PCPSystem) :
                new ObjectParameter("vc_PCPSystem", typeof(string));
    
            var vc_GroupNumberParameter = vc_GroupNumber != null ?
                new ObjectParameter("vc_GroupNumber", vc_GroupNumber) :
                new ObjectParameter("vc_GroupNumber", typeof(string));
    
            var vc_PolicyNumberParameter = vc_PolicyNumber != null ?
                new ObjectParameter("vc_PolicyNumber", vc_PolicyNumber) :
                new ObjectParameter("vc_PolicyNumber", typeof(string));
    
            var vc_SuperGroupCategoryParameter = vc_SuperGroupCategory != null ?
                new ObjectParameter("vc_SuperGroupCategory", vc_SuperGroupCategory) :
                new ObjectParameter("vc_SuperGroupCategory", typeof(string));
    
            var i_PharmacyBenefitParameter = i_PharmacyBenefit.HasValue ?
                new ObjectParameter("i_PharmacyBenefit", i_PharmacyBenefit) :
                new ObjectParameter("i_PharmacyBenefit", typeof(bool));
    
            var i_MedicareSupplementParameter = i_MedicareSupplement.HasValue ?
                new ObjectParameter("i_MedicareSupplement", i_MedicareSupplement) :
                new ObjectParameter("i_MedicareSupplement", typeof(bool));
    
            var dt_StartDateParameter = dt_StartDate.HasValue ?
                new ObjectParameter("dt_StartDate", dt_StartDate) :
                new ObjectParameter("dt_StartDate", typeof(System.DateTime));
    
            var dt_EndDateParameter = dt_EndDate.HasValue ?
                new ObjectParameter("dt_EndDate", dt_EndDate) :
                new ObjectParameter("dt_EndDate", typeof(System.DateTime));
    
            var i_EmployerGroupIDParameter = i_EmployerGroupID.HasValue ?
                new ObjectParameter("i_EmployerGroupID", i_EmployerGroupID) :
                new ObjectParameter("i_EmployerGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserInsurance_Insert", i_AppUserIdParameter, i_InsuranceGroupPlanIdParameter, i_UserIdParameter, vc_StatusCodeParameter, i_IsPrimaryParameter, i_PCPUserIdParameter, i_PCPExternalProviderIdParameter, vc_PCPSystemParameter, vc_GroupNumberParameter, vc_PolicyNumberParameter, vc_SuperGroupCategoryParameter, i_PharmacyBenefitParameter, i_MedicareSupplementParameter, o_UserInsuranceId, dt_StartDateParameter, dt_EndDateParameter, i_EmployerGroupIDParameter);
        }
    
        public virtual ObjectResult<usp_UserInsurance_Patient_Result> usp_UserInsurance_Patient(Nullable<int> i_AppUserId, Nullable<int> v_InsuranceGroupID, Nullable<int> i_InsuranceGroupPlanId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_InsuranceGroupIDParameter = v_InsuranceGroupID.HasValue ?
                new ObjectParameter("v_InsuranceGroupID", v_InsuranceGroupID) :
                new ObjectParameter("v_InsuranceGroupID", typeof(int));
    
            var i_InsuranceGroupPlanIdParameter = i_InsuranceGroupPlanId.HasValue ?
                new ObjectParameter("i_InsuranceGroupPlanId", i_InsuranceGroupPlanId) :
                new ObjectParameter("i_InsuranceGroupPlanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserInsurance_Patient_Result>("usp_UserInsurance_Patient", i_AppUserIdParameter, v_InsuranceGroupIDParameter, i_InsuranceGroupPlanIdParameter);
        }
    
        public virtual ObjectResult<usp_UserInsurance_Select_Result> usp_UserInsurance_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserInsurance_Select_Result>("usp_UserInsurance_Select", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserInsurance_Update(Nullable<int> i_AppUserId, Nullable<int> i_InsuranceGroupPlanId, Nullable<int> i_UserId, string vc_StatusCode, Nullable<bool> i_IsPrimary, Nullable<int> i_PCPUserId, Nullable<int> i_PCPExternalProviderId, string vc_PCPSystem, string vc_GroupNumber, string vc_PolicyNumber, string vc_SuperGroupCategory, Nullable<bool> i_PharmacyBenefit, Nullable<bool> i_MedicareSupplement, Nullable<int> i_UserInsuranceId, Nullable<System.DateTime> dt_StartDate, Nullable<System.DateTime> dt_EndDate, Nullable<int> i_EmployerGroupID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_InsuranceGroupPlanIdParameter = i_InsuranceGroupPlanId.HasValue ?
                new ObjectParameter("i_InsuranceGroupPlanId", i_InsuranceGroupPlanId) :
                new ObjectParameter("i_InsuranceGroupPlanId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_IsPrimaryParameter = i_IsPrimary.HasValue ?
                new ObjectParameter("i_IsPrimary", i_IsPrimary) :
                new ObjectParameter("i_IsPrimary", typeof(bool));
    
            var i_PCPUserIdParameter = i_PCPUserId.HasValue ?
                new ObjectParameter("i_PCPUserId", i_PCPUserId) :
                new ObjectParameter("i_PCPUserId", typeof(int));
    
            var i_PCPExternalProviderIdParameter = i_PCPExternalProviderId.HasValue ?
                new ObjectParameter("i_PCPExternalProviderId", i_PCPExternalProviderId) :
                new ObjectParameter("i_PCPExternalProviderId", typeof(int));
    
            var vc_PCPSystemParameter = vc_PCPSystem != null ?
                new ObjectParameter("vc_PCPSystem", vc_PCPSystem) :
                new ObjectParameter("vc_PCPSystem", typeof(string));
    
            var vc_GroupNumberParameter = vc_GroupNumber != null ?
                new ObjectParameter("vc_GroupNumber", vc_GroupNumber) :
                new ObjectParameter("vc_GroupNumber", typeof(string));
    
            var vc_PolicyNumberParameter = vc_PolicyNumber != null ?
                new ObjectParameter("vc_PolicyNumber", vc_PolicyNumber) :
                new ObjectParameter("vc_PolicyNumber", typeof(string));
    
            var vc_SuperGroupCategoryParameter = vc_SuperGroupCategory != null ?
                new ObjectParameter("vc_SuperGroupCategory", vc_SuperGroupCategory) :
                new ObjectParameter("vc_SuperGroupCategory", typeof(string));
    
            var i_PharmacyBenefitParameter = i_PharmacyBenefit.HasValue ?
                new ObjectParameter("i_PharmacyBenefit", i_PharmacyBenefit) :
                new ObjectParameter("i_PharmacyBenefit", typeof(bool));
    
            var i_MedicareSupplementParameter = i_MedicareSupplement.HasValue ?
                new ObjectParameter("i_MedicareSupplement", i_MedicareSupplement) :
                new ObjectParameter("i_MedicareSupplement", typeof(bool));
    
            var i_UserInsuranceIdParameter = i_UserInsuranceId.HasValue ?
                new ObjectParameter("i_UserInsuranceId", i_UserInsuranceId) :
                new ObjectParameter("i_UserInsuranceId", typeof(int));
    
            var dt_StartDateParameter = dt_StartDate.HasValue ?
                new ObjectParameter("dt_StartDate", dt_StartDate) :
                new ObjectParameter("dt_StartDate", typeof(System.DateTime));
    
            var dt_EndDateParameter = dt_EndDate.HasValue ?
                new ObjectParameter("dt_EndDate", dt_EndDate) :
                new ObjectParameter("dt_EndDate", typeof(System.DateTime));
    
            var i_EmployerGroupIDParameter = i_EmployerGroupID.HasValue ?
                new ObjectParameter("i_EmployerGroupID", i_EmployerGroupID) :
                new ObjectParameter("i_EmployerGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserInsurance_Update", i_AppUserIdParameter, i_InsuranceGroupPlanIdParameter, i_UserIdParameter, vc_StatusCodeParameter, i_IsPrimaryParameter, i_PCPUserIdParameter, i_PCPExternalProviderIdParameter, vc_PCPSystemParameter, vc_GroupNumberParameter, vc_PolicyNumberParameter, vc_SuperGroupCategoryParameter, i_PharmacyBenefitParameter, i_MedicareSupplementParameter, i_UserInsuranceIdParameter, dt_StartDateParameter, dt_EndDateParameter, i_EmployerGroupIDParameter);
        }
    
        public virtual int usp_UserMeasure_Insert(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_MeasureId, Nullable<int> i_MeasureUOMId, string vc_MeasureValue, Nullable<int> i_DataSourceId, string vc_Comments, Nullable<bool> i_isPatientAdministered, Nullable<System.DateTime> dt_DateTaken, Nullable<System.DateTime> dt_DueDate, string vc_StatusCode, ObjectParameter o_UserMeasureId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            var vc_MeasureValueParameter = vc_MeasureValue != null ?
                new ObjectParameter("vc_MeasureValue", vc_MeasureValue) :
                new ObjectParameter("vc_MeasureValue", typeof(string));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_isPatientAdministeredParameter = i_isPatientAdministered.HasValue ?
                new ObjectParameter("i_isPatientAdministered", i_isPatientAdministered) :
                new ObjectParameter("i_isPatientAdministered", typeof(bool));
    
            var dt_DateTakenParameter = dt_DateTaken.HasValue ?
                new ObjectParameter("dt_DateTaken", dt_DateTaken) :
                new ObjectParameter("dt_DateTaken", typeof(System.DateTime));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMeasure_Insert", i_AppUserIdParameter, i_PatientUserIdParameter, i_MeasureIdParameter, i_MeasureUOMIdParameter, vc_MeasureValueParameter, i_DataSourceIdParameter, vc_CommentsParameter, i_isPatientAdministeredParameter, dt_DateTakenParameter, dt_DueDateParameter, vc_StatusCodeParameter, o_UserMeasureId);
        }
    
        public virtual ObjectResult<usp_UserMeasure_Select_Result> usp_UserMeasure_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserMeasureId, Nullable<int> i_PatientUserId, string v_StatusCode, Nullable<bool> b_ShowLastOneYearData)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserMeasureIdParameter = i_UserMeasureId.HasValue ?
                new ObjectParameter("i_UserMeasureId", i_UserMeasureId) :
                new ObjectParameter("i_UserMeasureId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var b_ShowLastOneYearDataParameter = b_ShowLastOneYearData.HasValue ?
                new ObjectParameter("b_ShowLastOneYearData", b_ShowLastOneYearData) :
                new ObjectParameter("b_ShowLastOneYearData", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMeasure_Select_Result>("usp_UserMeasure_Select", i_AppUserIdParameter, i_UserMeasureIdParameter, i_PatientUserIdParameter, v_StatusCodeParameter, b_ShowLastOneYearDataParameter);
        }
    
        public virtual ObjectResult<usp_UserMeasure_Select_ByUserId_MeasureId_Result> usp_UserMeasure_Select_ByUserId_MeasureId(Nullable<int> i_AppUserId, Nullable<int> i_MeasureId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMeasure_Select_ByUserId_MeasureId_Result>("usp_UserMeasure_Select_ByUserId_MeasureId", i_AppUserIdParameter, i_MeasureIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual int usp_UserMeasure_Update(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_MeasureId, Nullable<int> i_MeasureUOMId, string vc_MeasureValue, string vc_Comments, Nullable<bool> i_isPatientAdministered, Nullable<System.DateTime> dt_DateTaken, Nullable<System.DateTime> dt_DueDate, string vc_StatusCode, Nullable<int> i_UserMeasureId, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_MeasureIdParameter = i_MeasureId.HasValue ?
                new ObjectParameter("i_MeasureId", i_MeasureId) :
                new ObjectParameter("i_MeasureId", typeof(int));
    
            var i_MeasureUOMIdParameter = i_MeasureUOMId.HasValue ?
                new ObjectParameter("i_MeasureUOMId", i_MeasureUOMId) :
                new ObjectParameter("i_MeasureUOMId", typeof(int));
    
            var vc_MeasureValueParameter = vc_MeasureValue != null ?
                new ObjectParameter("vc_MeasureValue", vc_MeasureValue) :
                new ObjectParameter("vc_MeasureValue", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_isPatientAdministeredParameter = i_isPatientAdministered.HasValue ?
                new ObjectParameter("i_isPatientAdministered", i_isPatientAdministered) :
                new ObjectParameter("i_isPatientAdministered", typeof(bool));
    
            var dt_DateTakenParameter = dt_DateTaken.HasValue ?
                new ObjectParameter("dt_DateTaken", dt_DateTaken) :
                new ObjectParameter("dt_DateTaken", typeof(System.DateTime));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_UserMeasureIdParameter = i_UserMeasureId.HasValue ?
                new ObjectParameter("i_UserMeasureId", i_UserMeasureId) :
                new ObjectParameter("i_UserMeasureId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMeasure_Update", i_AppUserIdParameter, i_PatientUserIdParameter, i_MeasureIdParameter, i_MeasureUOMIdParameter, vc_MeasureValueParameter, vc_CommentsParameter, i_isPatientAdministeredParameter, dt_DateTakenParameter, dt_DueDateParameter, vc_StatusCodeParameter, i_UserMeasureIdParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserMeasureBMI_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMeasureBMI_Select", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual int usp_UserMedicalConditionHistory_Update(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_MedicalConditionID, string v_Comments, string v_Recommendations_consultation, string v_StatusCode, Nullable<int> i_UserMedicalConditionID, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_MedicalConditionIDParameter = i_MedicalConditionID.HasValue ?
                new ObjectParameter("i_MedicalConditionID", i_MedicalConditionID) :
                new ObjectParameter("i_MedicalConditionID", typeof(int));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_Recommendations_consultationParameter = v_Recommendations_consultation != null ?
                new ObjectParameter("v_Recommendations_consultation", v_Recommendations_consultation) :
                new ObjectParameter("v_Recommendations_consultation", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserMedicalConditionIDParameter = i_UserMedicalConditionID.HasValue ?
                new ObjectParameter("i_UserMedicalConditionID", i_UserMedicalConditionID) :
                new ObjectParameter("i_UserMedicalConditionID", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMedicalConditionHistory_Update", i_AppUserIdParameter, i_PatientUserIdParameter, i_MedicalConditionIDParameter, v_CommentsParameter, v_Recommendations_consultationParameter, v_StatusCodeParameter, i_UserMedicalConditionIDParameter, d_StartDateParameter, d_EndDateParameter);
        }
    
        public virtual ObjectResult<usp_UserMedicationImmunizations_Select_Result> usp_UserMedicationImmunizations_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_UserImmunizationID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_UserImmunizationIDParameter = i_UserImmunizationID.HasValue ?
                new ObjectParameter("i_UserImmunizationID", i_UserImmunizationID) :
                new ObjectParameter("i_UserImmunizationID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMedicationImmunizations_Select_Result>("usp_UserMedicationImmunizations_Select", i_AppUserIdParameter, i_UserIDParameter, i_UserImmunizationIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserMessage_Update_MessageState(Nullable<int> i_AppUserId, Nullable<int> i_UserMessageId, string vMessageState)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserMessageIdParameter = i_UserMessageId.HasValue ?
                new ObjectParameter("i_UserMessageId", i_UserMessageId) :
                new ObjectParameter("i_UserMessageId", typeof(int));
    
            var vMessageStateParameter = vMessageState != null ?
                new ObjectParameter("vMessageState", vMessageState) :
                new ObjectParameter("vMessageState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMessage_Update_MessageState", i_AppUserIdParameter, i_UserMessageIdParameter, vMessageStateParameter);
        }
    
        public virtual ObjectResult<usp_UserMessageRecipients_Select_Inbox_Archive_Result> usp_UserMessageRecipients_Select_Inbox_Archive(Nullable<int> i_AppUserId, Nullable<int> i_UserID, string c_InboxOrArchive)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var c_InboxOrArchiveParameter = c_InboxOrArchive != null ?
                new ObjectParameter("c_InboxOrArchive", c_InboxOrArchive) :
                new ObjectParameter("c_InboxOrArchive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMessageRecipients_Select_Inbox_Archive_Result>("usp_UserMessageRecipients_Select_Inbox_Archive", i_AppUserIdParameter, i_UserIDParameter, c_InboxOrArchiveParameter);
        }
    
        public virtual int usp_UserMessageRecipients_Update_MessageState(Nullable<int> i_AppUserId, Nullable<int> i_UserMessageId, Nullable<int> i_ToUserId, string vMessageState)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserMessageIdParameter = i_UserMessageId.HasValue ?
                new ObjectParameter("i_UserMessageId", i_UserMessageId) :
                new ObjectParameter("i_UserMessageId", typeof(int));
    
            var i_ToUserIdParameter = i_ToUserId.HasValue ?
                new ObjectParameter("i_ToUserId", i_ToUserId) :
                new ObjectParameter("i_ToUserId", typeof(int));
    
            var vMessageStateParameter = vMessageState != null ?
                new ObjectParameter("vMessageState", vMessageState) :
                new ObjectParameter("vMessageState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserMessageRecipients_Update_MessageState", i_AppUserIdParameter, i_UserMessageIdParameter, i_ToUserIdParameter, vMessageStateParameter);
        }
    
        public virtual ObjectResult<usp_UserMessages_Recepients_Detail_Result> usp_UserMessages_Recepients_Detail(Nullable<int> i_AppUserId, Nullable<int> i_UserMessageID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserMessageIDParameter = i_UserMessageID.HasValue ?
                new ObjectParameter("i_UserMessageID", i_UserMessageID) :
                new ObjectParameter("i_UserMessageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMessages_Recepients_Detail_Result>("usp_UserMessages_Recepients_Detail", i_AppUserIdParameter, i_UserMessageIDParameter);
        }
    
        public virtual ObjectResult<usp_UserMessages_Select_Sent_Draft_Result> usp_UserMessages_Select_Sent_Draft(Nullable<int> i_AppUserID, Nullable<int> i_UserID, string c_SentOrDraft)
        {
            var i_AppUserIDParameter = i_AppUserID.HasValue ?
                new ObjectParameter("i_AppUserID", i_AppUserID) :
                new ObjectParameter("i_AppUserID", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var c_SentOrDraftParameter = c_SentOrDraft != null ?
                new ObjectParameter("c_SentOrDraft", c_SentOrDraft) :
                new ObjectParameter("c_SentOrDraft", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserMessages_Select_Sent_Draft_Result>("usp_UserMessages_Select_Sent_Draft", i_AppUserIDParameter, i_UserIDParameter, c_SentOrDraftParameter);
        }
    
        public virtual int usp_UserNotes_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string vc_Note, Nullable<bool> vc_ViewableByPatient, string vc_StatusCode, Nullable<System.DateTime> dt_UserNoteDate, string vc_NoteType, ObjectParameter o_UserNotesId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_NoteParameter = vc_Note != null ?
                new ObjectParameter("vc_Note", vc_Note) :
                new ObjectParameter("vc_Note", typeof(string));
    
            var vc_ViewableByPatientParameter = vc_ViewableByPatient.HasValue ?
                new ObjectParameter("vc_ViewableByPatient", vc_ViewableByPatient) :
                new ObjectParameter("vc_ViewableByPatient", typeof(bool));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_UserNoteDateParameter = dt_UserNoteDate.HasValue ?
                new ObjectParameter("dt_UserNoteDate", dt_UserNoteDate) :
                new ObjectParameter("dt_UserNoteDate", typeof(System.DateTime));
    
            var vc_NoteTypeParameter = vc_NoteType != null ?
                new ObjectParameter("vc_NoteType", vc_NoteType) :
                new ObjectParameter("vc_NoteType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserNotes_Insert", i_AppUserIdParameter, i_UserIdParameter, vc_NoteParameter, vc_ViewableByPatientParameter, vc_StatusCodeParameter, dt_UserNoteDateParameter, vc_NoteTypeParameter, o_UserNotesId);
        }
    
        public virtual int usp_UserNotes_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string v_StatusCode, string v_NoteType, Nullable<bool> b_ShowLastOneYearData)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_NoteTypeParameter = v_NoteType != null ?
                new ObjectParameter("v_NoteType", v_NoteType) :
                new ObjectParameter("v_NoteType", typeof(string));
    
            var b_ShowLastOneYearDataParameter = b_ShowLastOneYearData.HasValue ?
                new ObjectParameter("b_ShowLastOneYearData", b_ShowLastOneYearData) :
                new ObjectParameter("b_ShowLastOneYearData", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserNotes_Select", i_AppUserIdParameter, i_UserIdParameter, v_StatusCodeParameter, v_NoteTypeParameter, b_ShowLastOneYearDataParameter);
        }
    
        public virtual int usp_UserNotes_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, string vc_Note, Nullable<bool> vc_ViewableByPatient, string vc_StatusCode, Nullable<System.DateTime> dt_UserNoteDate, Nullable<int> i_UserNotesId, string vc_NoteType)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var vc_NoteParameter = vc_Note != null ?
                new ObjectParameter("vc_Note", vc_Note) :
                new ObjectParameter("vc_Note", typeof(string));
    
            var vc_ViewableByPatientParameter = vc_ViewableByPatient.HasValue ?
                new ObjectParameter("vc_ViewableByPatient", vc_ViewableByPatient) :
                new ObjectParameter("vc_ViewableByPatient", typeof(bool));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_UserNoteDateParameter = dt_UserNoteDate.HasValue ?
                new ObjectParameter("dt_UserNoteDate", dt_UserNoteDate) :
                new ObjectParameter("dt_UserNoteDate", typeof(System.DateTime));
    
            var i_UserNotesIdParameter = i_UserNotesId.HasValue ?
                new ObjectParameter("i_UserNotesId", i_UserNotesId) :
                new ObjectParameter("i_UserNotesId", typeof(int));
    
            var vc_NoteTypeParameter = vc_NoteType != null ?
                new ObjectParameter("vc_NoteType", vc_NoteType) :
                new ObjectParameter("vc_NoteType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserNotes_Update", i_AppUserIdParameter, i_UserIdParameter, vc_NoteParameter, vc_ViewableByPatientParameter, vc_StatusCodeParameter, dt_UserNoteDateParameter, i_UserNotesIdParameter, vc_NoteTypeParameter);
        }
    
        public virtual int usp_UserObstetricalConditions_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ObstetricalConditionsID, Nullable<int> i_UserID, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, string v_Comments, string v_StatusCode, ObjectParameter o_UserObstetricalConditionsID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ObstetricalConditionsIDParameter = i_ObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_ObstetricalConditionsID", i_ObstetricalConditionsID) :
                new ObjectParameter("i_ObstetricalConditionsID", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserObstetricalConditions_Insert", i_AppUserIdParameter, i_ObstetricalConditionsIDParameter, i_UserIDParameter, d_StartDateParameter, d_EndDateParameter, v_CommentsParameter, v_StatusCodeParameter, o_UserObstetricalConditionsID, i_DataSourceIdParameter);
        }
    
        public virtual ObjectResult<usp_UserObstetricalConditions_Select_Result> usp_UserObstetricalConditions_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_UserObstetricalConditionsID, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_UserObstetricalConditionsIDParameter = i_UserObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_UserObstetricalConditionsID", i_UserObstetricalConditionsID) :
                new ObjectParameter("i_UserObstetricalConditionsID", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserObstetricalConditions_Select_Result>("usp_UserObstetricalConditions_Select", i_AppUserIdParameter, i_UserIDParameter, i_UserObstetricalConditionsIDParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserObstetricalConditions_Update(Nullable<int> i_AppUserId, Nullable<int> i_ObstetricalConditionsID, Nullable<int> i_UserID, Nullable<System.DateTime> d_StartDate, Nullable<System.DateTime> d_EndDate, string v_Comments, string v_StatusCode, Nullable<int> i_UserObstetricalConditionsID, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ObstetricalConditionsIDParameter = i_ObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_ObstetricalConditionsID", i_ObstetricalConditionsID) :
                new ObjectParameter("i_ObstetricalConditionsID", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var d_StartDateParameter = d_StartDate.HasValue ?
                new ObjectParameter("d_StartDate", d_StartDate) :
                new ObjectParameter("d_StartDate", typeof(System.DateTime));
    
            var d_EndDateParameter = d_EndDate.HasValue ?
                new ObjectParameter("d_EndDate", d_EndDate) :
                new ObjectParameter("d_EndDate", typeof(System.DateTime));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserObstetricalConditionsIDParameter = i_UserObstetricalConditionsID.HasValue ?
                new ObjectParameter("i_UserObstetricalConditionsID", i_UserObstetricalConditionsID) :
                new ObjectParameter("i_UserObstetricalConditionsID", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserObstetricalConditions_Update", i_AppUserIdParameter, i_ObstetricalConditionsIDParameter, i_UserIDParameter, d_StartDateParameter, d_EndDateParameter, v_CommentsParameter, v_StatusCodeParameter, i_UserObstetricalConditionsIDParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserPhoneCallLog_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_CallDate, string v_StatusCode, string vc_Comments, Nullable<int> i_CareProviderUserId, Nullable<System.DateTime> d_DueDate, ObjectParameter o_UserPhoneCallId, Nullable<bool> b_IsAdhoc)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_CallDateParameter = dt_CallDate.HasValue ?
                new ObjectParameter("dt_CallDate", dt_CallDate) :
                new ObjectParameter("dt_CallDate", typeof(System.DateTime));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_CareProviderUserIdParameter = i_CareProviderUserId.HasValue ?
                new ObjectParameter("i_CareProviderUserId", i_CareProviderUserId) :
                new ObjectParameter("i_CareProviderUserId", typeof(int));
    
            var d_DueDateParameter = d_DueDate.HasValue ?
                new ObjectParameter("d_DueDate", d_DueDate) :
                new ObjectParameter("d_DueDate", typeof(System.DateTime));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserPhoneCallLog_Insert", i_AppUserIdParameter, i_UserIdParameter, dt_CallDateParameter, v_StatusCodeParameter, vc_CommentsParameter, i_CareProviderUserIdParameter, d_DueDateParameter, o_UserPhoneCallId, b_IsAdhocParameter);
        }
    
        public virtual ObjectResult<usp_UserPhoneCallLog_Select_Result> usp_UserPhoneCallLog_Select(Nullable<int> i_AppUserId, Nullable<int> i_CareProviderUserId, Nullable<int> i_UserPhoneCallId, string v_StatusCode, Nullable<int> i_UserId, Nullable<bool> b_IsCallPage)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_CareProviderUserIdParameter = i_CareProviderUserId.HasValue ?
                new ObjectParameter("i_CareProviderUserId", i_CareProviderUserId) :
                new ObjectParameter("i_CareProviderUserId", typeof(int));
    
            var i_UserPhoneCallIdParameter = i_UserPhoneCallId.HasValue ?
                new ObjectParameter("i_UserPhoneCallId", i_UserPhoneCallId) :
                new ObjectParameter("i_UserPhoneCallId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var b_IsCallPageParameter = b_IsCallPage.HasValue ?
                new ObjectParameter("b_IsCallPage", b_IsCallPage) :
                new ObjectParameter("b_IsCallPage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserPhoneCallLog_Select_Result>("usp_UserPhoneCallLog_Select", i_AppUserIdParameter, i_CareProviderUserIdParameter, i_UserPhoneCallIdParameter, v_StatusCodeParameter, i_UserIdParameter, b_IsCallPageParameter);
        }
    
        public virtual int usp_UserPhoneCallLog_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<System.DateTime> dt_CallDate, string v_StatusCode, string vc_Comments, Nullable<int> i_CareProviderUserId, Nullable<int> i_UserPhoneCallId, Nullable<System.DateTime> d_DueDate)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var dt_CallDateParameter = dt_CallDate.HasValue ?
                new ObjectParameter("dt_CallDate", dt_CallDate) :
                new ObjectParameter("dt_CallDate", typeof(System.DateTime));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_CareProviderUserIdParameter = i_CareProviderUserId.HasValue ?
                new ObjectParameter("i_CareProviderUserId", i_CareProviderUserId) :
                new ObjectParameter("i_CareProviderUserId", typeof(int));
    
            var i_UserPhoneCallIdParameter = i_UserPhoneCallId.HasValue ?
                new ObjectParameter("i_UserPhoneCallId", i_UserPhoneCallId) :
                new ObjectParameter("i_UserPhoneCallId", typeof(int));
    
            var d_DueDateParameter = d_DueDate.HasValue ?
                new ObjectParameter("d_DueDate", d_DueDate) :
                new ObjectParameter("d_DueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserPhoneCallLog_Update", i_AppUserIdParameter, i_UserIdParameter, dt_CallDateParameter, v_StatusCodeParameter, vc_CommentsParameter, i_CareProviderUserIdParameter, i_UserPhoneCallIdParameter, d_DueDateParameter);
        }
    
        public virtual int usp_UserProblem_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_MedicalProblemId, string vc_Comments, Nullable<System.DateTime> dt_ProblemStartDate, Nullable<System.DateTime> dt_ProblemEndDate, string vc_StatusCode, Nullable<int> i_MedicalProblemClassificationId, ObjectParameter o_UserProblemId, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_MedicalProblemIdParameter = i_MedicalProblemId.HasValue ?
                new ObjectParameter("i_MedicalProblemId", i_MedicalProblemId) :
                new ObjectParameter("i_MedicalProblemId", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var dt_ProblemStartDateParameter = dt_ProblemStartDate.HasValue ?
                new ObjectParameter("dt_ProblemStartDate", dt_ProblemStartDate) :
                new ObjectParameter("dt_ProblemStartDate", typeof(System.DateTime));
    
            var dt_ProblemEndDateParameter = dt_ProblemEndDate.HasValue ?
                new ObjectParameter("dt_ProblemEndDate", dt_ProblemEndDate) :
                new ObjectParameter("dt_ProblemEndDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProblem_Insert", i_AppUserIdParameter, i_UserIdParameter, i_MedicalProblemIdParameter, vc_CommentsParameter, dt_ProblemStartDateParameter, dt_ProblemEndDateParameter, vc_StatusCodeParameter, i_MedicalProblemClassificationIdParameter, o_UserProblemId, i_DataSourceIdParameter);
        }
    
        public virtual ObjectResult<usp_UserProblem_Select_Result> usp_UserProblem_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserProblemId, Nullable<int> i_UserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserProblemIdParameter = i_UserProblemId.HasValue ?
                new ObjectParameter("i_UserProblemId", i_UserProblemId) :
                new ObjectParameter("i_UserProblemId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserProblem_Select_Result>("usp_UserProblem_Select", i_AppUserIdParameter, i_UserProblemIdParameter, i_UserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_UserProblem_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_MedicalProblemId, string vc_Comments, Nullable<System.DateTime> dt_ProblemStartDate, Nullable<System.DateTime> dt_ProblemEndDate, string vc_StatusCode, Nullable<int> i_MedicalProblemClassificationId, Nullable<int> i_UserProblemId, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_MedicalProblemIdParameter = i_MedicalProblemId.HasValue ?
                new ObjectParameter("i_MedicalProblemId", i_MedicalProblemId) :
                new ObjectParameter("i_MedicalProblemId", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var dt_ProblemStartDateParameter = dt_ProblemStartDate.HasValue ?
                new ObjectParameter("dt_ProblemStartDate", dt_ProblemStartDate) :
                new ObjectParameter("dt_ProblemStartDate", typeof(System.DateTime));
    
            var dt_ProblemEndDateParameter = dt_ProblemEndDate.HasValue ?
                new ObjectParameter("dt_ProblemEndDate", dt_ProblemEndDate) :
                new ObjectParameter("dt_ProblemEndDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_MedicalProblemClassificationIdParameter = i_MedicalProblemClassificationId.HasValue ?
                new ObjectParameter("i_MedicalProblemClassificationId", i_MedicalProblemClassificationId) :
                new ObjectParameter("i_MedicalProblemClassificationId", typeof(int));
    
            var i_UserProblemIdParameter = i_UserProblemId.HasValue ?
                new ObjectParameter("i_UserProblemId", i_UserProblemId) :
                new ObjectParameter("i_UserProblemId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProblem_Update", i_AppUserIdParameter, i_UserIdParameter, i_MedicalProblemIdParameter, vc_CommentsParameter, dt_ProblemStartDateParameter, dt_ProblemEndDateParameter, vc_StatusCodeParameter, i_MedicalProblemClassificationIdParameter, i_UserProblemIdParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserProcedureCodes_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_ProcedureId, string vc_Commments, string vc_StatusCode, Nullable<System.DateTime> dt_DueDate, Nullable<System.DateTime> dt_ProcedureCompletedDate, Nullable<int> i_ProcedureLeadtime, Nullable<int> i_ProcedureCodeModifierId, ObjectParameter o_UserProcedureId, Nullable<int> i_LabTestId, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive, Nullable<int> i_ProgramId, Nullable<bool> b_IsAdhoc, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var vc_CommmentsParameter = vc_Commments != null ?
                new ObjectParameter("vc_Commments", vc_Commments) :
                new ObjectParameter("vc_Commments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var dt_ProcedureCompletedDateParameter = dt_ProcedureCompletedDate.HasValue ?
                new ObjectParameter("dt_ProcedureCompletedDate", dt_ProcedureCompletedDate) :
                new ObjectParameter("dt_ProcedureCompletedDate", typeof(System.DateTime));
    
            var i_ProcedureLeadtimeParameter = i_ProcedureLeadtime.HasValue ?
                new ObjectParameter("i_ProcedureLeadtime", i_ProcedureLeadtime) :
                new ObjectParameter("i_ProcedureLeadtime", typeof(int));
    
            var i_ProcedureCodeModifierIdParameter = i_ProcedureCodeModifierId.HasValue ?
                new ObjectParameter("i_ProcedureCodeModifierId", i_ProcedureCodeModifierId) :
                new ObjectParameter("i_ProcedureCodeModifierId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProcedureCodes_Insert", i_AppUserIdParameter, i_UserIdParameter, i_ProcedureIdParameter, vc_CommmentsParameter, vc_StatusCodeParameter, dt_DueDateParameter, dt_ProcedureCompletedDateParameter, i_ProcedureLeadtimeParameter, i_ProcedureCodeModifierIdParameter, o_UserProcedureId, i_LabTestIdParameter, i_DiseaseIDParameter, b_IsPreventiveParameter, i_ProgramIdParameter, b_IsAdhocParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserProcedureCodes_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserProcedureId, string v_StatusCode, Nullable<int> i_PatientUserID, Nullable<bool> b_ShowLastOneYearData)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserProcedureIdParameter = i_UserProcedureId.HasValue ?
                new ObjectParameter("i_UserProcedureId", i_UserProcedureId) :
                new ObjectParameter("i_UserProcedureId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            var b_ShowLastOneYearDataParameter = b_ShowLastOneYearData.HasValue ?
                new ObjectParameter("b_ShowLastOneYearData", b_ShowLastOneYearData) :
                new ObjectParameter("b_ShowLastOneYearData", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProcedureCodes_Select", i_AppUserIdParameter, i_UserProcedureIdParameter, v_StatusCodeParameter, i_PatientUserIDParameter, b_ShowLastOneYearDataParameter);
        }
    
        public virtual int usp_UserProcedureCodes_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_ProcedureId, string vc_Commments, string vc_StatusCode, Nullable<System.DateTime> dt_DueDate, Nullable<System.DateTime> dt_ProcedureCompletedDate, Nullable<int> i_UserProcedureId, Nullable<int> i_ProcedureLeadtime, Nullable<int> i_ProcedureCodeModifierId, Nullable<int> i_LabTestId, Nullable<int> i_DiseaseID, Nullable<bool> b_IsPreventive, Nullable<int> i_ProgramId, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ProcedureIdParameter = i_ProcedureId.HasValue ?
                new ObjectParameter("i_ProcedureId", i_ProcedureId) :
                new ObjectParameter("i_ProcedureId", typeof(int));
    
            var vc_CommmentsParameter = vc_Commments != null ?
                new ObjectParameter("vc_Commments", vc_Commments) :
                new ObjectParameter("vc_Commments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var dt_ProcedureCompletedDateParameter = dt_ProcedureCompletedDate.HasValue ?
                new ObjectParameter("dt_ProcedureCompletedDate", dt_ProcedureCompletedDate) :
                new ObjectParameter("dt_ProcedureCompletedDate", typeof(System.DateTime));
    
            var i_UserProcedureIdParameter = i_UserProcedureId.HasValue ?
                new ObjectParameter("i_UserProcedureId", i_UserProcedureId) :
                new ObjectParameter("i_UserProcedureId", typeof(int));
    
            var i_ProcedureLeadtimeParameter = i_ProcedureLeadtime.HasValue ?
                new ObjectParameter("i_ProcedureLeadtime", i_ProcedureLeadtime) :
                new ObjectParameter("i_ProcedureLeadtime", typeof(int));
    
            var i_ProcedureCodeModifierIdParameter = i_ProcedureCodeModifierId.HasValue ?
                new ObjectParameter("i_ProcedureCodeModifierId", i_ProcedureCodeModifierId) :
                new ObjectParameter("i_ProcedureCodeModifierId", typeof(int));
    
            var i_LabTestIdParameter = i_LabTestId.HasValue ?
                new ObjectParameter("i_LabTestId", i_LabTestId) :
                new ObjectParameter("i_LabTestId", typeof(int));
    
            var i_DiseaseIDParameter = i_DiseaseID.HasValue ?
                new ObjectParameter("i_DiseaseID", i_DiseaseID) :
                new ObjectParameter("i_DiseaseID", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProcedureCodes_Update", i_AppUserIdParameter, i_UserIdParameter, i_ProcedureIdParameter, vc_CommmentsParameter, vc_StatusCodeParameter, dt_DueDateParameter, dt_ProcedureCompletedDateParameter, i_UserProcedureIdParameter, i_ProcedureLeadtimeParameter, i_ProcedureCodeModifierIdParameter, i_LabTestIdParameter, i_DiseaseIDParameter, b_IsPreventiveParameter, i_ProgramIdParameter, i_DataSourceIdParameter);
        }
    
        public virtual int usp_UserProcedureFrequencyOverride_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserID, Nullable<int> i_ProcedureID, Nullable<int> i_ProgramID, string v_ProgramFrequency, Nullable<int> i_ProgramFrequencyNumber, Nullable<System.DateTime> d_ProgramEffectiveStartDate, string v_PatientProcFrequency, Nullable<int> i_PatientProcFrequencyNumber, Nullable<System.DateTime> d_PatientProcEffectiveStartDate, Nullable<bool> b_NeverSchedule)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_ProcedureIDParameter = i_ProcedureID.HasValue ?
                new ObjectParameter("i_ProcedureID", i_ProcedureID) :
                new ObjectParameter("i_ProcedureID", typeof(int));
    
            var i_ProgramIDParameter = i_ProgramID.HasValue ?
                new ObjectParameter("i_ProgramID", i_ProgramID) :
                new ObjectParameter("i_ProgramID", typeof(int));
    
            var v_ProgramFrequencyParameter = v_ProgramFrequency != null ?
                new ObjectParameter("v_ProgramFrequency", v_ProgramFrequency) :
                new ObjectParameter("v_ProgramFrequency", typeof(string));
    
            var i_ProgramFrequencyNumberParameter = i_ProgramFrequencyNumber.HasValue ?
                new ObjectParameter("i_ProgramFrequencyNumber", i_ProgramFrequencyNumber) :
                new ObjectParameter("i_ProgramFrequencyNumber", typeof(int));
    
            var d_ProgramEffectiveStartDateParameter = d_ProgramEffectiveStartDate.HasValue ?
                new ObjectParameter("d_ProgramEffectiveStartDate", d_ProgramEffectiveStartDate) :
                new ObjectParameter("d_ProgramEffectiveStartDate", typeof(System.DateTime));
    
            var v_PatientProcFrequencyParameter = v_PatientProcFrequency != null ?
                new ObjectParameter("v_PatientProcFrequency", v_PatientProcFrequency) :
                new ObjectParameter("v_PatientProcFrequency", typeof(string));
    
            var i_PatientProcFrequencyNumberParameter = i_PatientProcFrequencyNumber.HasValue ?
                new ObjectParameter("i_PatientProcFrequencyNumber", i_PatientProcFrequencyNumber) :
                new ObjectParameter("i_PatientProcFrequencyNumber", typeof(int));
    
            var d_PatientProcEffectiveStartDateParameter = d_PatientProcEffectiveStartDate.HasValue ?
                new ObjectParameter("d_PatientProcEffectiveStartDate", d_PatientProcEffectiveStartDate) :
                new ObjectParameter("d_PatientProcEffectiveStartDate", typeof(System.DateTime));
    
            var b_NeverScheduleParameter = b_NeverSchedule.HasValue ?
                new ObjectParameter("b_NeverSchedule", b_NeverSchedule) :
                new ObjectParameter("b_NeverSchedule", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProcedureFrequencyOverride_Select", i_AppUserIdParameter, i_UserIDParameter, i_ProcedureIDParameter, i_ProgramIDParameter, v_ProgramFrequencyParameter, i_ProgramFrequencyNumberParameter, d_ProgramEffectiveStartDateParameter, v_PatientProcFrequencyParameter, i_PatientProcFrequencyNumberParameter, d_PatientProcEffectiveStartDateParameter, b_NeverScheduleParameter);
        }
    
        public virtual int usp_UserPrograms_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_ProgramId, Nullable<System.DateTime> dt_DueDate, Nullable<System.DateTime> dt_EnrollmentStartDate, Nullable<System.DateTime> dt_EnrollmentEndDate, Nullable<bool> i_IsPatientDeclinedEnrollment, Nullable<System.DateTime> dt_DeclinedDate, string vc_StatusCode, Nullable<int> i_ProgramExcludeID, ObjectParameter o_UserProgramId, Nullable<bool> b_IsAdhoc)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var dt_EnrollmentStartDateParameter = dt_EnrollmentStartDate.HasValue ?
                new ObjectParameter("dt_EnrollmentStartDate", dt_EnrollmentStartDate) :
                new ObjectParameter("dt_EnrollmentStartDate", typeof(System.DateTime));
    
            var dt_EnrollmentEndDateParameter = dt_EnrollmentEndDate.HasValue ?
                new ObjectParameter("dt_EnrollmentEndDate", dt_EnrollmentEndDate) :
                new ObjectParameter("dt_EnrollmentEndDate", typeof(System.DateTime));
    
            var i_IsPatientDeclinedEnrollmentParameter = i_IsPatientDeclinedEnrollment.HasValue ?
                new ObjectParameter("i_IsPatientDeclinedEnrollment", i_IsPatientDeclinedEnrollment) :
                new ObjectParameter("i_IsPatientDeclinedEnrollment", typeof(bool));
    
            var dt_DeclinedDateParameter = dt_DeclinedDate.HasValue ?
                new ObjectParameter("dt_DeclinedDate", dt_DeclinedDate) :
                new ObjectParameter("dt_DeclinedDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_ProgramExcludeIDParameter = i_ProgramExcludeID.HasValue ?
                new ObjectParameter("i_ProgramExcludeID", i_ProgramExcludeID) :
                new ObjectParameter("i_ProgramExcludeID", typeof(int));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserPrograms_Insert", i_AppUserIdParameter, i_UserIdParameter, i_ProgramIdParameter, dt_DueDateParameter, dt_EnrollmentStartDateParameter, dt_EnrollmentEndDateParameter, i_IsPatientDeclinedEnrollmentParameter, dt_DeclinedDateParameter, vc_StatusCodeParameter, i_ProgramExcludeIDParameter, o_UserProgramId, b_IsAdhocParameter);
        }
    
        public virtual int usp_UserPrograms_Select(Nullable<int> i_AppUserId, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, Nullable<int> i_UserProgramId, Nullable<int> i_UserId, Nullable<int> i_ProgramId, string v_StatusCode, string v_SortBy, string v_SortOrder)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var i_UserProgramIdParameter = i_UserProgramId.HasValue ?
                new ObjectParameter("i_UserProgramId", i_UserProgramId) :
                new ObjectParameter("i_UserProgramId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_SortByParameter = v_SortBy != null ?
                new ObjectParameter("v_SortBy", v_SortBy) :
                new ObjectParameter("v_SortBy", typeof(string));
    
            var v_SortOrderParameter = v_SortOrder != null ?
                new ObjectParameter("v_SortOrder", v_SortOrder) :
                new ObjectParameter("v_SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserPrograms_Select", i_AppUserIdParameter, i_StartIndexParameter, i_EndIndexParameter, i_UserProgramIdParameter, i_UserIdParameter, i_ProgramIdParameter, v_StatusCodeParameter, v_SortByParameter, v_SortOrderParameter);
        }
    
        public virtual int usp_UserPrograms_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_ProgramId, Nullable<System.DateTime> dt_DueDate, Nullable<System.DateTime> dt_EnrollmentStartDate, Nullable<System.DateTime> dt_EnrollmentEndDate, Nullable<bool> i_IsPatientDeclinedEnrollment, Nullable<System.DateTime> dt_DeclinedDate, string vc_StatusCode, Nullable<int> i_UserProgramId, Nullable<int> i_ProgramExcludeID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var dt_DueDateParameter = dt_DueDate.HasValue ?
                new ObjectParameter("dt_DueDate", dt_DueDate) :
                new ObjectParameter("dt_DueDate", typeof(System.DateTime));
    
            var dt_EnrollmentStartDateParameter = dt_EnrollmentStartDate.HasValue ?
                new ObjectParameter("dt_EnrollmentStartDate", dt_EnrollmentStartDate) :
                new ObjectParameter("dt_EnrollmentStartDate", typeof(System.DateTime));
    
            var dt_EnrollmentEndDateParameter = dt_EnrollmentEndDate.HasValue ?
                new ObjectParameter("dt_EnrollmentEndDate", dt_EnrollmentEndDate) :
                new ObjectParameter("dt_EnrollmentEndDate", typeof(System.DateTime));
    
            var i_IsPatientDeclinedEnrollmentParameter = i_IsPatientDeclinedEnrollment.HasValue ?
                new ObjectParameter("i_IsPatientDeclinedEnrollment", i_IsPatientDeclinedEnrollment) :
                new ObjectParameter("i_IsPatientDeclinedEnrollment", typeof(bool));
    
            var dt_DeclinedDateParameter = dt_DeclinedDate.HasValue ?
                new ObjectParameter("dt_DeclinedDate", dt_DeclinedDate) :
                new ObjectParameter("dt_DeclinedDate", typeof(System.DateTime));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            var i_UserProgramIdParameter = i_UserProgramId.HasValue ?
                new ObjectParameter("i_UserProgramId", i_UserProgramId) :
                new ObjectParameter("i_UserProgramId", typeof(int));
    
            var i_ProgramExcludeIDParameter = i_ProgramExcludeID.HasValue ?
                new ObjectParameter("i_ProgramExcludeID", i_ProgramExcludeID) :
                new ObjectParameter("i_ProgramExcludeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserPrograms_Update", i_AppUserIdParameter, i_UserIdParameter, i_ProgramIdParameter, dt_DueDateParameter, dt_EnrollmentStartDateParameter, dt_EnrollmentEndDateParameter, i_IsPatientDeclinedEnrollmentParameter, dt_DeclinedDateParameter, vc_StatusCodeParameter, i_UserProgramIdParameter, i_ProgramExcludeIDParameter);
        }
    
        public virtual int usp_UserProviders_Insert(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, Nullable<int> i_ExternalProviderId, Nullable<int> i_ProviderUserId, string vc_Comments, string vc_StatusCode, ObjectParameter o_UserProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_ExternalProviderIdParameter = i_ExternalProviderId.HasValue ?
                new ObjectParameter("i_ExternalProviderId", i_ExternalProviderId) :
                new ObjectParameter("i_ExternalProviderId", typeof(int));
    
            var i_ProviderUserIdParameter = i_ProviderUserId.HasValue ?
                new ObjectParameter("i_ProviderUserId", i_ProviderUserId) :
                new ObjectParameter("i_ProviderUserId", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProviders_Insert", i_AppUserIdParameter, i_PatientUserIdParameter, i_ExternalProviderIdParameter, i_ProviderUserIdParameter, vc_CommentsParameter, vc_StatusCodeParameter, o_UserProviderId);
        }
    
        public virtual int usp_UserProviders_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserProviderId, Nullable<int> i_PatientUserId, Nullable<int> i_ExternalProviderId, Nullable<int> i_ProviderUserId, string vc_Comments, string vc_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserProviderIdParameter = i_UserProviderId.HasValue ?
                new ObjectParameter("i_UserProviderId", i_UserProviderId) :
                new ObjectParameter("i_UserProviderId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_ExternalProviderIdParameter = i_ExternalProviderId.HasValue ?
                new ObjectParameter("i_ExternalProviderId", i_ExternalProviderId) :
                new ObjectParameter("i_ExternalProviderId", typeof(int));
    
            var i_ProviderUserIdParameter = i_ProviderUserId.HasValue ?
                new ObjectParameter("i_ProviderUserId", i_ProviderUserId) :
                new ObjectParameter("i_ProviderUserId", typeof(int));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var vc_StatusCodeParameter = vc_StatusCode != null ?
                new ObjectParameter("vc_StatusCode", vc_StatusCode) :
                new ObjectParameter("vc_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserProviders_Update", i_AppUserIdParameter, i_UserProviderIdParameter, i_PatientUserIdParameter, i_ExternalProviderIdParameter, i_ProviderUserIdParameter, vc_CommentsParameter, vc_StatusCodeParameter);
        }
    
        public virtual int usp_UserQuestionaire_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_QuestionaireId, Nullable<System.DateTime> dt_DateTaken, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_DateAssigned, string vc_Comments, ObjectParameter o_UserQuestionaireId, Nullable<int> i_DiseaseId, Nullable<bool> b_IsPreventive, Nullable<int> i_ProgramId, Nullable<bool> b_IsAdhoc, Nullable<int> i_AssignedCareProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var dt_DateTakenParameter = dt_DateTaken.HasValue ?
                new ObjectParameter("dt_DateTaken", dt_DateTaken) :
                new ObjectParameter("dt_DateTaken", typeof(System.DateTime));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_DateAssignedParameter = dt_DateAssigned.HasValue ?
                new ObjectParameter("dt_DateAssigned", dt_DateAssigned) :
                new ObjectParameter("dt_DateAssigned", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var b_IsAdhocParameter = b_IsAdhoc.HasValue ?
                new ObjectParameter("b_IsAdhoc", b_IsAdhoc) :
                new ObjectParameter("b_IsAdhoc", typeof(bool));
    
            var i_AssignedCareProviderIdParameter = i_AssignedCareProviderId.HasValue ?
                new ObjectParameter("i_AssignedCareProviderId", i_AssignedCareProviderId) :
                new ObjectParameter("i_AssignedCareProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserQuestionaire_Insert", i_AppUserIdParameter, i_UserIdParameter, i_QuestionaireIdParameter, dt_DateTakenParameter, dt_DateDueParameter, dt_DateAssignedParameter, vc_CommentsParameter, o_UserQuestionaireId, i_DiseaseIdParameter, b_IsPreventiveParameter, i_ProgramIdParameter, b_IsAdhocParameter, i_AssignedCareProviderIdParameter);
        }
    
        public virtual ObjectResult<usp_UserQuestionaire_Select_Result> usp_UserQuestionaire_Select(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_UserQuestionaireId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_UserQuestionaireIdParameter = i_UserQuestionaireId.HasValue ?
                new ObjectParameter("i_UserQuestionaireId", i_UserQuestionaireId) :
                new ObjectParameter("i_UserQuestionaireId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserQuestionaire_Select_Result>("usp_UserQuestionaire_Select", i_AppUserIdParameter, i_UserIdParameter, i_UserQuestionaireIdParameter);
        }
    
        public virtual int usp_UserQuestionaire_Update(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<int> i_QuestionaireId, Nullable<System.DateTime> dt_DateTaken, Nullable<System.DateTime> dt_DateDue, Nullable<System.DateTime> dt_DateAssigned, string vc_Comments, Nullable<int> i_UserQuestionaireId, Nullable<int> i_DiseaseId, Nullable<bool> b_IsPreventive, Nullable<int> i_ProgramId, Nullable<int> i_AssignedCareProviderId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_QuestionaireIdParameter = i_QuestionaireId.HasValue ?
                new ObjectParameter("i_QuestionaireId", i_QuestionaireId) :
                new ObjectParameter("i_QuestionaireId", typeof(int));
    
            var dt_DateTakenParameter = dt_DateTaken.HasValue ?
                new ObjectParameter("dt_DateTaken", dt_DateTaken) :
                new ObjectParameter("dt_DateTaken", typeof(System.DateTime));
    
            var dt_DateDueParameter = dt_DateDue.HasValue ?
                new ObjectParameter("dt_DateDue", dt_DateDue) :
                new ObjectParameter("dt_DateDue", typeof(System.DateTime));
    
            var dt_DateAssignedParameter = dt_DateAssigned.HasValue ?
                new ObjectParameter("dt_DateAssigned", dt_DateAssigned) :
                new ObjectParameter("dt_DateAssigned", typeof(System.DateTime));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_UserQuestionaireIdParameter = i_UserQuestionaireId.HasValue ?
                new ObjectParameter("i_UserQuestionaireId", i_UserQuestionaireId) :
                new ObjectParameter("i_UserQuestionaireId", typeof(int));
    
            var i_DiseaseIdParameter = i_DiseaseId.HasValue ?
                new ObjectParameter("i_DiseaseId", i_DiseaseId) :
                new ObjectParameter("i_DiseaseId", typeof(int));
    
            var b_IsPreventiveParameter = b_IsPreventive.HasValue ?
                new ObjectParameter("b_IsPreventive", b_IsPreventive) :
                new ObjectParameter("b_IsPreventive", typeof(bool));
    
            var i_ProgramIdParameter = i_ProgramId.HasValue ?
                new ObjectParameter("i_ProgramId", i_ProgramId) :
                new ObjectParameter("i_ProgramId", typeof(int));
    
            var i_AssignedCareProviderIdParameter = i_AssignedCareProviderId.HasValue ?
                new ObjectParameter("i_AssignedCareProviderId", i_AssignedCareProviderId) :
                new ObjectParameter("i_AssignedCareProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserQuestionaire_Update", i_AppUserIdParameter, i_UserIdParameter, i_QuestionaireIdParameter, dt_DateTakenParameter, dt_DateDueParameter, dt_DateAssignedParameter, vc_CommentsParameter, i_UserQuestionaireIdParameter, i_DiseaseIdParameter, b_IsPreventiveParameter, i_ProgramIdParameter, i_AssignedCareProviderIdParameter);
        }
    
        public virtual int usp_UserQuestionaireRecommendations_Insert(Nullable<int> i_AppUserId, Nullable<int> i_UserQuestionaireId, Nullable<int> i_RecommendationId, Nullable<int> i_SysRecommendationId, Nullable<short> i_FrequencyOfTitrationDays, string v_ActionComment, Nullable<System.DateTime> d_SurveyDate, Nullable<System.DateTime> d_ReassessmentDate, Nullable<int> i_PatientUserId, Nullable<int> i_NextQuestionaireID, ObjectParameter o_UserQuestionaireID, Nullable<bool> b_IsTitration)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserQuestionaireIdParameter = i_UserQuestionaireId.HasValue ?
                new ObjectParameter("i_UserQuestionaireId", i_UserQuestionaireId) :
                new ObjectParameter("i_UserQuestionaireId", typeof(int));
    
            var i_RecommendationIdParameter = i_RecommendationId.HasValue ?
                new ObjectParameter("i_RecommendationId", i_RecommendationId) :
                new ObjectParameter("i_RecommendationId", typeof(int));
    
            var i_SysRecommendationIdParameter = i_SysRecommendationId.HasValue ?
                new ObjectParameter("i_SysRecommendationId", i_SysRecommendationId) :
                new ObjectParameter("i_SysRecommendationId", typeof(int));
    
            var i_FrequencyOfTitrationDaysParameter = i_FrequencyOfTitrationDays.HasValue ?
                new ObjectParameter("i_FrequencyOfTitrationDays", i_FrequencyOfTitrationDays) :
                new ObjectParameter("i_FrequencyOfTitrationDays", typeof(short));
    
            var v_ActionCommentParameter = v_ActionComment != null ?
                new ObjectParameter("v_ActionComment", v_ActionComment) :
                new ObjectParameter("v_ActionComment", typeof(string));
    
            var d_SurveyDateParameter = d_SurveyDate.HasValue ?
                new ObjectParameter("d_SurveyDate", d_SurveyDate) :
                new ObjectParameter("d_SurveyDate", typeof(System.DateTime));
    
            var d_ReassessmentDateParameter = d_ReassessmentDate.HasValue ?
                new ObjectParameter("d_ReassessmentDate", d_ReassessmentDate) :
                new ObjectParameter("d_ReassessmentDate", typeof(System.DateTime));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_NextQuestionaireIDParameter = i_NextQuestionaireID.HasValue ?
                new ObjectParameter("i_NextQuestionaireID", i_NextQuestionaireID) :
                new ObjectParameter("i_NextQuestionaireID", typeof(int));
    
            var b_IsTitrationParameter = b_IsTitration.HasValue ?
                new ObjectParameter("b_IsTitration", b_IsTitration) :
                new ObjectParameter("b_IsTitration", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserQuestionaireRecommendations_Insert", i_AppUserIdParameter, i_UserQuestionaireIdParameter, i_RecommendationIdParameter, i_SysRecommendationIdParameter, i_FrequencyOfTitrationDaysParameter, v_ActionCommentParameter, d_SurveyDateParameter, d_ReassessmentDateParameter, i_PatientUserIdParameter, i_NextQuestionaireIDParameter, o_UserQuestionaireID, b_IsTitrationParameter);
        }
    
        public virtual int usp_UserQuestionaireTitration_Recommendation(Nullable<int> i_AppUserId, Nullable<int> i_RecommendationID, Nullable<int> i_PatientUserId, Nullable<int> i_UserQuestionaireId, Nullable<short> i_DaysToNextQuestionaire, string vc_Comments, Nullable<int> i_NextQuestionaireID, ObjectParameter o_UserQuestionaireID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_RecommendationIDParameter = i_RecommendationID.HasValue ?
                new ObjectParameter("i_RecommendationID", i_RecommendationID) :
                new ObjectParameter("i_RecommendationID", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_UserQuestionaireIdParameter = i_UserQuestionaireId.HasValue ?
                new ObjectParameter("i_UserQuestionaireId", i_UserQuestionaireId) :
                new ObjectParameter("i_UserQuestionaireId", typeof(int));
    
            var i_DaysToNextQuestionaireParameter = i_DaysToNextQuestionaire.HasValue ?
                new ObjectParameter("i_DaysToNextQuestionaire", i_DaysToNextQuestionaire) :
                new ObjectParameter("i_DaysToNextQuestionaire", typeof(short));
    
            var vc_CommentsParameter = vc_Comments != null ?
                new ObjectParameter("vc_Comments", vc_Comments) :
                new ObjectParameter("vc_Comments", typeof(string));
    
            var i_NextQuestionaireIDParameter = i_NextQuestionaireID.HasValue ?
                new ObjectParameter("i_NextQuestionaireID", i_NextQuestionaireID) :
                new ObjectParameter("i_NextQuestionaireID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserQuestionaireTitration_Recommendation", i_AppUserIdParameter, i_RecommendationIDParameter, i_PatientUserIdParameter, i_UserQuestionaireIdParameter, i_DaysToNextQuestionaireParameter, vc_CommentsParameter, i_NextQuestionaireIDParameter, o_UserQuestionaireID);
        }
    
        public virtual int usp_users_DetailByCriteria(Nullable<int> i_AppUserid, string nv_CriteriaSQL, Nullable<bool> i_IsFlag)
        {
            var i_AppUseridParameter = i_AppUserid.HasValue ?
                new ObjectParameter("i_AppUserid", i_AppUserid) :
                new ObjectParameter("i_AppUserid", typeof(int));
    
            var nv_CriteriaSQLParameter = nv_CriteriaSQL != null ?
                new ObjectParameter("nv_CriteriaSQL", nv_CriteriaSQL) :
                new ObjectParameter("nv_CriteriaSQL", typeof(string));
    
            var i_IsFlagParameter = i_IsFlag.HasValue ?
                new ObjectParameter("i_IsFlag", i_IsFlag) :
                new ObjectParameter("i_IsFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_users_DetailByCriteria", i_AppUseridParameter, nv_CriteriaSQLParameter, i_IsFlagParameter);
        }
    
        public virtual ObjectResult<usp_Users_HeaderInfoByUserId_Result> usp_Users_HeaderInfoByUserId(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Users_HeaderInfoByUserId_Result>("usp_Users_HeaderInfoByUserId", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual int usp_Users_Search(Nullable<int> i_AppUserId, Nullable<bool> b_IsPatient, Nullable<int> i_UserID, Nullable<int> i_StartIndex, Nullable<int> i_EndIndex, string v_UserLoginName, string v_LastName, string v_PreferedName, string v_City, string v_State, string v_ZipCode, string v_MemberNum, string v_UserStatusCode, string v_FirstName, string v_PhoneNumberPrimary, string v_EmailIdPrimary, string v_SSNNo, string vc_Gender, string i_OperatorValue1, Nullable<int> i_AgeFrom1, Nullable<int> i_AgeTo1, string i_OperatorValue2, Nullable<int> i_AgeFrom2, Nullable<int> i_AgeTo2)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var b_IsPatientParameter = b_IsPatient.HasValue ?
                new ObjectParameter("b_IsPatient", b_IsPatient) :
                new ObjectParameter("b_IsPatient", typeof(bool));
    
            var i_UserIDParameter = i_UserID.HasValue ?
                new ObjectParameter("i_UserID", i_UserID) :
                new ObjectParameter("i_UserID", typeof(int));
    
            var i_StartIndexParameter = i_StartIndex.HasValue ?
                new ObjectParameter("i_StartIndex", i_StartIndex) :
                new ObjectParameter("i_StartIndex", typeof(int));
    
            var i_EndIndexParameter = i_EndIndex.HasValue ?
                new ObjectParameter("i_EndIndex", i_EndIndex) :
                new ObjectParameter("i_EndIndex", typeof(int));
    
            var v_UserLoginNameParameter = v_UserLoginName != null ?
                new ObjectParameter("v_UserLoginName", v_UserLoginName) :
                new ObjectParameter("v_UserLoginName", typeof(string));
    
            var v_LastNameParameter = v_LastName != null ?
                new ObjectParameter("v_LastName", v_LastName) :
                new ObjectParameter("v_LastName", typeof(string));
    
            var v_PreferedNameParameter = v_PreferedName != null ?
                new ObjectParameter("v_PreferedName", v_PreferedName) :
                new ObjectParameter("v_PreferedName", typeof(string));
    
            var v_CityParameter = v_City != null ?
                new ObjectParameter("v_City", v_City) :
                new ObjectParameter("v_City", typeof(string));
    
            var v_StateParameter = v_State != null ?
                new ObjectParameter("v_State", v_State) :
                new ObjectParameter("v_State", typeof(string));
    
            var v_ZipCodeParameter = v_ZipCode != null ?
                new ObjectParameter("v_ZipCode", v_ZipCode) :
                new ObjectParameter("v_ZipCode", typeof(string));
    
            var v_MemberNumParameter = v_MemberNum != null ?
                new ObjectParameter("v_MemberNum", v_MemberNum) :
                new ObjectParameter("v_MemberNum", typeof(string));
    
            var v_UserStatusCodeParameter = v_UserStatusCode != null ?
                new ObjectParameter("v_UserStatusCode", v_UserStatusCode) :
                new ObjectParameter("v_UserStatusCode", typeof(string));
    
            var v_FirstNameParameter = v_FirstName != null ?
                new ObjectParameter("v_FirstName", v_FirstName) :
                new ObjectParameter("v_FirstName", typeof(string));
    
            var v_PhoneNumberPrimaryParameter = v_PhoneNumberPrimary != null ?
                new ObjectParameter("v_PhoneNumberPrimary", v_PhoneNumberPrimary) :
                new ObjectParameter("v_PhoneNumberPrimary", typeof(string));
    
            var v_EmailIdPrimaryParameter = v_EmailIdPrimary != null ?
                new ObjectParameter("v_EmailIdPrimary", v_EmailIdPrimary) :
                new ObjectParameter("v_EmailIdPrimary", typeof(string));
    
            var v_SSNNoParameter = v_SSNNo != null ?
                new ObjectParameter("v_SSNNo", v_SSNNo) :
                new ObjectParameter("v_SSNNo", typeof(string));
    
            var vc_GenderParameter = vc_Gender != null ?
                new ObjectParameter("vc_Gender", vc_Gender) :
                new ObjectParameter("vc_Gender", typeof(string));
    
            var i_OperatorValue1Parameter = i_OperatorValue1 != null ?
                new ObjectParameter("i_OperatorValue1", i_OperatorValue1) :
                new ObjectParameter("i_OperatorValue1", typeof(string));
    
            var i_AgeFrom1Parameter = i_AgeFrom1.HasValue ?
                new ObjectParameter("i_AgeFrom1", i_AgeFrom1) :
                new ObjectParameter("i_AgeFrom1", typeof(int));
    
            var i_AgeTo1Parameter = i_AgeTo1.HasValue ?
                new ObjectParameter("i_AgeTo1", i_AgeTo1) :
                new ObjectParameter("i_AgeTo1", typeof(int));
    
            var i_OperatorValue2Parameter = i_OperatorValue2 != null ?
                new ObjectParameter("i_OperatorValue2", i_OperatorValue2) :
                new ObjectParameter("i_OperatorValue2", typeof(string));
    
            var i_AgeFrom2Parameter = i_AgeFrom2.HasValue ?
                new ObjectParameter("i_AgeFrom2", i_AgeFrom2) :
                new ObjectParameter("i_AgeFrom2", typeof(int));
    
            var i_AgeTo2Parameter = i_AgeTo2.HasValue ?
                new ObjectParameter("i_AgeTo2", i_AgeTo2) :
                new ObjectParameter("i_AgeTo2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Users_Search", i_AppUserIdParameter, b_IsPatientParameter, i_UserIDParameter, i_StartIndexParameter, i_EndIndexParameter, v_UserLoginNameParameter, v_LastNameParameter, v_PreferedNameParameter, v_CityParameter, v_StateParameter, v_ZipCodeParameter, v_MemberNumParameter, v_UserStatusCodeParameter, v_FirstNameParameter, v_PhoneNumberPrimaryParameter, v_EmailIdPrimaryParameter, v_SSNNoParameter, vc_GenderParameter, i_OperatorValue1Parameter, i_AgeFrom1Parameter, i_AgeTo1Parameter, i_OperatorValue2Parameter, i_AgeFrom2Parameter, i_AgeTo2Parameter);
        }
    
        public virtual ObjectResult<string> usp_Users_SearchForPCP(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Users_SearchForPCP", i_AppUserIdParameter, i_PatientUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Users_Select_Result> usp_Users_Select(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Users_Select_Result>("usp_Users_Select", i_AppUserIdParameter);
        }
    
        public virtual ObjectResult<usp_Users_Select_ByUserLoginName_Result> usp_Users_Select_ByUserLoginName(string v_userLoginName)
        {
            var v_userLoginNameParameter = v_userLoginName != null ?
                new ObjectParameter("v_userLoginName", v_userLoginName) :
                new ObjectParameter("v_userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Users_Select_ByUserLoginName_Result>("usp_Users_Select_ByUserLoginName", v_userLoginNameParameter);
        }
    
        public virtual ObjectResult<usp_UsersEpisode_Select_Result> usp_UsersEpisode_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserID)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIDParameter = i_PatientUserID.HasValue ?
                new ObjectParameter("i_PatientUserID", i_PatientUserID) :
                new ObjectParameter("i_PatientUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UsersEpisode_Select_Result>("usp_UsersEpisode_Select", i_AppUserIdParameter, i_PatientUserIDParameter);
        }
    
        public virtual ObjectResult<usp_UserSpeciality_SearchByUserId_Result> usp_UserSpeciality_SearchByUserId(Nullable<int> i_AppUserId, Nullable<int> i_UserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserSpeciality_SearchByUserId_Result>("usp_UserSpeciality_SearchByUserId", i_AppUserIdParameter, i_UserIdParameter);
        }
    
        public virtual int usp_UserSpeciality_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserSpeciality_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_UserSpeciality_SelectByPatientUserId(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, string i_SpecialityId, Nullable<System.DateTime> d_FromDate, Nullable<System.DateTime> d_ToDate, Nullable<bool> b_IsByCost, string i_Type, Nullable<int> i_SubTypeId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var i_SpecialityIdParameter = i_SpecialityId != null ?
                new ObjectParameter("i_SpecialityId", i_SpecialityId) :
                new ObjectParameter("i_SpecialityId", typeof(string));
    
            var d_FromDateParameter = d_FromDate.HasValue ?
                new ObjectParameter("d_FromDate", d_FromDate) :
                new ObjectParameter("d_FromDate", typeof(System.DateTime));
    
            var d_ToDateParameter = d_ToDate.HasValue ?
                new ObjectParameter("d_ToDate", d_ToDate) :
                new ObjectParameter("d_ToDate", typeof(System.DateTime));
    
            var b_IsByCostParameter = b_IsByCost.HasValue ?
                new ObjectParameter("b_IsByCost", b_IsByCost) :
                new ObjectParameter("b_IsByCost", typeof(bool));
    
            var i_TypeParameter = i_Type != null ?
                new ObjectParameter("i_Type", i_Type) :
                new ObjectParameter("i_Type", typeof(string));
    
            var i_SubTypeIdParameter = i_SubTypeId.HasValue ?
                new ObjectParameter("i_SubTypeId", i_SubTypeId) :
                new ObjectParameter("i_SubTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserSpeciality_SelectByPatientUserId", i_AppUserIdParameter, i_PatientUserIdParameter, i_SpecialityIdParameter, d_FromDateParameter, d_ToDateParameter, b_IsByCostParameter, i_TypeParameter, i_SubTypeIdParameter);
        }
    
        public virtual int usp_UsersSecurityRoles_Delete(Nullable<int> i_AppUserId, Nullable<int> i_ProviderID, Nullable<int> i_SecurityRoleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_SecurityRoleIdParameter = i_SecurityRoleId.HasValue ?
                new ObjectParameter("i_SecurityRoleId", i_SecurityRoleId) :
                new ObjectParameter("i_SecurityRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UsersSecurityRoles_Delete", i_AppUserIdParameter, i_ProviderIDParameter, i_SecurityRoleIdParameter);
        }
    
        public virtual int usp_UsersSecurityRoles_Insert(Nullable<int> i_AppUserId, Nullable<int> i_ProviderID, Nullable<int> i_SecurityRoleId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ProviderIDParameter = i_ProviderID.HasValue ?
                new ObjectParameter("i_ProviderID", i_ProviderID) :
                new ObjectParameter("i_ProviderID", typeof(int));
    
            var i_SecurityRoleIdParameter = i_SecurityRoleId.HasValue ?
                new ObjectParameter("i_SecurityRoleId", i_SecurityRoleId) :
                new ObjectParameter("i_SecurityRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UsersSecurityRoles_Insert", i_AppUserIdParameter, i_ProviderIDParameter, i_SecurityRoleIdParameter);
        }
    
        public virtual ObjectResult<usp_UsersSecurityRoles_Select_ByUserId_Result> usp_UsersSecurityRoles_Select_ByUserId(Nullable<int> i_AppUserId, Nullable<int> i_UserId, Nullable<bool> i_IsPatient)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_UserIdParameter = i_UserId.HasValue ?
                new ObjectParameter("i_UserId", i_UserId) :
                new ObjectParameter("i_UserId", typeof(int));
    
            var i_IsPatientParameter = i_IsPatient.HasValue ?
                new ObjectParameter("i_IsPatient", i_IsPatient) :
                new ObjectParameter("i_IsPatient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UsersSecurityRoles_Select_ByUserId_Result>("usp_UsersSecurityRoles_Select_ByUserId", i_AppUserIdParameter, i_UserIdParameter, i_IsPatientParameter);
        }
    
        public virtual ObjectResult<usp_UserStatus_Select_DD_Result> usp_UserStatus_Select_DD(Nullable<int> i_AppUserId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserStatus_Select_DD_Result>("usp_UserStatus_Select_DD", i_AppUserIdParameter);
        }
    
        public virtual int usp_UserSubstanceAbuse_InsertUpdate(Nullable<int> i_AppUserId, Nullable<int> i_SubstanceAbuseId, Nullable<int> i_PatientUserId, string v_SubstanceUse, Nullable<short> i_NoOfYears, string v_StatusCode, string v_Comments, ObjectParameter o_UserSubstanceAbuseId, Nullable<int> i_UserSubstanceAbuseId, Nullable<int> i_DataSourceId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_SubstanceAbuseIdParameter = i_SubstanceAbuseId.HasValue ?
                new ObjectParameter("i_SubstanceAbuseId", i_SubstanceAbuseId) :
                new ObjectParameter("i_SubstanceAbuseId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_SubstanceUseParameter = v_SubstanceUse != null ?
                new ObjectParameter("v_SubstanceUse", v_SubstanceUse) :
                new ObjectParameter("v_SubstanceUse", typeof(string));
    
            var i_NoOfYearsParameter = i_NoOfYears.HasValue ?
                new ObjectParameter("i_NoOfYears", i_NoOfYears) :
                new ObjectParameter("i_NoOfYears", typeof(short));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            var v_CommentsParameter = v_Comments != null ?
                new ObjectParameter("v_Comments", v_Comments) :
                new ObjectParameter("v_Comments", typeof(string));
    
            var i_UserSubstanceAbuseIdParameter = i_UserSubstanceAbuseId.HasValue ?
                new ObjectParameter("i_UserSubstanceAbuseId", i_UserSubstanceAbuseId) :
                new ObjectParameter("i_UserSubstanceAbuseId", typeof(int));
    
            var i_DataSourceIdParameter = i_DataSourceId.HasValue ?
                new ObjectParameter("i_DataSourceId", i_DataSourceId) :
                new ObjectParameter("i_DataSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UserSubstanceAbuse_InsertUpdate", i_AppUserIdParameter, i_SubstanceAbuseIdParameter, i_PatientUserIdParameter, v_SubstanceUseParameter, i_NoOfYearsParameter, v_StatusCodeParameter, v_CommentsParameter, o_UserSubstanceAbuseId, i_UserSubstanceAbuseIdParameter, i_DataSourceIdParameter);
        }
    
        public virtual ObjectResult<usp_UserSubstanceAbuse_Select_Result> usp_UserSubstanceAbuse_Select(Nullable<int> i_AppUserId, Nullable<int> i_PatientUserId, string v_StatusCode)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_PatientUserIdParameter = i_PatientUserId.HasValue ?
                new ObjectParameter("i_PatientUserId", i_PatientUserId) :
                new ObjectParameter("i_PatientUserId", typeof(int));
    
            var v_StatusCodeParameter = v_StatusCode != null ?
                new ObjectParameter("v_StatusCode", v_StatusCode) :
                new ObjectParameter("v_StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserSubstanceAbuse_Select_Result>("usp_UserSubstanceAbuse_Select", i_AppUserIdParameter, i_PatientUserIdParameter, v_StatusCodeParameter);
        }
    
        public virtual int usp_usp_MetricReportConfiguration_Update(Nullable<int> i_AppUserId, Nullable<int> i_ReportFrequencyId)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var i_ReportFrequencyIdParameter = i_ReportFrequencyId.HasValue ?
                new ObjectParameter("i_ReportFrequencyId", i_ReportFrequencyId) :
                new ObjectParameter("i_ReportFrequencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_usp_MetricReportConfiguration_Update", i_AppUserIdParameter, i_ReportFrequencyIdParameter);
        }
    
        public virtual ObjectResult<string> usp_ValidateSQL_Statement(Nullable<int> i_AppUserId, string v_SqlStatement)
        {
            var i_AppUserIdParameter = i_AppUserId.HasValue ?
                new ObjectParameter("i_AppUserId", i_AppUserId) :
                new ObjectParameter("i_AppUserId", typeof(int));
    
            var v_SqlStatementParameter = v_SqlStatement != null ?
                new ObjectParameter("v_SqlStatement", v_SqlStatement) :
                new ObjectParameter("v_SqlStatement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ValidateSQL_Statement", i_AppUserIdParameter, v_SqlStatementParameter);
        }
    }
}
